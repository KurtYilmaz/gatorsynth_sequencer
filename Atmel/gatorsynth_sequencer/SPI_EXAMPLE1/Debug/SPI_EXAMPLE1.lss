
SPI_EXAMPLE1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005d44  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00405d44  00405d44  00015d44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     0000087c  20000000  00405d4c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000118  2000087c  004065c8  0002087c  2**2
                  ALLOC
  4 .stack        00003004  20000994  004066e0  0002087c  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  0002087c  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000208a6  2**0
                  CONTENTS, READONLY
  7 .debug_info   00008634  00000000  00000000  000208ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001890  00000000  00000000  00028f33  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000328e  00000000  00000000  0002a7c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000006b8  00000000  00000000  0002da51  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000608  00000000  00000000  0002e109  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000fc2a  00000000  00000000  0002e711  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00008cd6  00000000  00000000  0003e33b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0004227b  00000000  00000000  00047011  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001f3c  00000000  00000000  0008928c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <_sfixed>:
  400000:	20003998 	.word	0x20003998
  400004:	00400609 	.word	0x00400609
  400008:	00400605 	.word	0x00400605
  40000c:	00400605 	.word	0x00400605
  400010:	00400605 	.word	0x00400605
  400014:	00400605 	.word	0x00400605
  400018:	00400605 	.word	0x00400605
	...
  40002c:	00400605 	.word	0x00400605
  400030:	00400605 	.word	0x00400605
  400034:	00000000 	.word	0x00000000
  400038:	00400605 	.word	0x00400605
  40003c:	00400605 	.word	0x00400605
  400040:	00400605 	.word	0x00400605
  400044:	00400605 	.word	0x00400605
  400048:	00400605 	.word	0x00400605
  40004c:	00400605 	.word	0x00400605
  400050:	00400605 	.word	0x00400605
  400054:	00400605 	.word	0x00400605
  400058:	00400605 	.word	0x00400605
  40005c:	00000000 	.word	0x00000000
  400060:	00400605 	.word	0x00400605
  400064:	00400605 	.word	0x00400605
  400068:	00400605 	.word	0x00400605
  40006c:	00400605 	.word	0x00400605
  400070:	00400605 	.word	0x00400605
  400074:	00400605 	.word	0x00400605
  400078:	00400605 	.word	0x00400605
  40007c:	00400605 	.word	0x00400605
  400080:	00400605 	.word	0x00400605
  400084:	00400605 	.word	0x00400605
  400088:	00000000 	.word	0x00000000
  40008c:	00400605 	.word	0x00400605
  400090:	00400605 	.word	0x00400605
  400094:	00400b81 	.word	0x00400b81
  400098:	00400605 	.word	0x00400605
  40009c:	00400605 	.word	0x00400605
  4000a0:	00400605 	.word	0x00400605
  4000a4:	00400605 	.word	0x00400605
  4000a8:	00400605 	.word	0x00400605
  4000ac:	00400605 	.word	0x00400605
  4000b0:	00400605 	.word	0x00400605
  4000b4:	00400605 	.word	0x00400605
  4000b8:	00400605 	.word	0x00400605
  4000bc:	00400605 	.word	0x00400605

004000c0 <__do_global_dtors_aux>:
  4000c0:	b510      	push	{r4, lr}
  4000c2:	4c05      	ldr	r4, [pc, #20]	; (4000d8 <__do_global_dtors_aux+0x18>)
  4000c4:	7823      	ldrb	r3, [r4, #0]
  4000c6:	b933      	cbnz	r3, 4000d6 <__do_global_dtors_aux+0x16>
  4000c8:	4b04      	ldr	r3, [pc, #16]	; (4000dc <__do_global_dtors_aux+0x1c>)
  4000ca:	b113      	cbz	r3, 4000d2 <__do_global_dtors_aux+0x12>
  4000cc:	4804      	ldr	r0, [pc, #16]	; (4000e0 <__do_global_dtors_aux+0x20>)
  4000ce:	f3af 8000 	nop.w
  4000d2:	2301      	movs	r3, #1
  4000d4:	7023      	strb	r3, [r4, #0]
  4000d6:	bd10      	pop	{r4, pc}
  4000d8:	2000087c 	.word	0x2000087c
  4000dc:	00000000 	.word	0x00000000
  4000e0:	00405d4c 	.word	0x00405d4c

004000e4 <frame_dummy>:
  4000e4:	4b08      	ldr	r3, [pc, #32]	; (400108 <frame_dummy+0x24>)
  4000e6:	b510      	push	{r4, lr}
  4000e8:	b11b      	cbz	r3, 4000f2 <frame_dummy+0xe>
  4000ea:	4908      	ldr	r1, [pc, #32]	; (40010c <frame_dummy+0x28>)
  4000ec:	4808      	ldr	r0, [pc, #32]	; (400110 <frame_dummy+0x2c>)
  4000ee:	f3af 8000 	nop.w
  4000f2:	4808      	ldr	r0, [pc, #32]	; (400114 <frame_dummy+0x30>)
  4000f4:	6803      	ldr	r3, [r0, #0]
  4000f6:	b903      	cbnz	r3, 4000fa <frame_dummy+0x16>
  4000f8:	bd10      	pop	{r4, pc}
  4000fa:	4b07      	ldr	r3, [pc, #28]	; (400118 <frame_dummy+0x34>)
  4000fc:	2b00      	cmp	r3, #0
  4000fe:	d0fb      	beq.n	4000f8 <frame_dummy+0x14>
  400100:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400104:	4718      	bx	r3
  400106:	bf00      	nop
  400108:	00000000 	.word	0x00000000
  40010c:	20000880 	.word	0x20000880
  400110:	00405d4c 	.word	0x00405d4c
  400114:	00405d4c 	.word	0x00405d4c
  400118:	00000000 	.word	0x00000000

0040011c <sysclk_init>:

	SystemCoreClockUpdate();
}

void sysclk_init(void)
{
  40011c:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40011e:	480e      	ldr	r0, [pc, #56]	; (400158 <sysclk_init+0x3c>)
  400120:	4b0e      	ldr	r3, [pc, #56]	; (40015c <sysclk_init+0x40>)
  400122:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_4_MHz);
		break;

	case OSC_MAINCK_8M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_8_MHz);
  400124:	2010      	movs	r0, #16
  400126:	4b0e      	ldr	r3, [pc, #56]	; (400160 <sysclk_init+0x44>)
  400128:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  40012a:	4c0e      	ldr	r4, [pc, #56]	; (400164 <sysclk_init+0x48>)
  40012c:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40012e:	2800      	cmp	r0, #0
  400130:	d0fc      	beq.n	40012c <sysclk_init+0x10>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400132:	4b0d      	ldr	r3, [pc, #52]	; (400168 <sysclk_init+0x4c>)
  400134:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400136:	4a0d      	ldr	r2, [pc, #52]	; (40016c <sysclk_init+0x50>)
  400138:	4b0d      	ldr	r3, [pc, #52]	; (400170 <sysclk_init+0x54>)
  40013a:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40013c:	4c0d      	ldr	r4, [pc, #52]	; (400174 <sysclk_init+0x58>)
  40013e:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400140:	2800      	cmp	r0, #0
  400142:	d0fc      	beq.n	40013e <sysclk_init+0x22>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400144:	2010      	movs	r0, #16
  400146:	4b0c      	ldr	r3, [pc, #48]	; (400178 <sysclk_init+0x5c>)
  400148:	4798      	blx	r3
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  40014a:	4b0c      	ldr	r3, [pc, #48]	; (40017c <sysclk_init+0x60>)
  40014c:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40014e:	4802      	ldr	r0, [pc, #8]	; (400158 <sysclk_init+0x3c>)
  400150:	4b02      	ldr	r3, [pc, #8]	; (40015c <sysclk_init+0x40>)
  400152:	4798      	blx	r3
  400154:	bd10      	pop	{r4, pc}
  400156:	bf00      	nop
  400158:	05f5e100 	.word	0x05f5e100
  40015c:	004007b1 	.word	0x004007b1
  400160:	004003ad 	.word	0x004003ad
  400164:	004003f9 	.word	0x004003f9
  400168:	00400409 	.word	0x00400409
  40016c:	20183f01 	.word	0x20183f01
  400170:	400e0400 	.word	0x400e0400
  400174:	00400419 	.word	0x00400419
  400178:	00400345 	.word	0x00400345
  40017c:	004006a1 	.word	0x004006a1

00400180 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
  400180:	b990      	cbnz	r0, 4001a8 <_read+0x28>
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400182:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400186:	460c      	mov	r4, r1
  400188:	4690      	mov	r8, r2

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  40018a:	2a00      	cmp	r2, #0
  40018c:	dd0f      	ble.n	4001ae <_read+0x2e>
  40018e:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400190:	4e08      	ldr	r6, [pc, #32]	; (4001b4 <_read+0x34>)
  400192:	4d09      	ldr	r5, [pc, #36]	; (4001b8 <_read+0x38>)
  400194:	6830      	ldr	r0, [r6, #0]
  400196:	4621      	mov	r1, r4
  400198:	682b      	ldr	r3, [r5, #0]
  40019a:	4798      	blx	r3
		ptr++;
  40019c:	3401      	adds	r4, #1

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  40019e:	42a7      	cmp	r7, r4
  4001a0:	d1f8      	bne.n	400194 <_read+0x14>
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
  4001a2:	4640      	mov	r0, r8
  4001a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
		return -1;
  4001a8:	f04f 30ff 	mov.w	r0, #4294967295
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
	}
	return nChars;
}
  4001ac:	4770      	bx	lr

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  4001ae:	2000      	movs	r0, #0
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
	}
	return nChars;
}
  4001b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4001b4:	2000098c 	.word	0x2000098c
  4001b8:	20000984 	.word	0x20000984

004001bc <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4001bc:	3801      	subs	r0, #1
  4001be:	2802      	cmp	r0, #2
  4001c0:	d815      	bhi.n	4001ee <_write+0x32>
int __attribute__((weak))
_write (int file, const char *ptr, int len);

int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
  4001c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001c6:	460e      	mov	r6, r1
  4001c8:	4614      	mov	r4, r2

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  4001ca:	b19a      	cbz	r2, 4001f4 <_write+0x38>
  4001cc:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4001ce:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400208 <_write+0x4c>
  4001d2:	4f0c      	ldr	r7, [pc, #48]	; (400204 <_write+0x48>)
  4001d4:	f8d8 0000 	ldr.w	r0, [r8]
  4001d8:	f815 1b01 	ldrb.w	r1, [r5], #1
  4001dc:	683b      	ldr	r3, [r7, #0]
  4001de:	4798      	blx	r3
  4001e0:	2800      	cmp	r0, #0
  4001e2:	db0a      	blt.n	4001fa <_write+0x3e>
  4001e4:	1ba8      	subs	r0, r5, r6

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  4001e6:	3c01      	subs	r4, #1
  4001e8:	d1f4      	bne.n	4001d4 <_write+0x18>
  4001ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
  4001ee:	f04f 30ff 	mov.w	r0, #4294967295
			return -1;
		}
		++nChars;
	}
	return nChars;
}
  4001f2:	4770      	bx	lr

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  4001f4:	2000      	movs	r0, #0
  4001f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
  4001fa:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  4001fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400202:	bf00      	nop
  400204:	20000988 	.word	0x20000988
  400208:	2000098c 	.word	0x2000098c

0040020c <board_init>:
		ioport_set_pin_mode(pin, mode);\
		ioport_disable_pin(pin);\
	} while (0)
	
void board_init(void)
{
  40020c:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  40020e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400212:	4b48      	ldr	r3, [pc, #288]	; (400334 <board_init+0x128>)
  400214:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400216:	200b      	movs	r0, #11
  400218:	4c47      	ldr	r4, [pc, #284]	; (400338 <board_init+0x12c>)
  40021a:	47a0      	blx	r4
  40021c:	200c      	movs	r0, #12
  40021e:	47a0      	blx	r4
  400220:	200d      	movs	r0, #13
  400222:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400224:	4b45      	ldr	r3, [pc, #276]	; (40033c <board_init+0x130>)
  400226:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  40022a:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40022c:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400230:	631a      	str	r2, [r3, #48]	; 0x30
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400232:	f5a3 7300 	sub.w	r3, r3, #512	; 0x200
  400236:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40023a:	6159      	str	r1, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40023c:	f8c3 10a0 	str.w	r1, [r3, #160]	; 0xa0
		ioport_port_mask_t mask, ioport_mode_t mode)
{
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
  400240:	6659      	str	r1, [r3, #100]	; 0x64

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  400242:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  400246:	6559      	str	r1, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  400248:	6259      	str	r1, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  40024a:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  40024e:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400250:	f021 4180 	bic.w	r1, r1, #1073741824	; 0x40000000
  400254:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  400256:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400258:	f021 4180 	bic.w	r1, r1, #1073741824	; 0x40000000
  40025c:	6759      	str	r1, [r3, #116]	; 0x74
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40025e:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  400262:	6319      	str	r1, [r3, #48]	; 0x30
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400264:	6119      	str	r1, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400266:	f8c3 10a0 	str.w	r1, [r3, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40026a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40026e:	6319      	str	r1, [r3, #48]	; 0x30
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400270:	6119      	str	r1, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400272:	f8c3 10a0 	str.w	r1, [r3, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400276:	4932      	ldr	r1, [pc, #200]	; (400340 <board_init+0x134>)
  400278:	2008      	movs	r0, #8
  40027a:	6308      	str	r0, [r1, #48]	; 0x30
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  40027c:	6108      	str	r0, [r1, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40027e:	f8c1 00a0 	str.w	r0, [r1, #160]	; 0xa0
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  400282:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  400286:	6619      	str	r1, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  400288:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  40028c:	6559      	str	r1, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  40028e:	6259      	str	r1, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  400290:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  400294:	6f18      	ldr	r0, [r3, #112]	; 0x70
  400296:	f420 60c0 	bic.w	r0, r0, #1536	; 0x600
  40029a:	6718      	str	r0, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  40029c:	6f58      	ldr	r0, [r3, #116]	; 0x74
  40029e:	f420 60c0 	bic.w	r0, r0, #1536	; 0x600
  4002a2:	6758      	str	r0, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4002a4:	6059      	str	r1, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  4002a6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4002aa:	6619      	str	r1, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  4002ac:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  4002b0:	6559      	str	r1, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  4002b2:	6259      	str	r1, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  4002b4:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  4002b8:	6f18      	ldr	r0, [r3, #112]	; 0x70
  4002ba:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
  4002be:	6718      	str	r0, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  4002c0:	6f58      	ldr	r0, [r3, #116]	; 0x74
  4002c2:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
  4002c6:	6758      	str	r0, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4002c8:	6059      	str	r1, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  4002ca:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  4002ce:	6619      	str	r1, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  4002d0:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  4002d4:	6559      	str	r1, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  4002d6:	6259      	str	r1, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  4002d8:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  4002dc:	6f18      	ldr	r0, [r3, #112]	; 0x70
  4002de:	f420 5000 	bic.w	r0, r0, #8192	; 0x2000
  4002e2:	6718      	str	r0, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  4002e4:	6f58      	ldr	r0, [r3, #116]	; 0x74
  4002e6:	f420 5000 	bic.w	r0, r0, #8192	; 0x2000
  4002ea:	6758      	str	r0, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4002ec:	6059      	str	r1, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  4002ee:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  4002f0:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  4002f4:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  4002f6:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  4002f8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  4002fc:	6f19      	ldr	r1, [r3, #112]	; 0x70
  4002fe:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
  400302:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  400304:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400306:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
  40030a:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  40030c:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  40030e:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400312:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  400314:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  400318:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  40031a:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  40031c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  400320:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400322:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400326:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  400328:	6f59      	ldr	r1, [r3, #116]	; 0x74
  40032a:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  40032e:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400330:	605a      	str	r2, [r3, #4]
  400332:	bd10      	pop	{r4, pc}
  400334:	400e1450 	.word	0x400e1450
  400338:	00400429 	.word	0x00400429
  40033c:	400e1000 	.word	0x400e1000
  400340:	400e1200 	.word	0x400e1200

00400344 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400344:	4a18      	ldr	r2, [pc, #96]	; (4003a8 <pmc_switch_mck_to_pllack+0x64>)
  400346:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400348:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  40034c:	4318      	orrs	r0, r3
  40034e:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400350:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400352:	f013 0f08 	tst.w	r3, #8
  400356:	d003      	beq.n	400360 <pmc_switch_mck_to_pllack+0x1c>
  400358:	e009      	b.n	40036e <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40035a:	3b01      	subs	r3, #1
  40035c:	d103      	bne.n	400366 <pmc_switch_mck_to_pllack+0x22>
  40035e:	e01e      	b.n	40039e <pmc_switch_mck_to_pllack+0x5a>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400360:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400364:	4910      	ldr	r1, [pc, #64]	; (4003a8 <pmc_switch_mck_to_pllack+0x64>)
  400366:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400368:	f012 0f08 	tst.w	r2, #8
  40036c:	d0f5      	beq.n	40035a <pmc_switch_mck_to_pllack+0x16>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  40036e:	4a0e      	ldr	r2, [pc, #56]	; (4003a8 <pmc_switch_mck_to_pllack+0x64>)
  400370:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400372:	f023 0303 	bic.w	r3, r3, #3
  400376:	f043 0302 	orr.w	r3, r3, #2
  40037a:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40037c:	6e90      	ldr	r0, [r2, #104]	; 0x68
  40037e:	f010 0008 	ands.w	r0, r0, #8
  400382:	d004      	beq.n	40038e <pmc_switch_mck_to_pllack+0x4a>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
  400384:	2000      	movs	r0, #0
  400386:	4770      	bx	lr
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
  400388:	3b01      	subs	r3, #1
  40038a:	d103      	bne.n	400394 <pmc_switch_mck_to_pllack+0x50>
  40038c:	e009      	b.n	4003a2 <pmc_switch_mck_to_pllack+0x5e>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40038e:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400392:	4905      	ldr	r1, [pc, #20]	; (4003a8 <pmc_switch_mck_to_pllack+0x64>)
  400394:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400396:	f012 0f08 	tst.w	r2, #8
  40039a:	d0f5      	beq.n	400388 <pmc_switch_mck_to_pllack+0x44>
  40039c:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  40039e:	2001      	movs	r0, #1
  4003a0:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  4003a2:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  4003a4:	4770      	bx	lr
  4003a6:	bf00      	nop
  4003a8:	400e0400 	.word	0x400e0400

004003ac <pmc_switch_mainck_to_fastrc>:
 * \retval 2 Invalid frequency.
 */
void pmc_switch_mainck_to_fastrc(uint32_t ul_moscrcf)
{
	/* Enable Fast RC oscillator but DO NOT switch to RC now */
	PMC->CKGR_MOR |= (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN);
  4003ac:	4b11      	ldr	r3, [pc, #68]	; (4003f4 <pmc_switch_mainck_to_fastrc+0x48>)
  4003ae:	6a1a      	ldr	r2, [r3, #32]
  4003b0:	f442 125c 	orr.w	r2, r2, #3604480	; 0x370000
  4003b4:	f042 0208 	orr.w	r2, r2, #8
  4003b8:	621a      	str	r2, [r3, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  4003ba:	461a      	mov	r2, r3
  4003bc:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4003be:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  4003c2:	d0fb      	beq.n	4003bc <pmc_switch_mainck_to_fastrc+0x10>

	/* Change Fast RC oscillator frequency */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  4003c4:	4a0b      	ldr	r2, [pc, #44]	; (4003f4 <pmc_switch_mainck_to_fastrc+0x48>)
  4003c6:	6a13      	ldr	r3, [r2, #32]
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;
  4003c8:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  4003cc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  4003d0:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4003d4:	4303      	orrs	r3, r0

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));

	/* Change Fast RC oscillator frequency */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  4003d6:	6213      	str	r3, [r2, #32]
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  4003d8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4003da:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  4003de:	d0fb      	beq.n	4003d8 <pmc_switch_mainck_to_fastrc+0x2c>

	/* Switch to Fast RC */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  4003e0:	4a04      	ldr	r2, [pc, #16]	; (4003f4 <pmc_switch_mainck_to_fastrc+0x48>)
  4003e2:	6a13      	ldr	r3, [r2, #32]
  4003e4:	f023 739b 	bic.w	r3, r3, #20316160	; 0x1360000
  4003e8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
  4003ec:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4003f0:	6213      	str	r3, [r2, #32]
  4003f2:	4770      	bx	lr
  4003f4:	400e0400 	.word	0x400e0400

004003f8 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4003f8:	4b02      	ldr	r3, [pc, #8]	; (400404 <pmc_osc_is_ready_mainck+0xc>)
  4003fa:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4003fc:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400400:	4770      	bx	lr
  400402:	bf00      	nop
  400404:	400e0400 	.word	0x400e0400

00400408 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400408:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  40040c:	4b01      	ldr	r3, [pc, #4]	; (400414 <pmc_disable_pllack+0xc>)
  40040e:	629a      	str	r2, [r3, #40]	; 0x28
  400410:	4770      	bx	lr
  400412:	bf00      	nop
  400414:	400e0400 	.word	0x400e0400

00400418 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400418:	4b02      	ldr	r3, [pc, #8]	; (400424 <pmc_is_locked_pllack+0xc>)
  40041a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40041c:	f000 0002 	and.w	r0, r0, #2
  400420:	4770      	bx	lr
  400422:	bf00      	nop
  400424:	400e0400 	.word	0x400e0400

00400428 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400428:	281f      	cmp	r0, #31
  40042a:	d80c      	bhi.n	400446 <pmc_enable_periph_clk+0x1e>
		return 1;
	}

	if (ul_id < 32) {
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  40042c:	4b08      	ldr	r3, [pc, #32]	; (400450 <pmc_enable_periph_clk+0x28>)
  40042e:	699a      	ldr	r2, [r3, #24]
  400430:	2301      	movs	r3, #1
  400432:	4083      	lsls	r3, r0
  400434:	4393      	bics	r3, r2
  400436:	d008      	beq.n	40044a <pmc_enable_periph_clk+0x22>
			PMC->PMC_PCER0 = 1 << ul_id;
  400438:	2301      	movs	r3, #1
  40043a:	fa03 f000 	lsl.w	r0, r3, r0
  40043e:	4b04      	ldr	r3, [pc, #16]	; (400450 <pmc_enable_periph_clk+0x28>)
  400440:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400442:	2000      	movs	r0, #0
  400444:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
  400446:	2001      	movs	r0, #1
  400448:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40044a:	2000      	movs	r0, #0
}
  40044c:	4770      	bx	lr
  40044e:	bf00      	nop
  400450:	400e0400 	.word	0x400e0400

00400454 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400454:	b508      	push	{r3, lr}
  400456:	2015      	movs	r0, #21
  400458:	4b01      	ldr	r3, [pc, #4]	; (400460 <spi_enable_clock+0xc>)
  40045a:	4798      	blx	r3
  40045c:	bd08      	pop	{r3, pc}
  40045e:	bf00      	nop
  400460:	00400429 	.word	0x00400429

00400464 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  400464:	6843      	ldr	r3, [r0, #4]
  400466:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  40046a:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  40046c:	6843      	ldr	r3, [r0, #4]
  40046e:	0409      	lsls	r1, r1, #16
  400470:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  400474:	430b      	orrs	r3, r1
  400476:	6043      	str	r3, [r0, #4]
  400478:	4770      	bx	lr
  40047a:	bf00      	nop

0040047c <spi_read>:
 *
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_read(Spi *p_spi, uint16_t *us_data, uint8_t *p_pcs)
{
  40047c:	b410      	push	{r4}
	uint32_t timeout = SPI_TIMEOUT;
	static uint32_t reg_value;

	while (!(p_spi->SPI_SR & SPI_SR_RDRF)) {
  40047e:	f643 2399 	movw	r3, #15001	; 0x3a99
  400482:	e001      	b.n	400488 <spi_read+0xc>
		if (!timeout--) {
  400484:	3b01      	subs	r3, #1
  400486:	d00e      	beq.n	4004a6 <spi_read+0x2a>
spi_status_t spi_read(Spi *p_spi, uint16_t *us_data, uint8_t *p_pcs)
{
	uint32_t timeout = SPI_TIMEOUT;
	static uint32_t reg_value;

	while (!(p_spi->SPI_SR & SPI_SR_RDRF)) {
  400488:	6904      	ldr	r4, [r0, #16]
  40048a:	f014 0f01 	tst.w	r4, #1
  40048e:	d0f9      	beq.n	400484 <spi_read+0x8>
		if (!timeout--) {
			return SPI_ERROR_TIMEOUT;
		}
	}

	reg_value = p_spi->SPI_RDR;
  400490:	6883      	ldr	r3, [r0, #8]
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  400492:	6840      	ldr	r0, [r0, #4]
	if (spi_get_peripheral_select_mode(p_spi)) {
  400494:	f010 0f02 	tst.w	r0, #2
		*p_pcs = (uint8_t) ((reg_value & SPI_RDR_PCS_Msk) >> SPI_RDR_PCS_Pos);
  400498:	bf1c      	itt	ne
  40049a:	f3c3 4003 	ubfxne	r0, r3, #16, #4
  40049e:	7010      	strbne	r0, [r2, #0]
	}
	*us_data = (uint16_t) (reg_value & SPI_RDR_RD_Msk);
  4004a0:	800b      	strh	r3, [r1, #0]

	return SPI_OK;
  4004a2:	2000      	movs	r0, #0
  4004a4:	e000      	b.n	4004a8 <spi_read+0x2c>
	uint32_t timeout = SPI_TIMEOUT;
	static uint32_t reg_value;

	while (!(p_spi->SPI_SR & SPI_SR_RDRF)) {
		if (!timeout--) {
			return SPI_ERROR_TIMEOUT;
  4004a6:	2001      	movs	r0, #1
		*p_pcs = (uint8_t) ((reg_value & SPI_RDR_PCS_Msk) >> SPI_RDR_PCS_Pos);
	}
	*us_data = (uint16_t) (reg_value & SPI_RDR_RD_Msk);

	return SPI_OK;
}
  4004a8:	bc10      	pop	{r4}
  4004aa:	4770      	bx	lr

004004ac <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4004ac:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4004ae:	f643 2499 	movw	r4, #15001	; 0x3a99
  4004b2:	e001      	b.n	4004b8 <spi_write+0xc>
		if (!timeout--) {
  4004b4:	3c01      	subs	r4, #1
  4004b6:	d011      	beq.n	4004dc <spi_write+0x30>
		uint8_t uc_pcs, uint8_t uc_last)
{
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4004b8:	6905      	ldr	r5, [r0, #16]
  4004ba:	f015 0f02 	tst.w	r5, #2
  4004be:	d0f9      	beq.n	4004b4 <spi_write+0x8>
  4004c0:	6844      	ldr	r4, [r0, #4]
		if (!timeout--) {
			return SPI_ERROR_TIMEOUT;
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  4004c2:	f014 0f02 	tst.w	r4, #2
  4004c6:	d006      	beq.n	4004d6 <spi_write+0x2a>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  4004c8:	0412      	lsls	r2, r2, #16
  4004ca:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  4004ce:	4311      	orrs	r1, r2
		if (uc_last) {
  4004d0:	b10b      	cbz	r3, 4004d6 <spi_write+0x2a>
			value |= SPI_TDR_LASTXFER;
  4004d2:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  4004d6:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  4004d8:	2000      	movs	r0, #0
  4004da:	e000      	b.n	4004de <spi_write+0x32>
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
		if (!timeout--) {
			return SPI_ERROR_TIMEOUT;
  4004dc:	2001      	movs	r0, #1
	}

	p_spi->SPI_TDR = value;

	return SPI_OK;
}
  4004de:	bc30      	pop	{r4, r5}
  4004e0:	4770      	bx	lr
  4004e2:	bf00      	nop

004004e4 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  4004e4:	b132      	cbz	r2, 4004f4 <spi_set_clock_polarity+0x10>
  4004e6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  4004ea:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004ec:	f043 0301 	orr.w	r3, r3, #1
  4004f0:	6303      	str	r3, [r0, #48]	; 0x30
  4004f2:	4770      	bx	lr
  4004f4:	eb00 0081 	add.w	r0, r0, r1, lsl #2
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  4004f8:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004fa:	f023 0301 	bic.w	r3, r3, #1
  4004fe:	6303      	str	r3, [r0, #48]	; 0x30
  400500:	4770      	bx	lr
  400502:	bf00      	nop

00400504 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400504:	b132      	cbz	r2, 400514 <spi_set_clock_phase+0x10>
  400506:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  40050a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40050c:	f043 0302 	orr.w	r3, r3, #2
  400510:	6303      	str	r3, [r0, #48]	; 0x30
  400512:	4770      	bx	lr
  400514:	eb00 0081 	add.w	r0, r0, r1, lsl #2
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400518:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40051a:	f023 0302 	bic.w	r3, r3, #2
  40051e:	6303      	str	r3, [r0, #48]	; 0x30
  400520:	4770      	bx	lr
  400522:	bf00      	nop

00400524 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  400524:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  400528:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40052a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  40052e:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  400530:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400532:	431a      	orrs	r2, r3
  400534:	630a      	str	r2, [r1, #48]	; 0x30
  400536:	4770      	bx	lr

00400538 <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  400538:	b16a      	cbz	r2, 400556 <spi_set_baudrate_div+0x1e>
 * \retval is 0 Success.
 * \retval is -1 Error.
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
  40053a:	b410      	push	{r4}
  40053c:	4614      	mov	r4, r2
  40053e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  400542:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400544:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  400548:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  40054a:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  40054c:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  400550:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  400552:	2000      	movs	r0, #0
  400554:	e002      	b.n	40055c <spi_set_baudrate_div+0x24>
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
        return -1;
  400556:	f04f 30ff 	mov.w	r0, #4294967295
  40055a:	4770      	bx	lr

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
    return 0;
}
  40055c:	bc10      	pop	{r4}
  40055e:	4770      	bx	lr

00400560 <spi_set_transfer_delay>:
 * \param uc_dlybs Delay before SPCK (in number of MCK clocks).
 * \param uc_dlybct Delay between consecutive transfers (in number of MCK clocks).
 */
void spi_set_transfer_delay(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_dlybs, uint8_t uc_dlybct)
{
  400560:	b410      	push	{r4}
  400562:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= ~(SPI_CSR_DLYBS_Msk | SPI_CSR_DLYBCT_Msk);
  400566:	6b08      	ldr	r0, [r1, #48]	; 0x30
  400568:	b280      	uxth	r0, r0
  40056a:	6308      	str	r0, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_DLYBS(uc_dlybs)
  40056c:	6b0c      	ldr	r4, [r1, #48]	; 0x30
  40056e:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
  400572:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
  400576:	630a      	str	r2, [r1, #48]	; 0x30
			| SPI_CSR_DLYBCT(uc_dlybct);
}
  400578:	bc10      	pop	{r4}
  40057a:	4770      	bx	lr

0040057c <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  40057c:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  40057e:	23ac      	movs	r3, #172	; 0xac
  400580:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  400582:	680b      	ldr	r3, [r1, #0]
  400584:	684a      	ldr	r2, [r1, #4]
  400586:	fbb3 f3f2 	udiv	r3, r3, r2
  40058a:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  40058c:	1e5c      	subs	r4, r3, #1
  40058e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  400592:	4294      	cmp	r4, r2
  400594:	d80a      	bhi.n	4005ac <uart_init+0x30>
		return 1;

	p_uart->UART_BRGR = cd;
  400596:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  400598:	688b      	ldr	r3, [r1, #8]
  40059a:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  40059c:	f240 2302 	movw	r3, #514	; 0x202
  4005a0:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  4005a4:	2350      	movs	r3, #80	; 0x50
  4005a6:	6003      	str	r3, [r0, #0]

	return 0;
  4005a8:	2000      	movs	r0, #0
  4005aa:	e000      	b.n	4005ae <uart_init+0x32>

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
		return 1;
  4005ac:	2001      	movs	r0, #1

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;

	return 0;
}
  4005ae:	bc10      	pop	{r4}
  4005b0:	4770      	bx	lr
  4005b2:	bf00      	nop

004005b4 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  4005b4:	6943      	ldr	r3, [r0, #20]
  4005b6:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  4005ba:	bf1a      	itte	ne
  4005bc:	61c1      	strne	r1, [r0, #28]
	return 0;
  4005be:	2000      	movne	r0, #0
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
		return 1;
  4005c0:	2001      	moveq	r0, #1

	/* Send character */
	p_uart->UART_THR = uc_data;
	return 0;
}
  4005c2:	4770      	bx	lr

004005c4 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  4005c4:	6943      	ldr	r3, [r0, #20]
  4005c6:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  4005ca:	bf1d      	ittte	ne
  4005cc:	6983      	ldrne	r3, [r0, #24]
  4005ce:	700b      	strbne	r3, [r1, #0]
	return 0;
  4005d0:	2000      	movne	r0, #0
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
		return 1;
  4005d2:	2001      	moveq	r0, #1

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
	return 0;
}
  4005d4:	4770      	bx	lr
  4005d6:	bf00      	nop

004005d8 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  4005d8:	6943      	ldr	r3, [r0, #20]
  4005da:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  4005de:	bf1d      	ittte	ne
  4005e0:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  4005e4:	61c1      	strne	r1, [r0, #28]
	return 0;
  4005e6:	2000      	movne	r0, #0
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
		return 1;
  4005e8:	2001      	moveq	r0, #1
	}

	p_usart->US_THR = US_THR_TXCHR(c);
	return 0;
}
  4005ea:	4770      	bx	lr

004005ec <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  4005ec:	6943      	ldr	r3, [r0, #20]
  4005ee:	f013 0f01 	tst.w	r3, #1
  4005f2:	d005      	beq.n	400600 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  4005f4:	6983      	ldr	r3, [r0, #24]
  4005f6:	f3c3 0308 	ubfx	r3, r3, #0, #9
  4005fa:	600b      	str	r3, [r1, #0]

	return 0;
  4005fc:	2000      	movs	r0, #0
  4005fe:	4770      	bx	lr
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
		return 1;
  400600:	2001      	movs	r0, #1

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;

	return 0;
}
  400602:	4770      	bx	lr

00400604 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400604:	e7fe      	b.n	400604 <Dummy_Handler>
  400606:	bf00      	nop

00400608 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  400608:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
  40060a:	4b19      	ldr	r3, [pc, #100]	; (400670 <Reset_Handler+0x68>)
  40060c:	4a19      	ldr	r2, [pc, #100]	; (400674 <Reset_Handler+0x6c>)
  40060e:	429a      	cmp	r2, r3
  400610:	d003      	beq.n	40061a <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
  400612:	4b19      	ldr	r3, [pc, #100]	; (400678 <Reset_Handler+0x70>)
  400614:	4a16      	ldr	r2, [pc, #88]	; (400670 <Reset_Handler+0x68>)
  400616:	429a      	cmp	r2, r3
  400618:	d304      	bcc.n	400624 <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  40061a:	4b18      	ldr	r3, [pc, #96]	; (40067c <Reset_Handler+0x74>)
  40061c:	4a18      	ldr	r2, [pc, #96]	; (400680 <Reset_Handler+0x78>)
  40061e:	429a      	cmp	r2, r3
  400620:	d30f      	bcc.n	400642 <Reset_Handler+0x3a>
  400622:	e01a      	b.n	40065a <Reset_Handler+0x52>
  400624:	4912      	ldr	r1, [pc, #72]	; (400670 <Reset_Handler+0x68>)
  400626:	4b17      	ldr	r3, [pc, #92]	; (400684 <Reset_Handler+0x7c>)
  400628:	1a5b      	subs	r3, r3, r1
  40062a:	f023 0303 	bic.w	r3, r3, #3
  40062e:	3304      	adds	r3, #4
  400630:	4a10      	ldr	r2, [pc, #64]	; (400674 <Reset_Handler+0x6c>)
  400632:	4413      	add	r3, r2
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
			*pDest++ = *pSrc++;
  400634:	f852 0b04 	ldr.w	r0, [r2], #4
  400638:	f841 0b04 	str.w	r0, [r1], #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
  40063c:	429a      	cmp	r2, r3
  40063e:	d1f9      	bne.n	400634 <Reset_Handler+0x2c>
  400640:	e7eb      	b.n	40061a <Reset_Handler+0x12>
  400642:	4b11      	ldr	r3, [pc, #68]	; (400688 <Reset_Handler+0x80>)
  400644:	4a11      	ldr	r2, [pc, #68]	; (40068c <Reset_Handler+0x84>)
  400646:	1ad2      	subs	r2, r2, r3
  400648:	f022 0203 	bic.w	r2, r2, #3
  40064c:	441a      	add	r2, r3
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  40064e:	3b04      	subs	r3, #4
		*pDest++ = 0;
  400650:	2100      	movs	r1, #0
  400652:	f843 1b04 	str.w	r1, [r3], #4
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  400656:	4293      	cmp	r3, r2
  400658:	d1fb      	bne.n	400652 <Reset_Handler+0x4a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  40065a:	4a0d      	ldr	r2, [pc, #52]	; (400690 <Reset_Handler+0x88>)
  40065c:	4b0d      	ldr	r3, [pc, #52]	; (400694 <Reset_Handler+0x8c>)
  40065e:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  400662:	6093      	str	r3, [r2, #8]

	/* Initialize the C library */
	__libc_init_array();
  400664:	4b0c      	ldr	r3, [pc, #48]	; (400698 <Reset_Handler+0x90>)
  400666:	4798      	blx	r3

	/* Branch to main function */
	main();
  400668:	4b0c      	ldr	r3, [pc, #48]	; (40069c <Reset_Handler+0x94>)
  40066a:	4798      	blx	r3
  40066c:	e7fe      	b.n	40066c <Reset_Handler+0x64>
  40066e:	bf00      	nop
  400670:	20000000 	.word	0x20000000
  400674:	00405d4c 	.word	0x00405d4c
  400678:	2000087c 	.word	0x2000087c
  40067c:	20000994 	.word	0x20000994
  400680:	2000087c 	.word	0x2000087c
  400684:	2000087b 	.word	0x2000087b
  400688:	20000880 	.word	0x20000880
  40068c:	20000997 	.word	0x20000997
  400690:	e000ed00 	.word	0xe000ed00
  400694:	00400000 	.word	0x00400000
  400698:	004010c9 	.word	0x004010c9
  40069c:	00400d05 	.word	0x00400d05

004006a0 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) {
  4006a0:	4b3c      	ldr	r3, [pc, #240]	; (400794 <SystemCoreClockUpdate+0xf4>)
  4006a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4006a4:	f003 0303 	and.w	r3, r3, #3
  4006a8:	2b01      	cmp	r3, #1
  4006aa:	d00f      	beq.n	4006cc <SystemCoreClockUpdate+0x2c>
  4006ac:	b113      	cbz	r3, 4006b4 <SystemCoreClockUpdate+0x14>
  4006ae:	2b02      	cmp	r3, #2
  4006b0:	d029      	beq.n	400706 <SystemCoreClockUpdate+0x66>
  4006b2:	e057      	b.n	400764 <SystemCoreClockUpdate+0xc4>
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
  4006b4:	4b38      	ldr	r3, [pc, #224]	; (400798 <SystemCoreClockUpdate+0xf8>)
  4006b6:	695b      	ldr	r3, [r3, #20]
  4006b8:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4006bc:	bf14      	ite	ne
  4006be:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4006c2:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4006c6:	4b35      	ldr	r3, [pc, #212]	; (40079c <SystemCoreClockUpdate+0xfc>)
  4006c8:	601a      	str	r2, [r3, #0]
  4006ca:	e04b      	b.n	400764 <SystemCoreClockUpdate+0xc4>
		}
		break;

	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
  4006cc:	4b31      	ldr	r3, [pc, #196]	; (400794 <SystemCoreClockUpdate+0xf4>)
  4006ce:	6a1b      	ldr	r3, [r3, #32]
  4006d0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4006d4:	d003      	beq.n	4006de <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4006d6:	4a32      	ldr	r2, [pc, #200]	; (4007a0 <SystemCoreClockUpdate+0x100>)
  4006d8:	4b30      	ldr	r3, [pc, #192]	; (40079c <SystemCoreClockUpdate+0xfc>)
  4006da:	601a      	str	r2, [r3, #0]
  4006dc:	e042      	b.n	400764 <SystemCoreClockUpdate+0xc4>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4006de:	4a31      	ldr	r2, [pc, #196]	; (4007a4 <SystemCoreClockUpdate+0x104>)
  4006e0:	4b2e      	ldr	r3, [pc, #184]	; (40079c <SystemCoreClockUpdate+0xfc>)
  4006e2:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
  4006e4:	4b2b      	ldr	r3, [pc, #172]	; (400794 <SystemCoreClockUpdate+0xf4>)
  4006e6:	6a1b      	ldr	r3, [r3, #32]
  4006e8:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4006ec:	2b10      	cmp	r3, #16
  4006ee:	d002      	beq.n	4006f6 <SystemCoreClockUpdate+0x56>
  4006f0:	2b20      	cmp	r3, #32
  4006f2:	d004      	beq.n	4006fe <SystemCoreClockUpdate+0x5e>
  4006f4:	e036      	b.n	400764 <SystemCoreClockUpdate+0xc4>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;

			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
  4006f6:	4a2c      	ldr	r2, [pc, #176]	; (4007a8 <SystemCoreClockUpdate+0x108>)
  4006f8:	4b28      	ldr	r3, [pc, #160]	; (40079c <SystemCoreClockUpdate+0xfc>)
  4006fa:	601a      	str	r2, [r3, #0]
				break;
  4006fc:	e032      	b.n	400764 <SystemCoreClockUpdate+0xc4>

			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
  4006fe:	4a28      	ldr	r2, [pc, #160]	; (4007a0 <SystemCoreClockUpdate+0x100>)
  400700:	4b26      	ldr	r3, [pc, #152]	; (40079c <SystemCoreClockUpdate+0xfc>)
  400702:	601a      	str	r2, [r3, #0]
				break;
  400704:	e02e      	b.n	400764 <SystemCoreClockUpdate+0xc4>
			}
		}
		break;

	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
  400706:	4b23      	ldr	r3, [pc, #140]	; (400794 <SystemCoreClockUpdate+0xf4>)
  400708:	6a1b      	ldr	r3, [r3, #32]
  40070a:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40070e:	d003      	beq.n	400718 <SystemCoreClockUpdate+0x78>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
  400710:	4a23      	ldr	r2, [pc, #140]	; (4007a0 <SystemCoreClockUpdate+0x100>)
  400712:	4b22      	ldr	r3, [pc, #136]	; (40079c <SystemCoreClockUpdate+0xfc>)
  400714:	601a      	str	r2, [r3, #0]
  400716:	e012      	b.n	40073e <SystemCoreClockUpdate+0x9e>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400718:	4a22      	ldr	r2, [pc, #136]	; (4007a4 <SystemCoreClockUpdate+0x104>)
  40071a:	4b20      	ldr	r3, [pc, #128]	; (40079c <SystemCoreClockUpdate+0xfc>)
  40071c:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
  40071e:	4b1d      	ldr	r3, [pc, #116]	; (400794 <SystemCoreClockUpdate+0xf4>)
  400720:	6a1b      	ldr	r3, [r3, #32]
  400722:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400726:	2b10      	cmp	r3, #16
  400728:	d002      	beq.n	400730 <SystemCoreClockUpdate+0x90>
  40072a:	2b20      	cmp	r3, #32
  40072c:	d004      	beq.n	400738 <SystemCoreClockUpdate+0x98>
  40072e:	e006      	b.n	40073e <SystemCoreClockUpdate+0x9e>
				/* So the 4MHz RC selection is forbidden */
				Assert(false);
				break;

			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
  400730:	4a1d      	ldr	r2, [pc, #116]	; (4007a8 <SystemCoreClockUpdate+0x108>)
  400732:	4b1a      	ldr	r3, [pc, #104]	; (40079c <SystemCoreClockUpdate+0xfc>)
  400734:	601a      	str	r2, [r3, #0]
				break;
  400736:	e002      	b.n	40073e <SystemCoreClockUpdate+0x9e>

			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
  400738:	4a19      	ldr	r2, [pc, #100]	; (4007a0 <SystemCoreClockUpdate+0x100>)
  40073a:	4b18      	ldr	r3, [pc, #96]	; (40079c <SystemCoreClockUpdate+0xfc>)
  40073c:	601a      	str	r2, [r3, #0]
			default:
				break;
			}
		}

		if ((uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  40073e:	4b15      	ldr	r3, [pc, #84]	; (400794 <SystemCoreClockUpdate+0xf4>)
  400740:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400742:	f003 0303 	and.w	r3, r3, #3
  400746:	2b02      	cmp	r3, #2
  400748:	d10c      	bne.n	400764 <SystemCoreClockUpdate+0xc4>
				PMC_MCKR_CSS_PLLA_CLK) {
			SystemCoreClock *=
					((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  40074a:	4a12      	ldr	r2, [pc, #72]	; (400794 <SystemCoreClockUpdate+0xf4>)
  40074c:	6a93      	ldr	r3, [r2, #40]	; 0x28
					>> CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  40074e:	6a92      	ldr	r2, [r2, #40]	; 0x28
  400750:	4812      	ldr	r0, [pc, #72]	; (40079c <SystemCoreClockUpdate+0xfc>)
  400752:	f3c3 410a 	ubfx	r1, r3, #16, #11
  400756:	6803      	ldr	r3, [r0, #0]
  400758:	fb01 3303 	mla	r3, r1, r3, r3
  40075c:	b2d2      	uxtb	r2, r2
  40075e:	fbb3 f3f2 	udiv	r3, r3, r2
  400762:	6003      	str	r3, [r0, #0]

	default:
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
  400764:	4b0b      	ldr	r3, [pc, #44]	; (400794 <SystemCoreClockUpdate+0xf4>)
  400766:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400768:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40076c:	2b70      	cmp	r3, #112	; 0x70
  40076e:	d107      	bne.n	400780 <SystemCoreClockUpdate+0xe0>
		SystemCoreClock /= 3U;
  400770:	4a0a      	ldr	r2, [pc, #40]	; (40079c <SystemCoreClockUpdate+0xfc>)
  400772:	6813      	ldr	r3, [r2, #0]
  400774:	490d      	ldr	r1, [pc, #52]	; (4007ac <SystemCoreClockUpdate+0x10c>)
  400776:	fba1 1303 	umull	r1, r3, r1, r3
  40077a:	085b      	lsrs	r3, r3, #1
  40077c:	6013      	str	r3, [r2, #0]
  40077e:	4770      	bx	lr
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >>
  400780:	4b04      	ldr	r3, [pc, #16]	; (400794 <SystemCoreClockUpdate+0xf4>)
  400782:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400784:	4905      	ldr	r1, [pc, #20]	; (40079c <SystemCoreClockUpdate+0xfc>)
  400786:	f3c3 1202 	ubfx	r2, r3, #4, #3
  40078a:	680b      	ldr	r3, [r1, #0]
  40078c:	40d3      	lsrs	r3, r2
  40078e:	600b      	str	r3, [r1, #0]
  400790:	4770      	bx	lr
  400792:	bf00      	nop
  400794:	400e0400 	.word	0x400e0400
  400798:	400e1410 	.word	0x400e1410
  40079c:	20000000 	.word	0x20000000
  4007a0:	00b71b00 	.word	0x00b71b00
  4007a4:	003d0900 	.word	0x003d0900
  4007a8:	007a1200 	.word	0x007a1200
  4007ac:	aaaaaaab 	.word	0xaaaaaaab

004007b0 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
  4007b0:	4b0f      	ldr	r3, [pc, #60]	; (4007f0 <system_init_flash+0x40>)
  4007b2:	4298      	cmp	r0, r3
  4007b4:	d804      	bhi.n	4007c0 <system_init_flash+0x10>
		EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4007b6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4007ba:	4b0e      	ldr	r3, [pc, #56]	; (4007f4 <system_init_flash+0x44>)
  4007bc:	601a      	str	r2, [r3, #0]
  4007be:	4770      	bx	lr
	} else {
		if (ul_clk < CHIP_FREQ_FWS_1) {
  4007c0:	4b0d      	ldr	r3, [pc, #52]	; (4007f8 <system_init_flash+0x48>)
  4007c2:	4298      	cmp	r0, r3
  4007c4:	d803      	bhi.n	4007ce <system_init_flash+0x1e>
			EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4007c6:	4a0d      	ldr	r2, [pc, #52]	; (4007fc <system_init_flash+0x4c>)
  4007c8:	4b0a      	ldr	r3, [pc, #40]	; (4007f4 <system_init_flash+0x44>)
  4007ca:	601a      	str	r2, [r3, #0]
  4007cc:	4770      	bx	lr
		} else {
			if (ul_clk < CHIP_FREQ_FWS_2) {
  4007ce:	4b0c      	ldr	r3, [pc, #48]	; (400800 <system_init_flash+0x50>)
  4007d0:	4298      	cmp	r0, r3
  4007d2:	d803      	bhi.n	4007dc <system_init_flash+0x2c>
				EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4007d4:	4a0b      	ldr	r2, [pc, #44]	; (400804 <system_init_flash+0x54>)
  4007d6:	4b07      	ldr	r3, [pc, #28]	; (4007f4 <system_init_flash+0x44>)
  4007d8:	601a      	str	r2, [r3, #0]
  4007da:	4770      	bx	lr
			} else {
				if (ul_clk < CHIP_FREQ_FWS_3) {
  4007dc:	4b0a      	ldr	r3, [pc, #40]	; (400808 <system_init_flash+0x58>)
  4007de:	4298      	cmp	r0, r3
					EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4007e0:	bf94      	ite	ls
  4007e2:	4a0a      	ldrls	r2, [pc, #40]	; (40080c <system_init_flash+0x5c>)
				} else {
					EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4007e4:	f04f 2204 	movhi.w	r2, #67109888	; 0x4000400
  4007e8:	4b02      	ldr	r3, [pc, #8]	; (4007f4 <system_init_flash+0x44>)
  4007ea:	601a      	str	r2, [r3, #0]
  4007ec:	4770      	bx	lr
  4007ee:	bf00      	nop
  4007f0:	01312cff 	.word	0x01312cff
  4007f4:	400e0a00 	.word	0x400e0a00
  4007f8:	026259ff 	.word	0x026259ff
  4007fc:	04000100 	.word	0x04000100
  400800:	039386ff 	.word	0x039386ff
  400804:	04000200 	.word	0x04000200
  400808:	04c4b3ff 	.word	0x04c4b3ff
  40080c:	04000300 	.word	0x04000300

00400810 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400810:	4b09      	ldr	r3, [pc, #36]	; (400838 <_sbrk+0x28>)
  400812:	681b      	ldr	r3, [r3, #0]
  400814:	b913      	cbnz	r3, 40081c <_sbrk+0xc>
		heap = (unsigned char *)&_end;
  400816:	4a09      	ldr	r2, [pc, #36]	; (40083c <_sbrk+0x2c>)
  400818:	4b07      	ldr	r3, [pc, #28]	; (400838 <_sbrk+0x28>)
  40081a:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  40081c:	4b06      	ldr	r3, [pc, #24]	; (400838 <_sbrk+0x28>)
  40081e:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400820:	181a      	adds	r2, r3, r0
  400822:	4907      	ldr	r1, [pc, #28]	; (400840 <_sbrk+0x30>)
  400824:	4291      	cmp	r1, r2
  400826:	db04      	blt.n	400832 <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
  400828:	4610      	mov	r0, r2
  40082a:	4a03      	ldr	r2, [pc, #12]	; (400838 <_sbrk+0x28>)
  40082c:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  40082e:	4618      	mov	r0, r3
  400830:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
  400832:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
  400836:	4770      	bx	lr
  400838:	20000898 	.word	0x20000898
  40083c:	20003998 	.word	0x20003998
  400840:	20013ffc 	.word	0x20013ffc

00400844 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400844:	f04f 30ff 	mov.w	r0, #4294967295
  400848:	4770      	bx	lr
  40084a:	bf00      	nop

0040084c <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  40084c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400850:	604b      	str	r3, [r1, #4]

	return 0;
}
  400852:	2000      	movs	r0, #0
  400854:	4770      	bx	lr
  400856:	bf00      	nop

00400858 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400858:	2001      	movs	r0, #1
  40085a:	4770      	bx	lr

0040085c <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  40085c:	2000      	movs	r0, #0
  40085e:	4770      	bx	lr

00400860 <spi_slave_transfer>:
 *
 * \param p_buf Pointer to buffer to transfer.
 * \param size Size of the buffer.
 */
static void spi_slave_transfer(void *p_buf, uint32_t size)
{
  400860:	b510      	push	{r4, lr}
	gs_puc_transfer_buffer = p_buf;
  400862:	4b06      	ldr	r3, [pc, #24]	; (40087c <spi_slave_transfer+0x1c>)
  400864:	6018      	str	r0, [r3, #0]
	gs_ul_transfer_length = size;
  400866:	4b06      	ldr	r3, [pc, #24]	; (400880 <spi_slave_transfer+0x20>)
  400868:	6019      	str	r1, [r3, #0]
	gs_ul_transfer_index = 0;
  40086a:	2200      	movs	r2, #0
  40086c:	4b05      	ldr	r3, [pc, #20]	; (400884 <spi_slave_transfer+0x24>)
  40086e:	601a      	str	r2, [r3, #0]
	spi_write(SPI_SLAVE_BASE, gs_puc_transfer_buffer[gs_ul_transfer_index], 0,
  400870:	4613      	mov	r3, r2
  400872:	7801      	ldrb	r1, [r0, #0]
  400874:	4804      	ldr	r0, [pc, #16]	; (400888 <spi_slave_transfer+0x28>)
  400876:	4c05      	ldr	r4, [pc, #20]	; (40088c <spi_slave_transfer+0x2c>)
  400878:	47a0      	blx	r4
  40087a:	bd10      	pop	{r4, pc}
  40087c:	20000944 	.word	0x20000944
  400880:	200008a8 	.word	0x200008a8
  400884:	2000094c 	.word	0x2000094c
  400888:	40008000 	.word	0x40008000
  40088c:	004004ad 	.word	0x004004ad

00400890 <spi_master_transfer>:

	uint8_t *p_buffer;

	p_buffer = p_buf;

	for (i = 0; i < size; i++) {
  400890:	b309      	cbz	r1, 4008d6 <spi_master_transfer+0x46>
 *
 * \param pbuf Pointer to buffer to transfer.
 * \param size Size of the buffer.
 */
static void spi_master_transfer(void *p_buf, uint32_t size)
{
  400892:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  400896:	b083      	sub	sp, #12
  400898:	4688      	mov	r8, r1
  40089a:	4605      	mov	r5, r0
  40089c:	4480      	add	r8, r0
	uint8_t *p_buffer;

	p_buffer = p_buf;

	for (i = 0; i < size; i++) {
		spi_write(SPI_MASTER_BASE, p_buffer[i], 0, 0);
  40089e:	4c0e      	ldr	r4, [pc, #56]	; (4008d8 <spi_master_transfer+0x48>)
  4008a0:	f8df 9040 	ldr.w	r9, [pc, #64]	; 4008e4 <spi_master_transfer+0x54>
		/* Wait transfer done. */
		while ((spi_read_status(SPI_MASTER_BASE) & SPI_SR_RDRF) == 0);
		spi_read(SPI_MASTER_BASE, &data, &uc_pcs);
  4008a4:	4e0d      	ldr	r6, [pc, #52]	; (4008dc <spi_master_transfer+0x4c>)
  4008a6:	462f      	mov	r7, r5
	uint8_t *p_buffer;

	p_buffer = p_buf;

	for (i = 0; i < size; i++) {
		spi_write(SPI_MASTER_BASE, p_buffer[i], 0, 0);
  4008a8:	2300      	movs	r3, #0
  4008aa:	461a      	mov	r2, r3
  4008ac:	7829      	ldrb	r1, [r5, #0]
  4008ae:	4620      	mov	r0, r4
  4008b0:	47c8      	blx	r9
 *
 * \return SPI status register value.
 */
static inline uint32_t spi_read_status(Spi *p_spi)
{
	return p_spi->SPI_SR;
  4008b2:	6923      	ldr	r3, [r4, #16]
		/* Wait transfer done. */
		while ((spi_read_status(SPI_MASTER_BASE) & SPI_SR_RDRF) == 0);
  4008b4:	f013 0f01 	tst.w	r3, #1
  4008b8:	d0fb      	beq.n	4008b2 <spi_master_transfer+0x22>
		spi_read(SPI_MASTER_BASE, &data, &uc_pcs);
  4008ba:	f10d 0207 	add.w	r2, sp, #7
  4008be:	4631      	mov	r1, r6
  4008c0:	4620      	mov	r0, r4
  4008c2:	4b07      	ldr	r3, [pc, #28]	; (4008e0 <spi_master_transfer+0x50>)
  4008c4:	4798      	blx	r3
		p_buffer[i] = data;
  4008c6:	8833      	ldrh	r3, [r6, #0]
  4008c8:	703b      	strb	r3, [r7, #0]
  4008ca:	3501      	adds	r5, #1

	uint8_t *p_buffer;

	p_buffer = p_buf;

	for (i = 0; i < size; i++) {
  4008cc:	4545      	cmp	r5, r8
  4008ce:	d1ea      	bne.n	4008a6 <spi_master_transfer+0x16>
		/* Wait transfer done. */
		while ((spi_read_status(SPI_MASTER_BASE) & SPI_SR_RDRF) == 0);
		spi_read(SPI_MASTER_BASE, &data, &uc_pcs);
		p_buffer[i] = data;
	}
}
  4008d0:	b003      	add	sp, #12
  4008d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4008d6:	4770      	bx	lr
  4008d8:	40008000 	.word	0x40008000
  4008dc:	2000089c 	.word	0x2000089c
  4008e0:	0040047d 	.word	0x0040047d
  4008e4:	004004ad 	.word	0x004004ad

004008e8 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  4008e8:	b5f0      	push	{r4, r5, r6, r7, lr}
  4008ea:	b083      	sub	sp, #12
  4008ec:	4605      	mov	r5, r0
  4008ee:	460c      	mov	r4, r1
	uint32_t val = 0;
  4008f0:	2300      	movs	r3, #0
  4008f2:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  4008f4:	4b29      	ldr	r3, [pc, #164]	; (40099c <usart_serial_getchar+0xb4>)
  4008f6:	4298      	cmp	r0, r3
  4008f8:	d107      	bne.n	40090a <usart_serial_getchar+0x22>
		while (uart_read((Uart*)p_usart, data));
  4008fa:	461f      	mov	r7, r3
  4008fc:	4e28      	ldr	r6, [pc, #160]	; (4009a0 <usart_serial_getchar+0xb8>)
  4008fe:	4621      	mov	r1, r4
  400900:	4638      	mov	r0, r7
  400902:	47b0      	blx	r6
  400904:	2800      	cmp	r0, #0
  400906:	d1fa      	bne.n	4008fe <usart_serial_getchar+0x16>
  400908:	e015      	b.n	400936 <usart_serial_getchar+0x4e>
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  40090a:	4b26      	ldr	r3, [pc, #152]	; (4009a4 <usart_serial_getchar+0xbc>)
  40090c:	4298      	cmp	r0, r3
  40090e:	d107      	bne.n	400920 <usart_serial_getchar+0x38>
		while (uart_read((Uart*)p_usart, data));
  400910:	461f      	mov	r7, r3
  400912:	4e23      	ldr	r6, [pc, #140]	; (4009a0 <usart_serial_getchar+0xb8>)
  400914:	4621      	mov	r1, r4
  400916:	4638      	mov	r0, r7
  400918:	47b0      	blx	r6
  40091a:	2800      	cmp	r0, #0
  40091c:	d1fa      	bne.n	400914 <usart_serial_getchar+0x2c>
  40091e:	e015      	b.n	40094c <usart_serial_getchar+0x64>
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  400920:	4b21      	ldr	r3, [pc, #132]	; (4009a8 <usart_serial_getchar+0xc0>)
  400922:	4298      	cmp	r0, r3
  400924:	d107      	bne.n	400936 <usart_serial_getchar+0x4e>
		while (uart_read((Uart*)p_usart, data));
  400926:	461f      	mov	r7, r3
  400928:	4e1d      	ldr	r6, [pc, #116]	; (4009a0 <usart_serial_getchar+0xb8>)
  40092a:	4621      	mov	r1, r4
  40092c:	4638      	mov	r0, r7
  40092e:	47b0      	blx	r6
  400930:	2800      	cmp	r0, #0
  400932:	d1fa      	bne.n	40092a <usart_serial_getchar+0x42>
  400934:	e017      	b.n	400966 <usart_serial_getchar+0x7e>
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  400936:	4b1d      	ldr	r3, [pc, #116]	; (4009ac <usart_serial_getchar+0xc4>)
  400938:	429d      	cmp	r5, r3
  40093a:	d107      	bne.n	40094c <usart_serial_getchar+0x64>
		while (uart_read((Uart*)p_usart, data));
  40093c:	461f      	mov	r7, r3
  40093e:	4e18      	ldr	r6, [pc, #96]	; (4009a0 <usart_serial_getchar+0xb8>)
  400940:	4621      	mov	r1, r4
  400942:	4638      	mov	r0, r7
  400944:	47b0      	blx	r6
  400946:	2800      	cmp	r0, #0
  400948:	d1fa      	bne.n	400940 <usart_serial_getchar+0x58>
  40094a:	e019      	b.n	400980 <usart_serial_getchar+0x98>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  40094c:	4b18      	ldr	r3, [pc, #96]	; (4009b0 <usart_serial_getchar+0xc8>)
  40094e:	429d      	cmp	r5, r3
  400950:	d109      	bne.n	400966 <usart_serial_getchar+0x7e>
		while (usart_read(p_usart, &val));
  400952:	461e      	mov	r6, r3
  400954:	4d17      	ldr	r5, [pc, #92]	; (4009b4 <usart_serial_getchar+0xcc>)
  400956:	a901      	add	r1, sp, #4
  400958:	4630      	mov	r0, r6
  40095a:	47a8      	blx	r5
  40095c:	2800      	cmp	r0, #0
  40095e:	d1fa      	bne.n	400956 <usart_serial_getchar+0x6e>
		*data = (uint8_t)(val & 0xFF);
  400960:	9b01      	ldr	r3, [sp, #4]
  400962:	7023      	strb	r3, [r4, #0]
  400964:	e018      	b.n	400998 <usart_serial_getchar+0xb0>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400966:	4b14      	ldr	r3, [pc, #80]	; (4009b8 <usart_serial_getchar+0xd0>)
  400968:	429d      	cmp	r5, r3
  40096a:	d109      	bne.n	400980 <usart_serial_getchar+0x98>
		while (usart_read(p_usart, &val));
  40096c:	461e      	mov	r6, r3
  40096e:	4d11      	ldr	r5, [pc, #68]	; (4009b4 <usart_serial_getchar+0xcc>)
  400970:	a901      	add	r1, sp, #4
  400972:	4630      	mov	r0, r6
  400974:	47a8      	blx	r5
  400976:	2800      	cmp	r0, #0
  400978:	d1fa      	bne.n	400970 <usart_serial_getchar+0x88>
		*data = (uint8_t)(val & 0xFF);
  40097a:	9b01      	ldr	r3, [sp, #4]
  40097c:	7023      	strb	r3, [r4, #0]
  40097e:	e00b      	b.n	400998 <usart_serial_getchar+0xb0>
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  400980:	4b0e      	ldr	r3, [pc, #56]	; (4009bc <usart_serial_getchar+0xd4>)
  400982:	429d      	cmp	r5, r3
  400984:	d108      	bne.n	400998 <usart_serial_getchar+0xb0>
		while (usart_read(p_usart, &val));
  400986:	461e      	mov	r6, r3
  400988:	4d0a      	ldr	r5, [pc, #40]	; (4009b4 <usart_serial_getchar+0xcc>)
  40098a:	a901      	add	r1, sp, #4
  40098c:	4630      	mov	r0, r6
  40098e:	47a8      	blx	r5
  400990:	2800      	cmp	r0, #0
  400992:	d1fa      	bne.n	40098a <usart_serial_getchar+0xa2>
		*data = (uint8_t)(val & 0xFF);
  400994:	9b01      	ldr	r3, [sp, #4]
  400996:	7023      	strb	r3, [r4, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400998:	b003      	add	sp, #12
  40099a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40099c:	400e0600 	.word	0x400e0600
  4009a0:	004005c5 	.word	0x004005c5
  4009a4:	400e0800 	.word	0x400e0800
  4009a8:	40044000 	.word	0x40044000
  4009ac:	40048000 	.word	0x40048000
  4009b0:	40024000 	.word	0x40024000
  4009b4:	004005ed 	.word	0x004005ed
  4009b8:	40028000 	.word	0x40028000
  4009bc:	4002c000 	.word	0x4002c000

004009c0 <usart_serial_putchar>:
 *   \retval 1  The character was written.
 *   \retval 0  The function timed out before the USART transmitter became
 * ready to send.
 */
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
  4009c0:	b570      	push	{r4, r5, r6, lr}
  4009c2:	460c      	mov	r4, r1
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  4009c4:	4b2a      	ldr	r3, [pc, #168]	; (400a70 <usart_serial_putchar+0xb0>)
  4009c6:	4298      	cmp	r0, r3
  4009c8:	d108      	bne.n	4009dc <usart_serial_putchar+0x1c>
		while (uart_write((Uart*)p_usart, c)!=0);
  4009ca:	461e      	mov	r6, r3
  4009cc:	4d29      	ldr	r5, [pc, #164]	; (400a74 <usart_serial_putchar+0xb4>)
  4009ce:	4621      	mov	r1, r4
  4009d0:	4630      	mov	r0, r6
  4009d2:	47a8      	blx	r5
  4009d4:	2800      	cmp	r0, #0
  4009d6:	d1fa      	bne.n	4009ce <usart_serial_putchar+0xe>
		return 1;
  4009d8:	2001      	movs	r0, #1
  4009da:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  4009dc:	4b26      	ldr	r3, [pc, #152]	; (400a78 <usart_serial_putchar+0xb8>)
  4009de:	4298      	cmp	r0, r3
  4009e0:	d108      	bne.n	4009f4 <usart_serial_putchar+0x34>
		while (uart_write((Uart*)p_usart, c)!=0);
  4009e2:	461e      	mov	r6, r3
  4009e4:	4d23      	ldr	r5, [pc, #140]	; (400a74 <usart_serial_putchar+0xb4>)
  4009e6:	4621      	mov	r1, r4
  4009e8:	4630      	mov	r0, r6
  4009ea:	47a8      	blx	r5
  4009ec:	2800      	cmp	r0, #0
  4009ee:	d1fa      	bne.n	4009e6 <usart_serial_putchar+0x26>
		return 1;
  4009f0:	2001      	movs	r0, #1
  4009f2:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  4009f4:	4b21      	ldr	r3, [pc, #132]	; (400a7c <usart_serial_putchar+0xbc>)
  4009f6:	4298      	cmp	r0, r3
  4009f8:	d108      	bne.n	400a0c <usart_serial_putchar+0x4c>
		while (uart_write((Uart*)p_usart, c)!=0);
  4009fa:	461e      	mov	r6, r3
  4009fc:	4d1d      	ldr	r5, [pc, #116]	; (400a74 <usart_serial_putchar+0xb4>)
  4009fe:	4621      	mov	r1, r4
  400a00:	4630      	mov	r0, r6
  400a02:	47a8      	blx	r5
  400a04:	2800      	cmp	r0, #0
  400a06:	d1fa      	bne.n	4009fe <usart_serial_putchar+0x3e>
		return 1;
  400a08:	2001      	movs	r0, #1
  400a0a:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  400a0c:	4b1c      	ldr	r3, [pc, #112]	; (400a80 <usart_serial_putchar+0xc0>)
  400a0e:	4298      	cmp	r0, r3
  400a10:	d108      	bne.n	400a24 <usart_serial_putchar+0x64>
		while (uart_write((Uart*)p_usart, c)!=0);
  400a12:	461e      	mov	r6, r3
  400a14:	4d17      	ldr	r5, [pc, #92]	; (400a74 <usart_serial_putchar+0xb4>)
  400a16:	4621      	mov	r1, r4
  400a18:	4630      	mov	r0, r6
  400a1a:	47a8      	blx	r5
  400a1c:	2800      	cmp	r0, #0
  400a1e:	d1fa      	bne.n	400a16 <usart_serial_putchar+0x56>
		return 1;
  400a20:	2001      	movs	r0, #1
  400a22:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400a24:	4b17      	ldr	r3, [pc, #92]	; (400a84 <usart_serial_putchar+0xc4>)
  400a26:	4298      	cmp	r0, r3
  400a28:	d108      	bne.n	400a3c <usart_serial_putchar+0x7c>
		while (usart_write(p_usart, c)!=0);
  400a2a:	461e      	mov	r6, r3
  400a2c:	4d16      	ldr	r5, [pc, #88]	; (400a88 <usart_serial_putchar+0xc8>)
  400a2e:	4621      	mov	r1, r4
  400a30:	4630      	mov	r0, r6
  400a32:	47a8      	blx	r5
  400a34:	2800      	cmp	r0, #0
  400a36:	d1fa      	bne.n	400a2e <usart_serial_putchar+0x6e>
		return 1;
  400a38:	2001      	movs	r0, #1
  400a3a:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400a3c:	4b13      	ldr	r3, [pc, #76]	; (400a8c <usart_serial_putchar+0xcc>)
  400a3e:	4298      	cmp	r0, r3
  400a40:	d108      	bne.n	400a54 <usart_serial_putchar+0x94>
		while (usart_write(p_usart, c)!=0);
  400a42:	461e      	mov	r6, r3
  400a44:	4d10      	ldr	r5, [pc, #64]	; (400a88 <usart_serial_putchar+0xc8>)
  400a46:	4621      	mov	r1, r4
  400a48:	4630      	mov	r0, r6
  400a4a:	47a8      	blx	r5
  400a4c:	2800      	cmp	r0, #0
  400a4e:	d1fa      	bne.n	400a46 <usart_serial_putchar+0x86>
		return 1;
  400a50:	2001      	movs	r0, #1
  400a52:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  400a54:	4b0e      	ldr	r3, [pc, #56]	; (400a90 <usart_serial_putchar+0xd0>)
  400a56:	4298      	cmp	r0, r3
  400a58:	d108      	bne.n	400a6c <usart_serial_putchar+0xac>
		while (usart_write(p_usart, c)!=0);
  400a5a:	461e      	mov	r6, r3
  400a5c:	4d0a      	ldr	r5, [pc, #40]	; (400a88 <usart_serial_putchar+0xc8>)
  400a5e:	4621      	mov	r1, r4
  400a60:	4630      	mov	r0, r6
  400a62:	47a8      	blx	r5
  400a64:	2800      	cmp	r0, #0
  400a66:	d1fa      	bne.n	400a5e <usart_serial_putchar+0x9e>
		return 1;
  400a68:	2001      	movs	r0, #1
  400a6a:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
	}
# endif
#endif /* ifdef USART */

	return 0;
  400a6c:	2000      	movs	r0, #0
}
  400a6e:	bd70      	pop	{r4, r5, r6, pc}
  400a70:	400e0600 	.word	0x400e0600
  400a74:	004005b5 	.word	0x004005b5
  400a78:	400e0800 	.word	0x400e0800
  400a7c:	40044000 	.word	0x40044000
  400a80:	40048000 	.word	0x40048000
  400a84:	40024000 	.word	0x40024000
  400a88:	004005d9 	.word	0x004005d9
  400a8c:	40028000 	.word	0x40028000
  400a90:	4002c000 	.word	0x4002c000

00400a94 <display_menu>:

/**
 * \brief Display the user menu on the terminal.
 */
static void display_menu(void)
{
  400a94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint32_t i;

	puts("\n\rMenu :\n\r"
  400a96:	4809      	ldr	r0, [pc, #36]	; (400abc <display_menu+0x28>)
  400a98:	4b09      	ldr	r3, [pc, #36]	; (400ac0 <display_menu+0x2c>)
  400a9a:	4798      	blx	r3
  400a9c:	4d09      	ldr	r5, [pc, #36]	; (400ac4 <display_menu+0x30>)
			"------\r");

	for (i = 0; i < NUM_SPCK_CONFIGURATIONS; i++) {
  400a9e:	2400      	movs	r4, #0
		printf("  %u: Set SPCK = %7lu Hz\n\r", (unsigned)i,
  400aa0:	4f09      	ldr	r7, [pc, #36]	; (400ac8 <display_menu+0x34>)
  400aa2:	4e0a      	ldr	r6, [pc, #40]	; (400acc <display_menu+0x38>)
  400aa4:	f855 2b04 	ldr.w	r2, [r5], #4
  400aa8:	4621      	mov	r1, r4
  400aaa:	4638      	mov	r0, r7
  400aac:	47b0      	blx	r6
	uint32_t i;

	puts("\n\rMenu :\n\r"
			"------\r");

	for (i = 0; i < NUM_SPCK_CONFIGURATIONS; i++) {
  400aae:	3401      	adds	r4, #1
  400ab0:	2c04      	cmp	r4, #4
  400ab2:	d1f7      	bne.n	400aa4 <display_menu+0x10>
		printf("  %u: Set SPCK = %7lu Hz\n\r", (unsigned)i,
			(unsigned long)gs_ul_clock_configurations[i]);
	}
	puts("  t: Perform SPI master\n\r"
  400ab4:	4806      	ldr	r0, [pc, #24]	; (400ad0 <display_menu+0x3c>)
  400ab6:	4b02      	ldr	r3, [pc, #8]	; (400ac0 <display_menu+0x2c>)
  400ab8:	4798      	blx	r3
  400aba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400abc:	004057d8 	.word	0x004057d8
  400ac0:	0040126d 	.word	0x0040126d
  400ac4:	00405b8c 	.word	0x00405b8c
  400ac8:	004057ec 	.word	0x004057ec
  400acc:	00401119 	.word	0x00401119
  400ad0:	00405808 	.word	0x00405808

00400ad4 <spi_master_initialize>:

/**
 * \brief Initialize SPI as master.
 */
static void spi_master_initialize(void)
{
  400ad4:	b538      	push	{r3, r4, r5, lr}
	puts("-I- Initialize SPI as master\r");
  400ad6:	481e      	ldr	r0, [pc, #120]	; (400b50 <spi_master_initialize+0x7c>)
  400ad8:	4b1e      	ldr	r3, [pc, #120]	; (400b54 <spi_master_initialize+0x80>)
  400ada:	4798      	blx	r3
	/* Enable the peripheral and set SPI mode. */
	flexcom_enable(BOARD_FLEXCOM_SPI);
	flexcom_set_opmode(BOARD_FLEXCOM_SPI, FLEXCOM_SPI);
#else
	/* Configure an SPI peripheral. */
	spi_enable_clock(SPI_MASTER_BASE);
  400adc:	4c1e      	ldr	r4, [pc, #120]	; (400b58 <spi_master_initialize+0x84>)
  400ade:	4620      	mov	r0, r4
  400ae0:	4b1e      	ldr	r3, [pc, #120]	; (400b5c <spi_master_initialize+0x88>)
  400ae2:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400ae4:	2302      	movs	r3, #2
  400ae6:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_reset(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SWRST;
  400ae8:	2380      	movs	r3, #128	; 0x80
  400aea:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_lastxfer(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_LASTXFER;
  400aec:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  400af0:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_master_mode(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MSTR;
  400af2:	6863      	ldr	r3, [r4, #4]
  400af4:	f043 0301 	orr.w	r3, r3, #1
  400af8:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_mode_fault_detect(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  400afa:	6863      	ldr	r3, [r4, #4]
  400afc:	f043 0310 	orr.w	r3, r3, #16
  400b00:	6063      	str	r3, [r4, #4]
	spi_disable(SPI_MASTER_BASE);
	spi_reset(SPI_MASTER_BASE);
	spi_set_lastxfer(SPI_MASTER_BASE);
	spi_set_master_mode(SPI_MASTER_BASE);
	spi_disable_mode_fault_detect(SPI_MASTER_BASE);
	spi_set_peripheral_chip_select_value(SPI_MASTER_BASE, SPI_CHIP_PCS);
  400b02:	210e      	movs	r1, #14
  400b04:	4620      	mov	r0, r4
  400b06:	4b16      	ldr	r3, [pc, #88]	; (400b60 <spi_master_initialize+0x8c>)
  400b08:	4798      	blx	r3
	spi_set_clock_polarity(SPI_MASTER_BASE, SPI_CHIP_SEL, SPI_CLK_POLARITY);
  400b0a:	2200      	movs	r2, #0
  400b0c:	4611      	mov	r1, r2
  400b0e:	4620      	mov	r0, r4
  400b10:	4b14      	ldr	r3, [pc, #80]	; (400b64 <spi_master_initialize+0x90>)
  400b12:	4798      	blx	r3
	spi_set_clock_phase(SPI_MASTER_BASE, SPI_CHIP_SEL, SPI_CLK_PHASE);
  400b14:	2200      	movs	r2, #0
  400b16:	4611      	mov	r1, r2
  400b18:	4620      	mov	r0, r4
  400b1a:	4b13      	ldr	r3, [pc, #76]	; (400b68 <spi_master_initialize+0x94>)
  400b1c:	4798      	blx	r3
	spi_set_bits_per_transfer(SPI_MASTER_BASE, SPI_CHIP_SEL,
  400b1e:	2200      	movs	r2, #0
  400b20:	4611      	mov	r1, r2
  400b22:	4620      	mov	r0, r4
  400b24:	4b11      	ldr	r3, [pc, #68]	; (400b6c <spi_master_initialize+0x98>)
  400b26:	4798      	blx	r3
#if (SAM4L)
			sysclk_get_pba_hz()
#else
			sysclk_get_peripheral_hz()
#endif
			/ gs_ul_spi_clock));
  400b28:	4b11      	ldr	r3, [pc, #68]	; (400b70 <spi_master_initialize+0x9c>)
	spi_set_peripheral_chip_select_value(SPI_MASTER_BASE, SPI_CHIP_PCS);
	spi_set_clock_polarity(SPI_MASTER_BASE, SPI_CHIP_SEL, SPI_CLK_POLARITY);
	spi_set_clock_phase(SPI_MASTER_BASE, SPI_CHIP_SEL, SPI_CLK_PHASE);
	spi_set_bits_per_transfer(SPI_MASTER_BASE, SPI_CHIP_SEL,
			SPI_CSR_BITS_8_BIT);
	spi_set_baudrate_div(SPI_MASTER_BASE, SPI_CHIP_SEL,
  400b2a:	681a      	ldr	r2, [r3, #0]
  400b2c:	4b11      	ldr	r3, [pc, #68]	; (400b74 <spi_master_initialize+0xa0>)
  400b2e:	fbb3 f2f2 	udiv	r2, r3, r2
  400b32:	b2d2      	uxtb	r2, r2
  400b34:	2100      	movs	r1, #0
  400b36:	4620      	mov	r0, r4
  400b38:	4b0f      	ldr	r3, [pc, #60]	; (400b78 <spi_master_initialize+0xa4>)
  400b3a:	4798      	blx	r3
			sysclk_get_pba_hz()
#else
			sysclk_get_peripheral_hz()
#endif
			/ gs_ul_spi_clock));
	spi_set_transfer_delay(SPI_MASTER_BASE, SPI_CHIP_SEL, SPI_DLYBS,
  400b3c:	2310      	movs	r3, #16
  400b3e:	2240      	movs	r2, #64	; 0x40
  400b40:	2100      	movs	r1, #0
  400b42:	4620      	mov	r0, r4
  400b44:	4d0d      	ldr	r5, [pc, #52]	; (400b7c <spi_master_initialize+0xa8>)
  400b46:	47a8      	blx	r5
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_enable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400b48:	2301      	movs	r3, #1
  400b4a:	6023      	str	r3, [r4, #0]
  400b4c:	bd38      	pop	{r3, r4, r5, pc}
  400b4e:	bf00      	nop
  400b50:	00405844 	.word	0x00405844
  400b54:	0040126d 	.word	0x0040126d
  400b58:	40008000 	.word	0x40008000
  400b5c:	00400455 	.word	0x00400455
  400b60:	00400465 	.word	0x00400465
  400b64:	004004e5 	.word	0x004004e5
  400b68:	00400505 	.word	0x00400505
  400b6c:	00400525 	.word	0x00400525
  400b70:	20000004 	.word	0x20000004
  400b74:	05f5e100 	.word	0x05f5e100
  400b78:	00400539 	.word	0x00400539
  400b7c:	00400561 	.word	0x00400561

00400b80 <SPI_Handler>:
 *
 * \return SPI status register value.
 */
static inline uint32_t spi_read_status(Spi *p_spi)
{
	return p_spi->SPI_SR;
  400b80:	4b4f      	ldr	r3, [pc, #316]	; (400cc0 <SPI_Handler+0x140>)
  400b82:	691b      	ldr	r3, [r3, #16]
{
	uint32_t new_cmd = 0;
	static uint16_t data;
	uint8_t uc_pcs;

	if (spi_read_status(SPI_SLAVE_BASE) & SPI_SR_RDRF) {
  400b84:	f013 0f01 	tst.w	r3, #1
  400b88:	f000 8099 	beq.w	400cbe <SPI_Handler+0x13e>

/**
 * \brief Interrupt handler for the SPI slave.
 */
void SPI_Handler(void)
{
  400b8c:	b510      	push	{r4, lr}
  400b8e:	b082      	sub	sp, #8
	uint32_t new_cmd = 0;
	static uint16_t data;
	uint8_t uc_pcs;

	if (spi_read_status(SPI_SLAVE_BASE) & SPI_SR_RDRF) {
		spi_read(SPI_SLAVE_BASE, &data, &uc_pcs);
  400b90:	4c4c      	ldr	r4, [pc, #304]	; (400cc4 <SPI_Handler+0x144>)
  400b92:	f10d 0207 	add.w	r2, sp, #7
  400b96:	4621      	mov	r1, r4
  400b98:	4849      	ldr	r0, [pc, #292]	; (400cc0 <SPI_Handler+0x140>)
  400b9a:	4b4b      	ldr	r3, [pc, #300]	; (400cc8 <SPI_Handler+0x148>)
  400b9c:	4798      	blx	r3
		gs_puc_transfer_buffer[gs_ul_transfer_index] = data;
  400b9e:	4b4b      	ldr	r3, [pc, #300]	; (400ccc <SPI_Handler+0x14c>)
  400ba0:	6818      	ldr	r0, [r3, #0]
  400ba2:	4a4b      	ldr	r2, [pc, #300]	; (400cd0 <SPI_Handler+0x150>)
  400ba4:	6813      	ldr	r3, [r2, #0]
  400ba6:	8821      	ldrh	r1, [r4, #0]
  400ba8:	54c1      	strb	r1, [r0, r3]
		gs_ul_transfer_index++;
  400baa:	1c59      	adds	r1, r3, #1
  400bac:	6011      	str	r1, [r2, #0]
		gs_ul_transfer_length--;
  400bae:	4a49      	ldr	r2, [pc, #292]	; (400cd4 <SPI_Handler+0x154>)
  400bb0:	6813      	ldr	r3, [r2, #0]
  400bb2:	3b01      	subs	r3, #1
  400bb4:	6013      	str	r3, [r2, #0]
		if (gs_ul_transfer_length) {
  400bb6:	b14b      	cbz	r3, 400bcc <SPI_Handler+0x4c>
			spi_write(SPI_SLAVE_BASE,
  400bb8:	2300      	movs	r3, #0
  400bba:	461a      	mov	r2, r3
  400bbc:	5c41      	ldrb	r1, [r0, r1]
  400bbe:	4840      	ldr	r0, [pc, #256]	; (400cc0 <SPI_Handler+0x140>)
  400bc0:	4c45      	ldr	r4, [pc, #276]	; (400cd8 <SPI_Handler+0x158>)
  400bc2:	47a0      	blx	r4
					gs_puc_transfer_buffer[gs_ul_transfer_index], 0, 0);
		}

		if (!gs_ul_transfer_length) {
  400bc4:	4b43      	ldr	r3, [pc, #268]	; (400cd4 <SPI_Handler+0x154>)
  400bc6:	681b      	ldr	r3, [r3, #0]
  400bc8:	2b00      	cmp	r3, #0
  400bca:	d176      	bne.n	400cba <SPI_Handler+0x13a>
/**
 * \brief  SPI command block process.
 */
static void spi_slave_command_process(void)
{
	if (gs_ul_spi_cmd == CMD_END) {
  400bcc:	4b43      	ldr	r3, [pc, #268]	; (400cdc <SPI_Handler+0x15c>)
  400bce:	6819      	ldr	r1, [r3, #0]
  400bd0:	4b43      	ldr	r3, [pc, #268]	; (400ce0 <SPI_Handler+0x160>)
  400bd2:	4299      	cmp	r1, r3
  400bd4:	d106      	bne.n	400be4 <SPI_Handler+0x64>
		gs_ul_spi_state = SLAVE_STATE_IDLE;
  400bd6:	2300      	movs	r3, #0
  400bd8:	4a42      	ldr	r2, [pc, #264]	; (400ce4 <SPI_Handler+0x164>)
  400bda:	6013      	str	r3, [r2, #0]
		gs_spi_status.ul_total_block_number = 0;
  400bdc:	4a42      	ldr	r2, [pc, #264]	; (400ce8 <SPI_Handler+0x168>)
  400bde:	6013      	str	r3, [r2, #0]
		gs_spi_status.ul_total_command_number = 0;
  400be0:	6053      	str	r3, [r2, #4]
  400be2:	e034      	b.n	400c4e <SPI_Handler+0xce>
	} else {
		switch (gs_ul_spi_state) {
  400be4:	4b3f      	ldr	r3, [pc, #252]	; (400ce4 <SPI_Handler+0x164>)
  400be6:	681b      	ldr	r3, [r3, #0]
  400be8:	2b03      	cmp	r3, #3
  400bea:	d826      	bhi.n	400c3a <SPI_Handler+0xba>
  400bec:	e8df f003 	tbb	[pc, r3]
  400bf0:	21150902 	.word	0x21150902
		case SLAVE_STATE_IDLE:
			/* Only CMD_TEST accepted. */
			if (gs_ul_spi_cmd == CMD_TEST) {
  400bf4:	f1b1 3f10 	cmp.w	r1, #269488144	; 0x10101010
  400bf8:	d122      	bne.n	400c40 <SPI_Handler+0xc0>
				gs_ul_spi_state = SLAVE_STATE_TEST;
  400bfa:	2201      	movs	r2, #1
  400bfc:	4b39      	ldr	r3, [pc, #228]	; (400ce4 <SPI_Handler+0x164>)
  400bfe:	601a      	str	r2, [r3, #0]
  400c00:	e01e      	b.n	400c40 <SPI_Handler+0xc0>
			}
			break;

		case SLAVE_STATE_TEST:
			/* Only CMD_DATA accepted. */
			if ((gs_ul_spi_cmd & CMD_DATA_MSK) == CMD_DATA) {
  400c02:	0c0b      	lsrs	r3, r1, #16
  400c04:	041b      	lsls	r3, r3, #16
  400c06:	4a39      	ldr	r2, [pc, #228]	; (400cec <SPI_Handler+0x16c>)
  400c08:	4293      	cmp	r3, r2
  400c0a:	d102      	bne.n	400c12 <SPI_Handler+0x92>
				gs_ul_spi_state = SLAVE_STATE_DATA;
  400c0c:	2202      	movs	r2, #2
  400c0e:	4b35      	ldr	r3, [pc, #212]	; (400ce4 <SPI_Handler+0x164>)
  400c10:	601a      	str	r2, [r3, #0]
			}
			gs_ul_test_block_number = gs_ul_spi_cmd & DATA_BLOCK_MSK;
  400c12:	b28b      	uxth	r3, r1
  400c14:	4a36      	ldr	r2, [pc, #216]	; (400cf0 <SPI_Handler+0x170>)
  400c16:	6013      	str	r3, [r2, #0]
  400c18:	e012      	b.n	400c40 <SPI_Handler+0xc0>
			break;

		case SLAVE_STATE_DATA:
			gs_spi_status.ul_total_block_number++;
  400c1a:	4a33      	ldr	r2, [pc, #204]	; (400ce8 <SPI_Handler+0x168>)
  400c1c:	6813      	ldr	r3, [r2, #0]
  400c1e:	3301      	adds	r3, #1
  400c20:	6013      	str	r3, [r2, #0]

			if (gs_spi_status.ul_total_block_number == 
  400c22:	4a33      	ldr	r2, [pc, #204]	; (400cf0 <SPI_Handler+0x170>)
  400c24:	6812      	ldr	r2, [r2, #0]
  400c26:	4293      	cmp	r3, r2
  400c28:	d10a      	bne.n	400c40 <SPI_Handler+0xc0>
					gs_ul_test_block_number) {
				gs_ul_spi_state = SLAVE_STATE_STATUS_ENTRY;
  400c2a:	2203      	movs	r2, #3
  400c2c:	4b2d      	ldr	r3, [pc, #180]	; (400ce4 <SPI_Handler+0x164>)
  400c2e:	601a      	str	r2, [r3, #0]
  400c30:	e006      	b.n	400c40 <SPI_Handler+0xc0>
			}
			break;

		case SLAVE_STATE_STATUS_ENTRY:
			gs_ul_spi_state = SLAVE_STATE_STATUS;
  400c32:	2204      	movs	r2, #4
  400c34:	4b2b      	ldr	r3, [pc, #172]	; (400ce4 <SPI_Handler+0x164>)
  400c36:	601a      	str	r2, [r3, #0]
  400c38:	e002      	b.n	400c40 <SPI_Handler+0xc0>
			spi_slave_command_process();
			new_cmd = 1;
		}

		if (new_cmd) {
			if (gs_ul_spi_cmd != CMD_END) {
  400c3a:	4b29      	ldr	r3, [pc, #164]	; (400ce0 <SPI_Handler+0x160>)
  400c3c:	4299      	cmp	r1, r3
  400c3e:	d006      	beq.n	400c4e <SPI_Handler+0xce>
				gs_spi_status.ul_cmd_list[gs_spi_status.ul_total_command_number]
  400c40:	4a29      	ldr	r2, [pc, #164]	; (400ce8 <SPI_Handler+0x168>)
  400c42:	6853      	ldr	r3, [r2, #4]
						= gs_ul_spi_cmd;
  400c44:	1c98      	adds	r0, r3, #2
  400c46:	f842 1020 	str.w	r1, [r2, r0, lsl #2]
				gs_spi_status.ul_total_command_number++;
  400c4a:	3301      	adds	r3, #1
  400c4c:	6053      	str	r3, [r2, #4]
/**
 * \brief  Start waiting new command.
 */
static void spi_slave_new_command(void)
{
	switch (gs_ul_spi_state) {
  400c4e:	4b25      	ldr	r3, [pc, #148]	; (400ce4 <SPI_Handler+0x164>)
  400c50:	681b      	ldr	r3, [r3, #0]
  400c52:	2b05      	cmp	r3, #5
  400c54:	d831      	bhi.n	400cba <SPI_Handler+0x13a>
  400c56:	e8df f003 	tbb	[pc, r3]
  400c5a:	0a03      	.short	0x0a03
  400c5c:	03261c11 	.word	0x03261c11
	case SLAVE_STATE_IDLE:
	case SLAVE_STATE_END:
		gs_ul_spi_cmd = RC_SYN;
  400c60:	481e      	ldr	r0, [pc, #120]	; (400cdc <SPI_Handler+0x15c>)
  400c62:	4b24      	ldr	r3, [pc, #144]	; (400cf4 <SPI_Handler+0x174>)
  400c64:	6003      	str	r3, [r0, #0]
		spi_slave_transfer(&gs_ul_spi_cmd, sizeof(gs_ul_spi_cmd));
  400c66:	2104      	movs	r1, #4
  400c68:	4b23      	ldr	r3, [pc, #140]	; (400cf8 <SPI_Handler+0x178>)
  400c6a:	4798      	blx	r3
  400c6c:	e025      	b.n	400cba <SPI_Handler+0x13a>
		break;

	case SLAVE_STATE_TEST:
		gs_ul_spi_cmd = RC_RDY;
  400c6e:	481b      	ldr	r0, [pc, #108]	; (400cdc <SPI_Handler+0x15c>)
  400c70:	4b22      	ldr	r3, [pc, #136]	; (400cfc <SPI_Handler+0x17c>)
  400c72:	6003      	str	r3, [r0, #0]
		spi_slave_transfer(&gs_ul_spi_cmd, sizeof(gs_ul_spi_cmd));
  400c74:	2104      	movs	r1, #4
  400c76:	4b20      	ldr	r3, [pc, #128]	; (400cf8 <SPI_Handler+0x178>)
  400c78:	4798      	blx	r3
  400c7a:	e01e      	b.n	400cba <SPI_Handler+0x13a>
		break;

	case SLAVE_STATE_DATA:
		if (gs_spi_status.ul_total_block_number < gs_ul_test_block_number) {
  400c7c:	4b1a      	ldr	r3, [pc, #104]	; (400ce8 <SPI_Handler+0x168>)
  400c7e:	681a      	ldr	r2, [r3, #0]
  400c80:	4b1b      	ldr	r3, [pc, #108]	; (400cf0 <SPI_Handler+0x170>)
  400c82:	681b      	ldr	r3, [r3, #0]
  400c84:	429a      	cmp	r2, r3
  400c86:	d218      	bcs.n	400cba <SPI_Handler+0x13a>
			spi_slave_transfer(gs_uc_spi_buffer, COMM_BUFFER_SIZE);
  400c88:	2140      	movs	r1, #64	; 0x40
  400c8a:	481d      	ldr	r0, [pc, #116]	; (400d00 <SPI_Handler+0x180>)
  400c8c:	4b1a      	ldr	r3, [pc, #104]	; (400cf8 <SPI_Handler+0x178>)
  400c8e:	4798      	blx	r3
  400c90:	e013      	b.n	400cba <SPI_Handler+0x13a>
		}
		break;

	case SLAVE_STATE_STATUS_ENTRY:
		gs_ul_spi_cmd = RC_RDY;
  400c92:	4812      	ldr	r0, [pc, #72]	; (400cdc <SPI_Handler+0x15c>)
  400c94:	4b19      	ldr	r3, [pc, #100]	; (400cfc <SPI_Handler+0x17c>)
  400c96:	6003      	str	r3, [r0, #0]
		spi_slave_transfer(&gs_ul_spi_cmd, sizeof(gs_ul_spi_cmd));
  400c98:	2104      	movs	r1, #4
  400c9a:	4b17      	ldr	r3, [pc, #92]	; (400cf8 <SPI_Handler+0x178>)
  400c9c:	4798      	blx	r3
		gs_ul_spi_state = SLAVE_STATE_STATUS;
  400c9e:	2204      	movs	r2, #4
  400ca0:	4b10      	ldr	r3, [pc, #64]	; (400ce4 <SPI_Handler+0x164>)
  400ca2:	601a      	str	r2, [r3, #0]
  400ca4:	e009      	b.n	400cba <SPI_Handler+0x13a>
		break;

	case SLAVE_STATE_STATUS:
		gs_ul_spi_cmd = RC_SYN;
  400ca6:	4a13      	ldr	r2, [pc, #76]	; (400cf4 <SPI_Handler+0x174>)
  400ca8:	4b0c      	ldr	r3, [pc, #48]	; (400cdc <SPI_Handler+0x15c>)
  400caa:	601a      	str	r2, [r3, #0]
		spi_slave_transfer(&gs_spi_status, sizeof(struct status_block_t));
  400cac:	2158      	movs	r1, #88	; 0x58
  400cae:	480e      	ldr	r0, [pc, #56]	; (400ce8 <SPI_Handler+0x168>)
  400cb0:	4b11      	ldr	r3, [pc, #68]	; (400cf8 <SPI_Handler+0x178>)
  400cb2:	4798      	blx	r3
		gs_ul_spi_state = SLAVE_STATE_END;
  400cb4:	2205      	movs	r2, #5
  400cb6:	4b0b      	ldr	r3, [pc, #44]	; (400ce4 <SPI_Handler+0x164>)
  400cb8:	601a      	str	r2, [r3, #0]
				gs_spi_status.ul_total_command_number++;
			}
			spi_slave_new_command();
		}
	}
}
  400cba:	b002      	add	sp, #8
  400cbc:	bd10      	pop	{r4, pc}
  400cbe:	4770      	bx	lr
  400cc0:	40008000 	.word	0x40008000
  400cc4:	20000948 	.word	0x20000948
  400cc8:	0040047d 	.word	0x0040047d
  400ccc:	20000944 	.word	0x20000944
  400cd0:	2000094c 	.word	0x2000094c
  400cd4:	200008a8 	.word	0x200008a8
  400cd8:	004004ad 	.word	0x004004ad
  400cdc:	20000008 	.word	0x20000008
  400ce0:	68390484 	.word	0x68390484
  400ce4:	200008a4 	.word	0x200008a4
  400ce8:	200008ec 	.word	0x200008ec
  400cec:	29380000 	.word	0x29380000
  400cf0:	200008a0 	.word	0x200008a0
  400cf4:	55aa55aa 	.word	0x55aa55aa
  400cf8:	00400861 	.word	0x00400861
  400cfc:	12345678 	.word	0x12345678
  400d00:	200008ac 	.word	0x200008ac

00400d04 <main>:
 * \brief Application entry point for SPI example.
 *
 * \return Unused (ANSI-C compatibility).
 */
int main(void)
{
  400d04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400d08:	b087      	sub	sp, #28
	uint8_t uc_key;

	/* Initialize the SAM system. */
	sysclk_init();
  400d0a:	4b99      	ldr	r3, [pc, #612]	; (400f70 <main+0x26c>)
  400d0c:	4798      	blx	r3
	board_init();
  400d0e:	4b99      	ldr	r3, [pc, #612]	; (400f74 <main+0x270>)
  400d10:	4798      	blx	r3
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  400d12:	4c99      	ldr	r4, [pc, #612]	; (400f78 <main+0x274>)
  400d14:	4b99      	ldr	r3, [pc, #612]	; (400f7c <main+0x278>)
  400d16:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  400d18:	4a99      	ldr	r2, [pc, #612]	; (400f80 <main+0x27c>)
  400d1a:	4b9a      	ldr	r3, [pc, #616]	; (400f84 <main+0x280>)
  400d1c:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  400d1e:	4a9a      	ldr	r2, [pc, #616]	; (400f88 <main+0x284>)
  400d20:	4b9a      	ldr	r3, [pc, #616]	; (400f8c <main+0x288>)
  400d22:	601a      	str	r2, [r3, #0]
static inline void usart_serial_init(usart_if p_usart,
		usart_serial_options_t *opt)
{
#if ((!SAM4L) && (!SAMG55))
	sam_uart_opt_t uart_settings;
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  400d24:	4b9a      	ldr	r3, [pc, #616]	; (400f90 <main+0x28c>)
  400d26:	9302      	str	r3, [sp, #8]
	uart_settings.ul_baudrate = opt->baudrate;
  400d28:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  400d2c:	9303      	str	r3, [sp, #12]
	uart_settings.ul_mode = opt->paritytype;
  400d2e:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400d32:	9304      	str	r3, [sp, #16]
  400d34:	2008      	movs	r0, #8
  400d36:	4b97      	ldr	r3, [pc, #604]	; (400f94 <main+0x290>)
  400d38:	4798      	blx	r3
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
		sysclk_enable_peripheral_clock(ID_UART0);
		/* Configure UART */
		uart_init((Uart*)p_usart, &uart_settings);
  400d3a:	a902      	add	r1, sp, #8
  400d3c:	4620      	mov	r0, r4
  400d3e:	4b96      	ldr	r3, [pc, #600]	; (400f98 <main+0x294>)
  400d40:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  400d42:	4d96      	ldr	r5, [pc, #600]	; (400f9c <main+0x298>)
  400d44:	682b      	ldr	r3, [r5, #0]
  400d46:	2100      	movs	r1, #0
  400d48:	6898      	ldr	r0, [r3, #8]
  400d4a:	4c95      	ldr	r4, [pc, #596]	; (400fa0 <main+0x29c>)
  400d4c:	47a0      	blx	r4
	setbuf(stdin, NULL);
  400d4e:	682b      	ldr	r3, [r5, #0]
  400d50:	2100      	movs	r1, #0
  400d52:	6858      	ldr	r0, [r3, #4]
  400d54:	47a0      	blx	r4

	/* Initialize the console UART. */
	configure_console();

	/* Output example information. */
	puts(STRING_HEADER);
  400d56:	4893      	ldr	r0, [pc, #588]	; (400fa4 <main+0x2a0>)
  400d58:	4b93      	ldr	r3, [pc, #588]	; (400fa8 <main+0x2a4>)
  400d5a:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  400d5c:	4b93      	ldr	r3, [pc, #588]	; (400fac <main+0x2a8>)
  400d5e:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
  400d62:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  400d66:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  400d6a:	2200      	movs	r2, #0
  400d6c:	f883 2315 	strb.w	r2, [r3, #789]	; 0x315
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400d70:	6019      	str	r1, [r3, #0]
static void spi_slave_initialize(void)
{
	uint32_t i;

	/* Reset status */
	gs_spi_status.ul_total_block_number = 0;
  400d72:	4b8f      	ldr	r3, [pc, #572]	; (400fb0 <main+0x2ac>)
  400d74:	601a      	str	r2, [r3, #0]
	gs_spi_status.ul_total_command_number = 0;
  400d76:	4619      	mov	r1, r3
  400d78:	f841 2f04 	str.w	r2, [r1, #4]!
  400d7c:	460a      	mov	r2, r1
  400d7e:	9101      	str	r1, [sp, #4]
  400d80:	3354      	adds	r3, #84	; 0x54
	for (i = 0; i < NB_STATUS_CMD; i++) {
		gs_spi_status.ul_cmd_list[i] = 0;
  400d82:	2100      	movs	r1, #0
  400d84:	f842 1f04 	str.w	r1, [r2, #4]!
	uint32_t i;

	/* Reset status */
	gs_spi_status.ul_total_block_number = 0;
	gs_spi_status.ul_total_command_number = 0;
	for (i = 0; i < NB_STATUS_CMD; i++) {
  400d88:	429a      	cmp	r2, r3
  400d8a:	d1fb      	bne.n	400d84 <main+0x80>
		gs_spi_status.ul_cmd_list[i] = 0;
	}
	gs_ul_spi_state = SLAVE_STATE_IDLE;
  400d8c:	2500      	movs	r5, #0
  400d8e:	4b89      	ldr	r3, [pc, #548]	; (400fb4 <main+0x2b0>)
  400d90:	601d      	str	r5, [r3, #0]
	gs_ul_spi_cmd = RC_SYN;
  400d92:	4e89      	ldr	r6, [pc, #548]	; (400fb8 <main+0x2b4>)
  400d94:	4b89      	ldr	r3, [pc, #548]	; (400fbc <main+0x2b8>)
  400d96:	6033      	str	r3, [r6, #0]

	puts("-I- Initialize SPI as slave \r");
  400d98:	4889      	ldr	r0, [pc, #548]	; (400fc0 <main+0x2bc>)
  400d9a:	4b83      	ldr	r3, [pc, #524]	; (400fa8 <main+0x2a4>)
  400d9c:	4798      	blx	r3
	/* Enable the peripheral and set SPI mode. */
	flexcom_enable(BOARD_FLEXCOM_SPI);
	flexcom_set_opmode(BOARD_FLEXCOM_SPI, FLEXCOM_SPI);
#else
	/* Configure an SPI peripheral. */
	spi_enable_clock(SPI_SLAVE_BASE);
  400d9e:	4c89      	ldr	r4, [pc, #548]	; (400fc4 <main+0x2c0>)
  400da0:	4620      	mov	r0, r4
  400da2:	4b89      	ldr	r3, [pc, #548]	; (400fc8 <main+0x2c4>)
  400da4:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400da6:	2302      	movs	r3, #2
  400da8:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_reset(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SWRST;
  400daa:	2380      	movs	r3, #128	; 0x80
  400dac:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_slave_mode(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_MSTR);
  400dae:	6863      	ldr	r3, [r4, #4]
  400db0:	f023 0301 	bic.w	r3, r3, #1
  400db4:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_mode_fault_detect(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  400db6:	6863      	ldr	r3, [r4, #4]
  400db8:	f043 0310 	orr.w	r3, r3, #16
  400dbc:	6063      	str	r3, [r4, #4]
#endif
	spi_disable(SPI_SLAVE_BASE);
	spi_reset(SPI_SLAVE_BASE);
	spi_set_slave_mode(SPI_SLAVE_BASE);
	spi_disable_mode_fault_detect(SPI_SLAVE_BASE);
	spi_set_peripheral_chip_select_value(SPI_SLAVE_BASE, SPI_CHIP_PCS);
  400dbe:	210e      	movs	r1, #14
  400dc0:	4620      	mov	r0, r4
  400dc2:	4b82      	ldr	r3, [pc, #520]	; (400fcc <main+0x2c8>)
  400dc4:	4798      	blx	r3
	spi_set_clock_polarity(SPI_SLAVE_BASE, SPI_CHIP_SEL, SPI_CLK_POLARITY);
  400dc6:	462a      	mov	r2, r5
  400dc8:	4629      	mov	r1, r5
  400dca:	4620      	mov	r0, r4
  400dcc:	4b80      	ldr	r3, [pc, #512]	; (400fd0 <main+0x2cc>)
  400dce:	4798      	blx	r3
	spi_set_clock_phase(SPI_SLAVE_BASE, SPI_CHIP_SEL, SPI_CLK_PHASE);
  400dd0:	462a      	mov	r2, r5
  400dd2:	4629      	mov	r1, r5
  400dd4:	4620      	mov	r0, r4
  400dd6:	4b7f      	ldr	r3, [pc, #508]	; (400fd4 <main+0x2d0>)
  400dd8:	4798      	blx	r3
	spi_set_bits_per_transfer(SPI_SLAVE_BASE, SPI_CHIP_SEL, SPI_CSR_BITS_8_BIT);
  400dda:	462a      	mov	r2, r5
  400ddc:	4629      	mov	r1, r5
  400dde:	4620      	mov	r0, r4
  400de0:	4b7d      	ldr	r3, [pc, #500]	; (400fd8 <main+0x2d4>)
  400de2:	4798      	blx	r3
 * \param p_spi Pointer to an SPI instance.
 * \param ul_sources Interrupts to be enabled.
 */
static inline void spi_enable_interrupt(Spi *p_spi, uint32_t ul_sources)
{
	p_spi->SPI_IER = ul_sources;
  400de4:	2301      	movs	r3, #1
  400de6:	6163      	str	r3, [r4, #20]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_enable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400de8:	6023      	str	r3, [r4, #0]
	spi_enable_interrupt(SPI_SLAVE_BASE, SPI_IER_RDRF);
	spi_enable(SPI_SLAVE_BASE);

	/* Start waiting command. */
	spi_slave_transfer(&gs_ul_spi_cmd, sizeof(gs_ul_spi_cmd));
  400dea:	2104      	movs	r1, #4
  400dec:	4630      	mov	r0, r6
  400dee:	4b7b      	ldr	r3, [pc, #492]	; (400fdc <main+0x2d8>)
  400df0:	4798      	blx	r3
	NVIC_EnableIRQ(SPI_IRQn);

	spi_slave_initialize();

	/* Display menu. */
	display_menu();
  400df2:	4b7b      	ldr	r3, [pc, #492]	; (400fe0 <main+0x2dc>)
  400df4:	4798      	blx	r3
	 */
	while (1) {
		cmd = CMD_TEST;
		puts("-> Master sending CMD_TEST... \r");
		spi_master_transfer(&cmd, sizeof(cmd));
		if (cmd == RC_RDY) {
  400df6:	4e7b      	ldr	r6, [pc, #492]	; (400fe4 <main+0x2e0>)
			}
		}
	}

	for (i = 0; i < MAX_RETRY; i++) {
		cmd = CMD_STATUS;
  400df8:	f8df b244 	ldr.w	fp, [pc, #580]	; 401040 <main+0x33c>
	printf(" \n\r-I- Received  %lu data blocks \n\r",
			(unsigned long)gs_spi_status.ul_total_block_number);

	for (i = 0; i < MAX_RETRY; i++) {
		puts("-> Master sending CMD_END... \r");
		cmd = CMD_END;
  400dfc:	f8df a244 	ldr.w	sl, [pc, #580]	; 401044 <main+0x340>

	/* Display menu. */
	display_menu();

	while (1) {
		scanf("%c", (char *)&uc_key);
  400e00:	f10d 0117 	add.w	r1, sp, #23
  400e04:	4878      	ldr	r0, [pc, #480]	; (400fe8 <main+0x2e4>)
  400e06:	4b79      	ldr	r3, [pc, #484]	; (400fec <main+0x2e8>)
  400e08:	4798      	blx	r3

		switch (uc_key) {
  400e0a:	f89d 3017 	ldrb.w	r3, [sp, #23]
  400e0e:	2b68      	cmp	r3, #104	; 0x68
  400e10:	d002      	beq.n	400e18 <main+0x114>
  400e12:	2b74      	cmp	r3, #116	; 0x74
  400e14:	d003      	beq.n	400e1e <main+0x11a>
  400e16:	e126      	b.n	401066 <main+0x362>
		case 'h':
			display_menu();
  400e18:	4b71      	ldr	r3, [pc, #452]	; (400fe0 <main+0x2dc>)
  400e1a:	4798      	blx	r3
			break;
  400e1c:	e7f0      	b.n	400e00 <main+0xfc>
	uint32_t cmd;
	uint32_t block;
	uint32_t i;

	/* Configure SPI as master, set up SPI clock. */
	spi_master_initialize();
  400e1e:	4b74      	ldr	r3, [pc, #464]	; (400ff0 <main+0x2ec>)
  400e20:	4798      	blx	r3
	 * Send CMD_TEST to indicate the start of test, and device shall return
	 * RC_RDY.
	 */
	while (1) {
		cmd = CMD_TEST;
		puts("-> Master sending CMD_TEST... \r");
  400e22:	4f74      	ldr	r7, [pc, #464]	; (400ff4 <main+0x2f0>)
  400e24:	4d60      	ldr	r5, [pc, #384]	; (400fa8 <main+0x2a4>)
	/*
	 * Send CMD_TEST to indicate the start of test, and device shall return
	 * RC_RDY.
	 */
	while (1) {
		cmd = CMD_TEST;
  400e26:	ac06      	add	r4, sp, #24
  400e28:	f04f 3310 	mov.w	r3, #269488144	; 0x10101010
  400e2c:	f844 3d10 	str.w	r3, [r4, #-16]!
		puts("-> Master sending CMD_TEST... \r");
  400e30:	4638      	mov	r0, r7
  400e32:	47a8      	blx	r5
		spi_master_transfer(&cmd, sizeof(cmd));
  400e34:	2104      	movs	r1, #4
  400e36:	4620      	mov	r0, r4
  400e38:	4b6f      	ldr	r3, [pc, #444]	; (400ff8 <main+0x2f4>)
  400e3a:	4798      	blx	r3
		if (cmd == RC_RDY) {
  400e3c:	9902      	ldr	r1, [sp, #8]
  400e3e:	42b1      	cmp	r1, r6
  400e40:	d116      	bne.n	400e70 <main+0x16c>
			puts("   <- Slave response RC_SYN, RC_RDY \r");
  400e42:	486e      	ldr	r0, [pc, #440]	; (400ffc <main+0x2f8>)
  400e44:	4c58      	ldr	r4, [pc, #352]	; (400fa8 <main+0x2a4>)
  400e46:	47a0      	blx	r4
			printf("-E- Response unexpected: 0x%x \n\r", (unsigned)cmd);
			return;
		}
	}
	/* Send CMD_DATA with 4 blocks (64 bytes per page). */
	puts("-> Master sending CMD_DATA... \r");
  400e48:	486d      	ldr	r0, [pc, #436]	; (401000 <main+0x2fc>)
  400e4a:	47a0      	blx	r4
	cmd = CMD_DATA | MAX_DATA_BLOCK_NUMBER;
  400e4c:	a806      	add	r0, sp, #24
  400e4e:	4b6d      	ldr	r3, [pc, #436]	; (401004 <main+0x300>)
  400e50:	f840 3d10 	str.w	r3, [r0, #-16]!
	spi_master_transfer(&cmd, sizeof(cmd));
  400e54:	2104      	movs	r1, #4
  400e56:	4b68      	ldr	r3, [pc, #416]	; (400ff8 <main+0x2f4>)
  400e58:	4798      	blx	r3
	puts("                                <---- Slave response RC_RDY \r");
  400e5a:	486b      	ldr	r0, [pc, #428]	; (401008 <main+0x304>)
  400e5c:	47a0      	blx	r4
  400e5e:	f04f 38ff 	mov.w	r8, #4294967295
  400e62:	f04f 0901 	mov.w	r9, #1
  400e66:	2500      	movs	r5, #0
  400e68:	4f68      	ldr	r7, [pc, #416]	; (40100c <main+0x308>)
  400e6a:	f107 043f 	add.w	r4, r7, #63	; 0x3f
  400e6e:	e028      	b.n	400ec2 <main+0x1be>
		spi_master_transfer(&cmd, sizeof(cmd));
		if (cmd == RC_RDY) {
			puts("   <- Slave response RC_SYN, RC_RDY \r");
			break;
		}
		if (cmd != RC_SYN) {
  400e70:	4b52      	ldr	r3, [pc, #328]	; (400fbc <main+0x2b8>)
  400e72:	4299      	cmp	r1, r3
  400e74:	d0d7      	beq.n	400e26 <main+0x122>
			printf("-E- Response unexpected: 0x%x \n\r", (unsigned)cmd);
  400e76:	4866      	ldr	r0, [pc, #408]	; (401010 <main+0x30c>)
  400e78:	4b66      	ldr	r3, [pc, #408]	; (401014 <main+0x310>)
  400e7a:	4798      	blx	r3
  400e7c:	e7c0      	b.n	400e00 <main+0xfc>
	cmd = CMD_DATA | MAX_DATA_BLOCK_NUMBER;
	spi_master_transfer(&cmd, sizeof(cmd));
	puts("                                <---- Slave response RC_RDY \r");
	for (block = 0; block < MAX_DATA_BLOCK_NUMBER; block++) {
		for (i = 0; i < COMM_BUFFER_SIZE; i++) {
			gs_uc_spi_buffer[i] = block;
  400e7e:	f803 5f01 	strb.w	r5, [r3, #1]!
	puts("-> Master sending CMD_DATA... \r");
	cmd = CMD_DATA | MAX_DATA_BLOCK_NUMBER;
	spi_master_transfer(&cmd, sizeof(cmd));
	puts("                                <---- Slave response RC_RDY \r");
	for (block = 0; block < MAX_DATA_BLOCK_NUMBER; block++) {
		for (i = 0; i < COMM_BUFFER_SIZE; i++) {
  400e82:	429c      	cmp	r4, r3
  400e84:	d1fb      	bne.n	400e7e <main+0x17a>
			gs_uc_spi_buffer[i] = block;
		}
		printf("-> Master sending block %u ... \n\r", (unsigned)block);
  400e86:	4629      	mov	r1, r5
  400e88:	4863      	ldr	r0, [pc, #396]	; (401018 <main+0x314>)
  400e8a:	4b62      	ldr	r3, [pc, #392]	; (401014 <main+0x310>)
  400e8c:	4798      	blx	r3
		spi_master_transfer(gs_uc_spi_buffer, COMM_BUFFER_SIZE);
  400e8e:	2140      	movs	r1, #64	; 0x40
  400e90:	4638      	mov	r0, r7
  400e92:	4b59      	ldr	r3, [pc, #356]	; (400ff8 <main+0x2f4>)
  400e94:	4798      	blx	r3
		if (block) {
  400e96:	b17d      	cbz	r5, 400eb8 <main+0x1b4>
			for (i = 0; i < COMM_BUFFER_SIZE; i++) {
				if (gs_uc_spi_buffer[i] != (block - 1)) {
  400e98:	7839      	ldrb	r1, [r7, #0]
  400e9a:	4541      	cmp	r1, r8
  400e9c:	f040 80f8 	bne.w	401090 <main+0x38c>
  400ea0:	4b5a      	ldr	r3, [pc, #360]	; (40100c <main+0x308>)
  400ea2:	f813 2f01 	ldrb.w	r2, [r3, #1]!
  400ea6:	428a      	cmp	r2, r1
  400ea8:	f040 80f2 	bne.w	401090 <main+0x38c>
			gs_uc_spi_buffer[i] = block;
		}
		printf("-> Master sending block %u ... \n\r", (unsigned)block);
		spi_master_transfer(gs_uc_spi_buffer, COMM_BUFFER_SIZE);
		if (block) {
			for (i = 0; i < COMM_BUFFER_SIZE; i++) {
  400eac:	429c      	cmp	r4, r3
  400eae:	d1f8      	bne.n	400ea2 <main+0x19e>
  400eb0:	e0e9      	b.n	401086 <main+0x382>
	/* Send CMD_DATA with 4 blocks (64 bytes per page). */
	puts("-> Master sending CMD_DATA... \r");
	cmd = CMD_DATA | MAX_DATA_BLOCK_NUMBER;
	spi_master_transfer(&cmd, sizeof(cmd));
	puts("                                <---- Slave response RC_RDY \r");
	for (block = 0; block < MAX_DATA_BLOCK_NUMBER; block++) {
  400eb2:	f1b9 0f03 	cmp.w	r9, #3
  400eb6:	d806      	bhi.n	400ec6 <main+0x1c2>
  400eb8:	f109 0901 	add.w	r9, r9, #1
  400ebc:	f108 0801 	add.w	r8, r8, #1
  400ec0:	3501      	adds	r5, #1
  400ec2:	1e7b      	subs	r3, r7, #1
  400ec4:	e7db      	b.n	400e7e <main+0x17a>
  400ec6:	2500      	movs	r5, #0
		}
	}

	for (i = 0; i < MAX_RETRY; i++) {
		cmd = CMD_STATUS;
		puts("-> Master sending CMD_STATUS... \r");
  400ec8:	4f54      	ldr	r7, [pc, #336]	; (40101c <main+0x318>)
			}
		}
	}

	for (i = 0; i < MAX_RETRY; i++) {
		cmd = CMD_STATUS;
  400eca:	ac06      	add	r4, sp, #24
  400ecc:	f844 bd10 	str.w	fp, [r4, #-16]!
		puts("-> Master sending CMD_STATUS... \r");
  400ed0:	4638      	mov	r0, r7
  400ed2:	4b35      	ldr	r3, [pc, #212]	; (400fa8 <main+0x2a4>)
  400ed4:	4798      	blx	r3
		spi_master_transfer(&cmd, sizeof(cmd));
  400ed6:	2104      	movs	r1, #4
  400ed8:	4620      	mov	r0, r4
  400eda:	4b47      	ldr	r3, [pc, #284]	; (400ff8 <main+0x2f4>)
  400edc:	4798      	blx	r3
		if (cmd == RC_RDY) {
  400ede:	9b02      	ldr	r3, [sp, #8]
  400ee0:	42b3      	cmp	r3, r6
  400ee2:	d105      	bne.n	400ef0 <main+0x1ec>
			puts("   <- Slave response RC_RDY \r");
  400ee4:	484e      	ldr	r0, [pc, #312]	; (401020 <main+0x31c>)
  400ee6:	4b30      	ldr	r3, [pc, #192]	; (400fa8 <main+0x2a4>)
  400ee8:	4798      	blx	r3
			break;
		}
	}
	if (i >= MAX_RETRY) {
  400eea:	2d03      	cmp	r5, #3
  400eec:	d907      	bls.n	400efe <main+0x1fa>
  400eee:	e002      	b.n	400ef6 <main+0x1f2>
					(unsigned)(block - 1));
			}
		}
	}

	for (i = 0; i < MAX_RETRY; i++) {
  400ef0:	3501      	adds	r5, #1
  400ef2:	2d04      	cmp	r5, #4
  400ef4:	d1e9      	bne.n	400eca <main+0x1c6>
			puts("   <- Slave response RC_RDY \r");
			break;
		}
	}
	if (i >= MAX_RETRY) {
		puts("   <- Slave no response \r");
  400ef6:	484b      	ldr	r0, [pc, #300]	; (401024 <main+0x320>)
  400ef8:	4b2b      	ldr	r3, [pc, #172]	; (400fa8 <main+0x2a4>)
  400efa:	4798      	blx	r3
  400efc:	e780      	b.n	400e00 <main+0xfc>
		return;
	}

	puts("-> Master request slave status... \r");
  400efe:	484a      	ldr	r0, [pc, #296]	; (401028 <main+0x324>)
  400f00:	4d29      	ldr	r5, [pc, #164]	; (400fa8 <main+0x2a4>)
  400f02:	47a8      	blx	r5
	spi_master_transfer(&gs_spi_status, sizeof(struct status_block_t));
  400f04:	4c2a      	ldr	r4, [pc, #168]	; (400fb0 <main+0x2ac>)
  400f06:	2158      	movs	r1, #88	; 0x58
  400f08:	4620      	mov	r0, r4
  400f0a:	4b3b      	ldr	r3, [pc, #236]	; (400ff8 <main+0x2f4>)
  400f0c:	4798      	blx	r3

	puts("   <- Slave reports status...\r");
  400f0e:	4847      	ldr	r0, [pc, #284]	; (40102c <main+0x328>)
  400f10:	47a8      	blx	r5
	printf("-I- Received  %u commands:",
  400f12:	6861      	ldr	r1, [r4, #4]
  400f14:	4846      	ldr	r0, [pc, #280]	; (401030 <main+0x32c>)
  400f16:	4b3f      	ldr	r3, [pc, #252]	; (401014 <main+0x310>)
  400f18:	4798      	blx	r3
		(unsigned)gs_spi_status.ul_total_command_number);

	for (i = 0; i < gs_spi_status.ul_total_command_number; i++) {
  400f1a:	6863      	ldr	r3, [r4, #4]
  400f1c:	b173      	cbz	r3, 400f3c <main+0x238>
  400f1e:	9d01      	ldr	r5, [sp, #4]
  400f20:	2400      	movs	r4, #0
		printf(" 0x%08x", (unsigned)gs_spi_status.ul_cmd_list[i]);
  400f22:	f8df 9124 	ldr.w	r9, [pc, #292]	; 401048 <main+0x344>
  400f26:	f8df 80ec 	ldr.w	r8, [pc, #236]	; 401014 <main+0x310>

	puts("   <- Slave reports status...\r");
	printf("-I- Received  %u commands:",
		(unsigned)gs_spi_status.ul_total_command_number);

	for (i = 0; i < gs_spi_status.ul_total_command_number; i++) {
  400f2a:	4f21      	ldr	r7, [pc, #132]	; (400fb0 <main+0x2ac>)
		printf(" 0x%08x", (unsigned)gs_spi_status.ul_cmd_list[i]);
  400f2c:	f855 1f04 	ldr.w	r1, [r5, #4]!
  400f30:	4648      	mov	r0, r9
  400f32:	47c0      	blx	r8

	puts("   <- Slave reports status...\r");
	printf("-I- Received  %u commands:",
		(unsigned)gs_spi_status.ul_total_command_number);

	for (i = 0; i < gs_spi_status.ul_total_command_number; i++) {
  400f34:	3401      	adds	r4, #1
  400f36:	687b      	ldr	r3, [r7, #4]
  400f38:	429c      	cmp	r4, r3
  400f3a:	d3f7      	bcc.n	400f2c <main+0x228>
		printf(" 0x%08x", (unsigned)gs_spi_status.ul_cmd_list[i]);
	}
	printf(" \n\r-I- Received  %lu data blocks \n\r",
  400f3c:	4b1c      	ldr	r3, [pc, #112]	; (400fb0 <main+0x2ac>)
  400f3e:	6819      	ldr	r1, [r3, #0]
  400f40:	483c      	ldr	r0, [pc, #240]	; (401034 <main+0x330>)
  400f42:	4b34      	ldr	r3, [pc, #208]	; (401014 <main+0x310>)
  400f44:	4798      	blx	r3
			(unsigned long)gs_spi_status.ul_total_block_number);

	for (i = 0; i < MAX_RETRY; i++) {
  400f46:	2400      	movs	r4, #0
		puts("-> Master sending CMD_END... \r");
  400f48:	4f3b      	ldr	r7, [pc, #236]	; (401038 <main+0x334>)
  400f4a:	4d17      	ldr	r5, [pc, #92]	; (400fa8 <main+0x2a4>)
  400f4c:	4638      	mov	r0, r7
  400f4e:	47a8      	blx	r5
		cmd = CMD_END;
  400f50:	a806      	add	r0, sp, #24
  400f52:	f840 ad10 	str.w	sl, [r0, #-16]!
		spi_master_transfer(&cmd, sizeof(cmd));
  400f56:	2104      	movs	r1, #4
  400f58:	4b27      	ldr	r3, [pc, #156]	; (400ff8 <main+0x2f4>)
  400f5a:	4798      	blx	r3

		if (cmd == RC_SYN) {
  400f5c:	9a02      	ldr	r2, [sp, #8]
  400f5e:	4b17      	ldr	r3, [pc, #92]	; (400fbc <main+0x2b8>)
  400f60:	429a      	cmp	r2, r3
  400f62:	d173      	bne.n	40104c <main+0x348>
			puts("   <- Slave response RC_SYN \r");
  400f64:	4835      	ldr	r0, [pc, #212]	; (40103c <main+0x338>)
  400f66:	4b10      	ldr	r3, [pc, #64]	; (400fa8 <main+0x2a4>)
  400f68:	4798      	blx	r3
			break;
		}
	}

	if (i >= MAX_RETRY) {
  400f6a:	2c03      	cmp	r4, #3
  400f6c:	d975      	bls.n	40105a <main+0x356>
  400f6e:	e071      	b.n	401054 <main+0x350>
  400f70:	0040011d 	.word	0x0040011d
  400f74:	0040020d 	.word	0x0040020d
  400f78:	400e0600 	.word	0x400e0600
  400f7c:	2000098c 	.word	0x2000098c
  400f80:	004009c1 	.word	0x004009c1
  400f84:	20000988 	.word	0x20000988
  400f88:	004008e9 	.word	0x004008e9
  400f8c:	20000984 	.word	0x20000984
  400f90:	05f5e100 	.word	0x05f5e100
  400f94:	00400429 	.word	0x00400429
  400f98:	0040057d 	.word	0x0040057d
  400f9c:	20000438 	.word	0x20000438
  400fa0:	0040127d 	.word	0x0040127d
  400fa4:	00405864 	.word	0x00405864
  400fa8:	0040126d 	.word	0x0040126d
  400fac:	e000e100 	.word	0xe000e100
  400fb0:	200008ec 	.word	0x200008ec
  400fb4:	200008a4 	.word	0x200008a4
  400fb8:	20000008 	.word	0x20000008
  400fbc:	55aa55aa 	.word	0x55aa55aa
  400fc0:	004058b8 	.word	0x004058b8
  400fc4:	40008000 	.word	0x40008000
  400fc8:	00400455 	.word	0x00400455
  400fcc:	00400465 	.word	0x00400465
  400fd0:	004004e5 	.word	0x004004e5
  400fd4:	00400505 	.word	0x00400505
  400fd8:	00400525 	.word	0x00400525
  400fdc:	00400861 	.word	0x00400861
  400fe0:	00400a95 	.word	0x00400a95
  400fe4:	12345678 	.word	0x12345678
  400fe8:	004058d8 	.word	0x004058d8
  400fec:	00401141 	.word	0x00401141
  400ff0:	00400ad5 	.word	0x00400ad5
  400ff4:	004058dc 	.word	0x004058dc
  400ff8:	00400891 	.word	0x00400891
  400ffc:	004058fc 	.word	0x004058fc
  401000:	00405924 	.word	0x00405924
  401004:	29380004 	.word	0x29380004
  401008:	00405944 	.word	0x00405944
  40100c:	200008ac 	.word	0x200008ac
  401010:	00405984 	.word	0x00405984
  401014:	00401119 	.word	0x00401119
  401018:	004059a8 	.word	0x004059a8
  40101c:	004059cc 	.word	0x004059cc
  401020:	004059f0 	.word	0x004059f0
  401024:	00405a10 	.word	0x00405a10
  401028:	00405a2c 	.word	0x00405a2c
  40102c:	00405a50 	.word	0x00405a50
  401030:	00405a70 	.word	0x00405a70
  401034:	00405a94 	.word	0x00405a94
  401038:	00405ab8 	.word	0x00405ab8
  40103c:	00405ad8 	.word	0x00405ad8
  401040:	68390384 	.word	0x68390384
  401044:	68390484 	.word	0x68390484
  401048:	00405a8c 	.word	0x00405a8c
		printf(" 0x%08x", (unsigned)gs_spi_status.ul_cmd_list[i]);
	}
	printf(" \n\r-I- Received  %lu data blocks \n\r",
			(unsigned long)gs_spi_status.ul_total_block_number);

	for (i = 0; i < MAX_RETRY; i++) {
  40104c:	3401      	adds	r4, #1
  40104e:	2c04      	cmp	r4, #4
  401050:	f47f af7c 	bne.w	400f4c <main+0x248>
			break;
		}
	}

	if (i >= MAX_RETRY) {
		puts("   <- Slave no response \r");
  401054:	4811      	ldr	r0, [pc, #68]	; (40109c <main+0x398>)
  401056:	4b12      	ldr	r3, [pc, #72]	; (4010a0 <main+0x39c>)
  401058:	4798      	blx	r3
	}

	puts("\r");
  40105a:	4812      	ldr	r0, [pc, #72]	; (4010a4 <main+0x3a0>)
  40105c:	4c10      	ldr	r4, [pc, #64]	; (4010a0 <main+0x39c>)
  40105e:	47a0      	blx	r4
	puts("SPI transfer test finished! \r");
  401060:	4811      	ldr	r0, [pc, #68]	; (4010a8 <main+0x3a4>)
  401062:	47a0      	blx	r4
  401064:	e6cc      	b.n	400e00 <main+0xfc>
			break;

		default:
			/* Set configuration #n. */
			if ((uc_key >= '0')
					&& (uc_key <= ('0' + NUM_SPCK_CONFIGURATIONS - 1))) {
  401066:	3b30      	subs	r3, #48	; 0x30
  401068:	b2db      	uxtb	r3, r3
			spi_master_go();
			break;

		default:
			/* Set configuration #n. */
			if ((uc_key >= '0')
  40106a:	2b03      	cmp	r3, #3
  40106c:	f63f aec8 	bhi.w	400e00 <main+0xfc>
 *
 * \param configuration  Index of the configuration to set.
 */
static void spi_set_clock_configuration(uint8_t configuration)
{
	gs_ul_spi_clock = gs_ul_clock_configurations[configuration];
  401070:	4a0e      	ldr	r2, [pc, #56]	; (4010ac <main+0x3a8>)
  401072:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
  401076:	4b0e      	ldr	r3, [pc, #56]	; (4010b0 <main+0x3ac>)
  401078:	6019      	str	r1, [r3, #0]
	printf("Setting SPI clock #%lu ... \n\r", (unsigned long)gs_ul_spi_clock);
  40107a:	480e      	ldr	r0, [pc, #56]	; (4010b4 <main+0x3b0>)
  40107c:	4b0e      	ldr	r3, [pc, #56]	; (4010b8 <main+0x3b4>)
  40107e:	4798      	blx	r3
	spi_master_initialize();
  401080:	4b0e      	ldr	r3, [pc, #56]	; (4010bc <main+0x3b8>)
  401082:	4798      	blx	r3
  401084:	e6bc      	b.n	400e00 <main+0xfc>
			}
			if (i < COMM_BUFFER_SIZE) {
				printf("-E- block %u contains unexpected data \n\r",
					(unsigned)block);
			} else {
				printf("   <- Slave response last block %x \n\r",
  401086:	4641      	mov	r1, r8
  401088:	480d      	ldr	r0, [pc, #52]	; (4010c0 <main+0x3bc>)
  40108a:	4b0b      	ldr	r3, [pc, #44]	; (4010b8 <main+0x3b4>)
  40108c:	4798      	blx	r3
  40108e:	e710      	b.n	400eb2 <main+0x1ae>
				if (gs_uc_spi_buffer[i] != (block - 1)) {
					break;
				}
			}
			if (i < COMM_BUFFER_SIZE) {
				printf("-E- block %u contains unexpected data \n\r",
  401090:	4629      	mov	r1, r5
  401092:	480c      	ldr	r0, [pc, #48]	; (4010c4 <main+0x3c0>)
  401094:	4b08      	ldr	r3, [pc, #32]	; (4010b8 <main+0x3b4>)
  401096:	4798      	blx	r3
  401098:	e70b      	b.n	400eb2 <main+0x1ae>
  40109a:	bf00      	nop
  40109c:	00405a10 	.word	0x00405a10
  4010a0:	0040126d 	.word	0x0040126d
  4010a4:	004059c8 	.word	0x004059c8
  4010a8:	00405af8 	.word	0x00405af8
  4010ac:	00405b8c 	.word	0x00405b8c
  4010b0:	20000004 	.word	0x20000004
  4010b4:	00405b18 	.word	0x00405b18
  4010b8:	00401119 	.word	0x00401119
  4010bc:	00400ad5 	.word	0x00400ad5
  4010c0:	00405b38 	.word	0x00405b38
  4010c4:	00405b60 	.word	0x00405b60

004010c8 <__libc_init_array>:
  4010c8:	b570      	push	{r4, r5, r6, lr}
  4010ca:	4e0f      	ldr	r6, [pc, #60]	; (401108 <__libc_init_array+0x40>)
  4010cc:	4d0f      	ldr	r5, [pc, #60]	; (40110c <__libc_init_array+0x44>)
  4010ce:	1b76      	subs	r6, r6, r5
  4010d0:	10b6      	asrs	r6, r6, #2
  4010d2:	bf18      	it	ne
  4010d4:	2400      	movne	r4, #0
  4010d6:	d005      	beq.n	4010e4 <__libc_init_array+0x1c>
  4010d8:	3401      	adds	r4, #1
  4010da:	f855 3b04 	ldr.w	r3, [r5], #4
  4010de:	4798      	blx	r3
  4010e0:	42a6      	cmp	r6, r4
  4010e2:	d1f9      	bne.n	4010d8 <__libc_init_array+0x10>
  4010e4:	4e0a      	ldr	r6, [pc, #40]	; (401110 <__libc_init_array+0x48>)
  4010e6:	4d0b      	ldr	r5, [pc, #44]	; (401114 <__libc_init_array+0x4c>)
  4010e8:	1b76      	subs	r6, r6, r5
  4010ea:	f004 fe19 	bl	405d20 <_init>
  4010ee:	10b6      	asrs	r6, r6, #2
  4010f0:	bf18      	it	ne
  4010f2:	2400      	movne	r4, #0
  4010f4:	d006      	beq.n	401104 <__libc_init_array+0x3c>
  4010f6:	3401      	adds	r4, #1
  4010f8:	f855 3b04 	ldr.w	r3, [r5], #4
  4010fc:	4798      	blx	r3
  4010fe:	42a6      	cmp	r6, r4
  401100:	d1f9      	bne.n	4010f6 <__libc_init_array+0x2e>
  401102:	bd70      	pop	{r4, r5, r6, pc}
  401104:	bd70      	pop	{r4, r5, r6, pc}
  401106:	bf00      	nop
  401108:	00405d2c 	.word	0x00405d2c
  40110c:	00405d2c 	.word	0x00405d2c
  401110:	00405d34 	.word	0x00405d34
  401114:	00405d2c 	.word	0x00405d2c

00401118 <iprintf>:
  401118:	b40f      	push	{r0, r1, r2, r3}
  40111a:	b500      	push	{lr}
  40111c:	4907      	ldr	r1, [pc, #28]	; (40113c <iprintf+0x24>)
  40111e:	b083      	sub	sp, #12
  401120:	ab04      	add	r3, sp, #16
  401122:	6808      	ldr	r0, [r1, #0]
  401124:	f853 2b04 	ldr.w	r2, [r3], #4
  401128:	6881      	ldr	r1, [r0, #8]
  40112a:	9301      	str	r3, [sp, #4]
  40112c:	f000 fa12 	bl	401554 <_vfiprintf_r>
  401130:	b003      	add	sp, #12
  401132:	f85d eb04 	ldr.w	lr, [sp], #4
  401136:	b004      	add	sp, #16
  401138:	4770      	bx	lr
  40113a:	bf00      	nop
  40113c:	20000438 	.word	0x20000438

00401140 <iscanf>:
  401140:	b40f      	push	{r0, r1, r2, r3}
  401142:	b500      	push	{lr}
  401144:	4907      	ldr	r1, [pc, #28]	; (401164 <iscanf+0x24>)
  401146:	b083      	sub	sp, #12
  401148:	ab04      	add	r3, sp, #16
  40114a:	6808      	ldr	r0, [r1, #0]
  40114c:	f853 2b04 	ldr.w	r2, [r3], #4
  401150:	6841      	ldr	r1, [r0, #4]
  401152:	9301      	str	r3, [sp, #4]
  401154:	f001 f932 	bl	4023bc <__svfiscanf_r>
  401158:	b003      	add	sp, #12
  40115a:	f85d eb04 	ldr.w	lr, [sp], #4
  40115e:	b004      	add	sp, #16
  401160:	4770      	bx	lr
  401162:	bf00      	nop
  401164:	20000438 	.word	0x20000438

00401168 <memset>:
  401168:	b470      	push	{r4, r5, r6}
  40116a:	0784      	lsls	r4, r0, #30
  40116c:	d046      	beq.n	4011fc <memset+0x94>
  40116e:	1e54      	subs	r4, r2, #1
  401170:	2a00      	cmp	r2, #0
  401172:	d041      	beq.n	4011f8 <memset+0x90>
  401174:	b2cd      	uxtb	r5, r1
  401176:	4603      	mov	r3, r0
  401178:	e002      	b.n	401180 <memset+0x18>
  40117a:	1e62      	subs	r2, r4, #1
  40117c:	b3e4      	cbz	r4, 4011f8 <memset+0x90>
  40117e:	4614      	mov	r4, r2
  401180:	f803 5b01 	strb.w	r5, [r3], #1
  401184:	079a      	lsls	r2, r3, #30
  401186:	d1f8      	bne.n	40117a <memset+0x12>
  401188:	2c03      	cmp	r4, #3
  40118a:	d92e      	bls.n	4011ea <memset+0x82>
  40118c:	b2cd      	uxtb	r5, r1
  40118e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401192:	2c0f      	cmp	r4, #15
  401194:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401198:	d919      	bls.n	4011ce <memset+0x66>
  40119a:	f103 0210 	add.w	r2, r3, #16
  40119e:	4626      	mov	r6, r4
  4011a0:	3e10      	subs	r6, #16
  4011a2:	2e0f      	cmp	r6, #15
  4011a4:	f842 5c10 	str.w	r5, [r2, #-16]
  4011a8:	f842 5c0c 	str.w	r5, [r2, #-12]
  4011ac:	f842 5c08 	str.w	r5, [r2, #-8]
  4011b0:	f842 5c04 	str.w	r5, [r2, #-4]
  4011b4:	f102 0210 	add.w	r2, r2, #16
  4011b8:	d8f2      	bhi.n	4011a0 <memset+0x38>
  4011ba:	f1a4 0210 	sub.w	r2, r4, #16
  4011be:	f022 020f 	bic.w	r2, r2, #15
  4011c2:	f004 040f 	and.w	r4, r4, #15
  4011c6:	3210      	adds	r2, #16
  4011c8:	2c03      	cmp	r4, #3
  4011ca:	4413      	add	r3, r2
  4011cc:	d90d      	bls.n	4011ea <memset+0x82>
  4011ce:	461e      	mov	r6, r3
  4011d0:	4622      	mov	r2, r4
  4011d2:	3a04      	subs	r2, #4
  4011d4:	2a03      	cmp	r2, #3
  4011d6:	f846 5b04 	str.w	r5, [r6], #4
  4011da:	d8fa      	bhi.n	4011d2 <memset+0x6a>
  4011dc:	1f22      	subs	r2, r4, #4
  4011de:	f022 0203 	bic.w	r2, r2, #3
  4011e2:	3204      	adds	r2, #4
  4011e4:	4413      	add	r3, r2
  4011e6:	f004 0403 	and.w	r4, r4, #3
  4011ea:	b12c      	cbz	r4, 4011f8 <memset+0x90>
  4011ec:	b2c9      	uxtb	r1, r1
  4011ee:	441c      	add	r4, r3
  4011f0:	f803 1b01 	strb.w	r1, [r3], #1
  4011f4:	42a3      	cmp	r3, r4
  4011f6:	d1fb      	bne.n	4011f0 <memset+0x88>
  4011f8:	bc70      	pop	{r4, r5, r6}
  4011fa:	4770      	bx	lr
  4011fc:	4614      	mov	r4, r2
  4011fe:	4603      	mov	r3, r0
  401200:	e7c2      	b.n	401188 <memset+0x20>
  401202:	bf00      	nop

00401204 <_puts_r>:
  401204:	b5f0      	push	{r4, r5, r6, r7, lr}
  401206:	4605      	mov	r5, r0
  401208:	b089      	sub	sp, #36	; 0x24
  40120a:	4608      	mov	r0, r1
  40120c:	460c      	mov	r4, r1
  40120e:	f000 f8f7 	bl	401400 <strlen>
  401212:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401214:	4f14      	ldr	r7, [pc, #80]	; (401268 <_puts_r+0x64>)
  401216:	9404      	str	r4, [sp, #16]
  401218:	2601      	movs	r6, #1
  40121a:	1c44      	adds	r4, r0, #1
  40121c:	a904      	add	r1, sp, #16
  40121e:	2202      	movs	r2, #2
  401220:	9403      	str	r4, [sp, #12]
  401222:	9005      	str	r0, [sp, #20]
  401224:	68ac      	ldr	r4, [r5, #8]
  401226:	9706      	str	r7, [sp, #24]
  401228:	9607      	str	r6, [sp, #28]
  40122a:	9101      	str	r1, [sp, #4]
  40122c:	9202      	str	r2, [sp, #8]
  40122e:	b1b3      	cbz	r3, 40125e <_puts_r+0x5a>
  401230:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401234:	049a      	lsls	r2, r3, #18
  401236:	d406      	bmi.n	401246 <_puts_r+0x42>
  401238:	6e62      	ldr	r2, [r4, #100]	; 0x64
  40123a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  40123e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  401242:	81a3      	strh	r3, [r4, #12]
  401244:	6662      	str	r2, [r4, #100]	; 0x64
  401246:	4621      	mov	r1, r4
  401248:	4628      	mov	r0, r5
  40124a:	aa01      	add	r2, sp, #4
  40124c:	f002 fa3a 	bl	4036c4 <__sfvwrite_r>
  401250:	2800      	cmp	r0, #0
  401252:	bf14      	ite	ne
  401254:	f04f 30ff 	movne.w	r0, #4294967295
  401258:	200a      	moveq	r0, #10
  40125a:	b009      	add	sp, #36	; 0x24
  40125c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40125e:	4628      	mov	r0, r5
  401260:	f001 ffb0 	bl	4031c4 <__sinit>
  401264:	e7e4      	b.n	401230 <_puts_r+0x2c>
  401266:	bf00      	nop
  401268:	00405ba4 	.word	0x00405ba4

0040126c <puts>:
  40126c:	4b02      	ldr	r3, [pc, #8]	; (401278 <puts+0xc>)
  40126e:	4601      	mov	r1, r0
  401270:	6818      	ldr	r0, [r3, #0]
  401272:	f7ff bfc7 	b.w	401204 <_puts_r>
  401276:	bf00      	nop
  401278:	20000438 	.word	0x20000438

0040127c <setbuf>:
  40127c:	2900      	cmp	r1, #0
  40127e:	bf0c      	ite	eq
  401280:	2202      	moveq	r2, #2
  401282:	2200      	movne	r2, #0
  401284:	f44f 6380 	mov.w	r3, #1024	; 0x400
  401288:	f000 b800 	b.w	40128c <setvbuf>

0040128c <setvbuf>:
  40128c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401290:	4c51      	ldr	r4, [pc, #324]	; (4013d8 <setvbuf+0x14c>)
  401292:	6825      	ldr	r5, [r4, #0]
  401294:	b083      	sub	sp, #12
  401296:	4604      	mov	r4, r0
  401298:	460f      	mov	r7, r1
  40129a:	4690      	mov	r8, r2
  40129c:	461e      	mov	r6, r3
  40129e:	b115      	cbz	r5, 4012a6 <setvbuf+0x1a>
  4012a0:	6bab      	ldr	r3, [r5, #56]	; 0x38
  4012a2:	2b00      	cmp	r3, #0
  4012a4:	d079      	beq.n	40139a <setvbuf+0x10e>
  4012a6:	f1b8 0f02 	cmp.w	r8, #2
  4012aa:	d004      	beq.n	4012b6 <setvbuf+0x2a>
  4012ac:	f1b8 0f01 	cmp.w	r8, #1
  4012b0:	d87f      	bhi.n	4013b2 <setvbuf+0x126>
  4012b2:	2e00      	cmp	r6, #0
  4012b4:	db7d      	blt.n	4013b2 <setvbuf+0x126>
  4012b6:	4621      	mov	r1, r4
  4012b8:	4628      	mov	r0, r5
  4012ba:	f001 fedd 	bl	403078 <_fflush_r>
  4012be:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4012c0:	b141      	cbz	r1, 4012d4 <setvbuf+0x48>
  4012c2:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4012c6:	4299      	cmp	r1, r3
  4012c8:	d002      	beq.n	4012d0 <setvbuf+0x44>
  4012ca:	4628      	mov	r0, r5
  4012cc:	f002 f912 	bl	4034f4 <_free_r>
  4012d0:	2300      	movs	r3, #0
  4012d2:	6323      	str	r3, [r4, #48]	; 0x30
  4012d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4012d8:	2200      	movs	r2, #0
  4012da:	61a2      	str	r2, [r4, #24]
  4012dc:	6062      	str	r2, [r4, #4]
  4012de:	061a      	lsls	r2, r3, #24
  4012e0:	d454      	bmi.n	40138c <setvbuf+0x100>
  4012e2:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  4012e6:	f023 0303 	bic.w	r3, r3, #3
  4012ea:	f1b8 0f02 	cmp.w	r8, #2
  4012ee:	81a3      	strh	r3, [r4, #12]
  4012f0:	d039      	beq.n	401366 <setvbuf+0xda>
  4012f2:	ab01      	add	r3, sp, #4
  4012f4:	466a      	mov	r2, sp
  4012f6:	4621      	mov	r1, r4
  4012f8:	4628      	mov	r0, r5
  4012fa:	f002 fbcd 	bl	403a98 <__swhatbuf_r>
  4012fe:	89a3      	ldrh	r3, [r4, #12]
  401300:	4318      	orrs	r0, r3
  401302:	81a0      	strh	r0, [r4, #12]
  401304:	b326      	cbz	r6, 401350 <setvbuf+0xc4>
  401306:	b327      	cbz	r7, 401352 <setvbuf+0xc6>
  401308:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40130a:	2b00      	cmp	r3, #0
  40130c:	d04d      	beq.n	4013aa <setvbuf+0x11e>
  40130e:	9b00      	ldr	r3, [sp, #0]
  401310:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
  401314:	6027      	str	r7, [r4, #0]
  401316:	429e      	cmp	r6, r3
  401318:	bf1c      	itt	ne
  40131a:	f440 6000 	orrne.w	r0, r0, #2048	; 0x800
  40131e:	81a0      	strhne	r0, [r4, #12]
  401320:	f1b8 0f01 	cmp.w	r8, #1
  401324:	bf08      	it	eq
  401326:	f040 0001 	orreq.w	r0, r0, #1
  40132a:	b283      	uxth	r3, r0
  40132c:	bf08      	it	eq
  40132e:	81a0      	strheq	r0, [r4, #12]
  401330:	f003 0008 	and.w	r0, r3, #8
  401334:	b280      	uxth	r0, r0
  401336:	6127      	str	r7, [r4, #16]
  401338:	6166      	str	r6, [r4, #20]
  40133a:	b318      	cbz	r0, 401384 <setvbuf+0xf8>
  40133c:	f013 0001 	ands.w	r0, r3, #1
  401340:	d02f      	beq.n	4013a2 <setvbuf+0x116>
  401342:	2000      	movs	r0, #0
  401344:	4276      	negs	r6, r6
  401346:	61a6      	str	r6, [r4, #24]
  401348:	60a0      	str	r0, [r4, #8]
  40134a:	b003      	add	sp, #12
  40134c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401350:	9e00      	ldr	r6, [sp, #0]
  401352:	4630      	mov	r0, r6
  401354:	f002 fc14 	bl	403b80 <malloc>
  401358:	4607      	mov	r7, r0
  40135a:	b368      	cbz	r0, 4013b8 <setvbuf+0x12c>
  40135c:	89a3      	ldrh	r3, [r4, #12]
  40135e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  401362:	81a3      	strh	r3, [r4, #12]
  401364:	e7d0      	b.n	401308 <setvbuf+0x7c>
  401366:	2000      	movs	r0, #0
  401368:	f104 0243 	add.w	r2, r4, #67	; 0x43
  40136c:	f043 0302 	orr.w	r3, r3, #2
  401370:	2500      	movs	r5, #0
  401372:	2101      	movs	r1, #1
  401374:	81a3      	strh	r3, [r4, #12]
  401376:	60a5      	str	r5, [r4, #8]
  401378:	6022      	str	r2, [r4, #0]
  40137a:	6122      	str	r2, [r4, #16]
  40137c:	6161      	str	r1, [r4, #20]
  40137e:	b003      	add	sp, #12
  401380:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401384:	60a0      	str	r0, [r4, #8]
  401386:	b003      	add	sp, #12
  401388:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40138c:	6921      	ldr	r1, [r4, #16]
  40138e:	4628      	mov	r0, r5
  401390:	f002 f8b0 	bl	4034f4 <_free_r>
  401394:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401398:	e7a3      	b.n	4012e2 <setvbuf+0x56>
  40139a:	4628      	mov	r0, r5
  40139c:	f001 ff12 	bl	4031c4 <__sinit>
  4013a0:	e781      	b.n	4012a6 <setvbuf+0x1a>
  4013a2:	60a6      	str	r6, [r4, #8]
  4013a4:	b003      	add	sp, #12
  4013a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4013aa:	4628      	mov	r0, r5
  4013ac:	f001 ff0a 	bl	4031c4 <__sinit>
  4013b0:	e7ad      	b.n	40130e <setvbuf+0x82>
  4013b2:	f04f 30ff 	mov.w	r0, #4294967295
  4013b6:	e7e2      	b.n	40137e <setvbuf+0xf2>
  4013b8:	f8dd 9000 	ldr.w	r9, [sp]
  4013bc:	45b1      	cmp	r9, r6
  4013be:	d006      	beq.n	4013ce <setvbuf+0x142>
  4013c0:	4648      	mov	r0, r9
  4013c2:	f002 fbdd 	bl	403b80 <malloc>
  4013c6:	4607      	mov	r7, r0
  4013c8:	b108      	cbz	r0, 4013ce <setvbuf+0x142>
  4013ca:	464e      	mov	r6, r9
  4013cc:	e7c6      	b.n	40135c <setvbuf+0xd0>
  4013ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4013d2:	f04f 30ff 	mov.w	r0, #4294967295
  4013d6:	e7c7      	b.n	401368 <setvbuf+0xdc>
  4013d8:	20000438 	.word	0x20000438
	...

00401400 <strlen>:
  401400:	f890 f000 	pld	[r0]
  401404:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  401408:	f020 0107 	bic.w	r1, r0, #7
  40140c:	f06f 0c00 	mvn.w	ip, #0
  401410:	f010 0407 	ands.w	r4, r0, #7
  401414:	f891 f020 	pld	[r1, #32]
  401418:	f040 8049 	bne.w	4014ae <strlen+0xae>
  40141c:	f04f 0400 	mov.w	r4, #0
  401420:	f06f 0007 	mvn.w	r0, #7
  401424:	e9d1 2300 	ldrd	r2, r3, [r1]
  401428:	f891 f040 	pld	[r1, #64]	; 0x40
  40142c:	f100 0008 	add.w	r0, r0, #8
  401430:	fa82 f24c 	uadd8	r2, r2, ip
  401434:	faa4 f28c 	sel	r2, r4, ip
  401438:	fa83 f34c 	uadd8	r3, r3, ip
  40143c:	faa2 f38c 	sel	r3, r2, ip
  401440:	bb4b      	cbnz	r3, 401496 <strlen+0x96>
  401442:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  401446:	fa82 f24c 	uadd8	r2, r2, ip
  40144a:	f100 0008 	add.w	r0, r0, #8
  40144e:	faa4 f28c 	sel	r2, r4, ip
  401452:	fa83 f34c 	uadd8	r3, r3, ip
  401456:	faa2 f38c 	sel	r3, r2, ip
  40145a:	b9e3      	cbnz	r3, 401496 <strlen+0x96>
  40145c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  401460:	fa82 f24c 	uadd8	r2, r2, ip
  401464:	f100 0008 	add.w	r0, r0, #8
  401468:	faa4 f28c 	sel	r2, r4, ip
  40146c:	fa83 f34c 	uadd8	r3, r3, ip
  401470:	faa2 f38c 	sel	r3, r2, ip
  401474:	b97b      	cbnz	r3, 401496 <strlen+0x96>
  401476:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40147a:	f101 0120 	add.w	r1, r1, #32
  40147e:	fa82 f24c 	uadd8	r2, r2, ip
  401482:	f100 0008 	add.w	r0, r0, #8
  401486:	faa4 f28c 	sel	r2, r4, ip
  40148a:	fa83 f34c 	uadd8	r3, r3, ip
  40148e:	faa2 f38c 	sel	r3, r2, ip
  401492:	2b00      	cmp	r3, #0
  401494:	d0c6      	beq.n	401424 <strlen+0x24>
  401496:	2a00      	cmp	r2, #0
  401498:	bf04      	itt	eq
  40149a:	3004      	addeq	r0, #4
  40149c:	461a      	moveq	r2, r3
  40149e:	ba12      	rev	r2, r2
  4014a0:	fab2 f282 	clz	r2, r2
  4014a4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4014a8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4014ac:	4770      	bx	lr
  4014ae:	e9d1 2300 	ldrd	r2, r3, [r1]
  4014b2:	f004 0503 	and.w	r5, r4, #3
  4014b6:	f1c4 0000 	rsb	r0, r4, #0
  4014ba:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4014be:	f014 0f04 	tst.w	r4, #4
  4014c2:	f891 f040 	pld	[r1, #64]	; 0x40
  4014c6:	fa0c f505 	lsl.w	r5, ip, r5
  4014ca:	ea62 0205 	orn	r2, r2, r5
  4014ce:	bf1c      	itt	ne
  4014d0:	ea63 0305 	ornne	r3, r3, r5
  4014d4:	4662      	movne	r2, ip
  4014d6:	f04f 0400 	mov.w	r4, #0
  4014da:	e7a9      	b.n	401430 <strlen+0x30>

004014dc <__sprint_r.part.0>:
  4014dc:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  4014de:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4014e2:	049c      	lsls	r4, r3, #18
  4014e4:	4692      	mov	sl, r2
  4014e6:	d52c      	bpl.n	401542 <__sprint_r.part.0+0x66>
  4014e8:	6893      	ldr	r3, [r2, #8]
  4014ea:	6812      	ldr	r2, [r2, #0]
  4014ec:	b33b      	cbz	r3, 40153e <__sprint_r.part.0+0x62>
  4014ee:	460f      	mov	r7, r1
  4014f0:	4680      	mov	r8, r0
  4014f2:	f102 0908 	add.w	r9, r2, #8
  4014f6:	e919 0060 	ldmdb	r9, {r5, r6}
  4014fa:	08b6      	lsrs	r6, r6, #2
  4014fc:	d017      	beq.n	40152e <__sprint_r.part.0+0x52>
  4014fe:	3d04      	subs	r5, #4
  401500:	2400      	movs	r4, #0
  401502:	e001      	b.n	401508 <__sprint_r.part.0+0x2c>
  401504:	42a6      	cmp	r6, r4
  401506:	d010      	beq.n	40152a <__sprint_r.part.0+0x4e>
  401508:	463a      	mov	r2, r7
  40150a:	f855 1f04 	ldr.w	r1, [r5, #4]!
  40150e:	4640      	mov	r0, r8
  401510:	f001 fec2 	bl	403298 <_fputwc_r>
  401514:	1c43      	adds	r3, r0, #1
  401516:	f104 0401 	add.w	r4, r4, #1
  40151a:	d1f3      	bne.n	401504 <__sprint_r.part.0+0x28>
  40151c:	2300      	movs	r3, #0
  40151e:	f8ca 3008 	str.w	r3, [sl, #8]
  401522:	f8ca 3004 	str.w	r3, [sl, #4]
  401526:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40152a:	f8da 3008 	ldr.w	r3, [sl, #8]
  40152e:	eba3 0386 	sub.w	r3, r3, r6, lsl #2
  401532:	f8ca 3008 	str.w	r3, [sl, #8]
  401536:	f109 0908 	add.w	r9, r9, #8
  40153a:	2b00      	cmp	r3, #0
  40153c:	d1db      	bne.n	4014f6 <__sprint_r.part.0+0x1a>
  40153e:	2000      	movs	r0, #0
  401540:	e7ec      	b.n	40151c <__sprint_r.part.0+0x40>
  401542:	f002 f8bf 	bl	4036c4 <__sfvwrite_r>
  401546:	2300      	movs	r3, #0
  401548:	f8ca 3008 	str.w	r3, [sl, #8]
  40154c:	f8ca 3004 	str.w	r3, [sl, #4]
  401550:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00401554 <_vfiprintf_r>:
  401554:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401558:	b0ab      	sub	sp, #172	; 0xac
  40155a:	461c      	mov	r4, r3
  40155c:	9100      	str	r1, [sp, #0]
  40155e:	4690      	mov	r8, r2
  401560:	9304      	str	r3, [sp, #16]
  401562:	9005      	str	r0, [sp, #20]
  401564:	b118      	cbz	r0, 40156e <_vfiprintf_r+0x1a>
  401566:	6b83      	ldr	r3, [r0, #56]	; 0x38
  401568:	2b00      	cmp	r3, #0
  40156a:	f000 80de 	beq.w	40172a <_vfiprintf_r+0x1d6>
  40156e:	9800      	ldr	r0, [sp, #0]
  401570:	f9b0 100c 	ldrsh.w	r1, [r0, #12]
  401574:	b28a      	uxth	r2, r1
  401576:	0495      	lsls	r5, r2, #18
  401578:	d407      	bmi.n	40158a <_vfiprintf_r+0x36>
  40157a:	6e43      	ldr	r3, [r0, #100]	; 0x64
  40157c:	f441 5200 	orr.w	r2, r1, #8192	; 0x2000
  401580:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  401584:	8182      	strh	r2, [r0, #12]
  401586:	6643      	str	r3, [r0, #100]	; 0x64
  401588:	b292      	uxth	r2, r2
  40158a:	0711      	lsls	r1, r2, #28
  40158c:	f140 80b1 	bpl.w	4016f2 <_vfiprintf_r+0x19e>
  401590:	9b00      	ldr	r3, [sp, #0]
  401592:	691b      	ldr	r3, [r3, #16]
  401594:	2b00      	cmp	r3, #0
  401596:	f000 80ac 	beq.w	4016f2 <_vfiprintf_r+0x19e>
  40159a:	f002 021a 	and.w	r2, r2, #26
  40159e:	2a0a      	cmp	r2, #10
  4015a0:	f000 80b5 	beq.w	40170e <_vfiprintf_r+0x1ba>
  4015a4:	2300      	movs	r3, #0
  4015a6:	f10d 0b68 	add.w	fp, sp, #104	; 0x68
  4015aa:	9302      	str	r3, [sp, #8]
  4015ac:	930f      	str	r3, [sp, #60]	; 0x3c
  4015ae:	930e      	str	r3, [sp, #56]	; 0x38
  4015b0:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  4015b4:	46da      	mov	sl, fp
  4015b6:	f898 3000 	ldrb.w	r3, [r8]
  4015ba:	4644      	mov	r4, r8
  4015bc:	b1fb      	cbz	r3, 4015fe <_vfiprintf_r+0xaa>
  4015be:	2b25      	cmp	r3, #37	; 0x25
  4015c0:	d102      	bne.n	4015c8 <_vfiprintf_r+0x74>
  4015c2:	e01c      	b.n	4015fe <_vfiprintf_r+0xaa>
  4015c4:	2b25      	cmp	r3, #37	; 0x25
  4015c6:	d003      	beq.n	4015d0 <_vfiprintf_r+0x7c>
  4015c8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4015cc:	2b00      	cmp	r3, #0
  4015ce:	d1f9      	bne.n	4015c4 <_vfiprintf_r+0x70>
  4015d0:	ebc8 0504 	rsb	r5, r8, r4
  4015d4:	b19d      	cbz	r5, 4015fe <_vfiprintf_r+0xaa>
  4015d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4015d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4015da:	f8ca 8000 	str.w	r8, [sl]
  4015de:	3301      	adds	r3, #1
  4015e0:	442a      	add	r2, r5
  4015e2:	2b07      	cmp	r3, #7
  4015e4:	f8ca 5004 	str.w	r5, [sl, #4]
  4015e8:	920f      	str	r2, [sp, #60]	; 0x3c
  4015ea:	930e      	str	r3, [sp, #56]	; 0x38
  4015ec:	dd7b      	ble.n	4016e6 <_vfiprintf_r+0x192>
  4015ee:	2a00      	cmp	r2, #0
  4015f0:	f040 8528 	bne.w	402044 <_vfiprintf_r+0xaf0>
  4015f4:	9b02      	ldr	r3, [sp, #8]
  4015f6:	920e      	str	r2, [sp, #56]	; 0x38
  4015f8:	442b      	add	r3, r5
  4015fa:	46da      	mov	sl, fp
  4015fc:	9302      	str	r3, [sp, #8]
  4015fe:	7823      	ldrb	r3, [r4, #0]
  401600:	2b00      	cmp	r3, #0
  401602:	f000 843e 	beq.w	401e82 <_vfiprintf_r+0x92e>
  401606:	2100      	movs	r1, #0
  401608:	f04f 0300 	mov.w	r3, #0
  40160c:	f04f 32ff 	mov.w	r2, #4294967295
  401610:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  401614:	f104 0801 	add.w	r8, r4, #1
  401618:	7863      	ldrb	r3, [r4, #1]
  40161a:	9201      	str	r2, [sp, #4]
  40161c:	4608      	mov	r0, r1
  40161e:	460e      	mov	r6, r1
  401620:	460c      	mov	r4, r1
  401622:	f108 0801 	add.w	r8, r8, #1
  401626:	f1a3 0220 	sub.w	r2, r3, #32
  40162a:	2a58      	cmp	r2, #88	; 0x58
  40162c:	f200 8393 	bhi.w	401d56 <_vfiprintf_r+0x802>
  401630:	e8df f012 	tbh	[pc, r2, lsl #1]
  401634:	03910346 	.word	0x03910346
  401638:	034e0391 	.word	0x034e0391
  40163c:	03910391 	.word	0x03910391
  401640:	03910391 	.word	0x03910391
  401644:	03910391 	.word	0x03910391
  401648:	02670289 	.word	0x02670289
  40164c:	00800391 	.word	0x00800391
  401650:	0391026c 	.word	0x0391026c
  401654:	025901c6 	.word	0x025901c6
  401658:	02590259 	.word	0x02590259
  40165c:	02590259 	.word	0x02590259
  401660:	02590259 	.word	0x02590259
  401664:	02590259 	.word	0x02590259
  401668:	03910391 	.word	0x03910391
  40166c:	03910391 	.word	0x03910391
  401670:	03910391 	.word	0x03910391
  401674:	03910391 	.word	0x03910391
  401678:	03910391 	.word	0x03910391
  40167c:	039101cb 	.word	0x039101cb
  401680:	03910391 	.word	0x03910391
  401684:	03910391 	.word	0x03910391
  401688:	03910391 	.word	0x03910391
  40168c:	03910391 	.word	0x03910391
  401690:	02140391 	.word	0x02140391
  401694:	03910391 	.word	0x03910391
  401698:	03910391 	.word	0x03910391
  40169c:	02ee0391 	.word	0x02ee0391
  4016a0:	03910391 	.word	0x03910391
  4016a4:	03910311 	.word	0x03910311
  4016a8:	03910391 	.word	0x03910391
  4016ac:	03910391 	.word	0x03910391
  4016b0:	03910391 	.word	0x03910391
  4016b4:	03910391 	.word	0x03910391
  4016b8:	03340391 	.word	0x03340391
  4016bc:	0391038a 	.word	0x0391038a
  4016c0:	03910391 	.word	0x03910391
  4016c4:	038a0367 	.word	0x038a0367
  4016c8:	03910391 	.word	0x03910391
  4016cc:	0391036c 	.word	0x0391036c
  4016d0:	02950379 	.word	0x02950379
  4016d4:	02e90085 	.word	0x02e90085
  4016d8:	029b0391 	.word	0x029b0391
  4016dc:	02ba0391 	.word	0x02ba0391
  4016e0:	03910391 	.word	0x03910391
  4016e4:	0353      	.short	0x0353
  4016e6:	f10a 0a08 	add.w	sl, sl, #8
  4016ea:	9b02      	ldr	r3, [sp, #8]
  4016ec:	442b      	add	r3, r5
  4016ee:	9302      	str	r3, [sp, #8]
  4016f0:	e785      	b.n	4015fe <_vfiprintf_r+0xaa>
  4016f2:	9900      	ldr	r1, [sp, #0]
  4016f4:	9805      	ldr	r0, [sp, #20]
  4016f6:	f001 fba7 	bl	402e48 <__swsetup_r>
  4016fa:	2800      	cmp	r0, #0
  4016fc:	f040 8558 	bne.w	4021b0 <_vfiprintf_r+0xc5c>
  401700:	9b00      	ldr	r3, [sp, #0]
  401702:	899a      	ldrh	r2, [r3, #12]
  401704:	f002 021a 	and.w	r2, r2, #26
  401708:	2a0a      	cmp	r2, #10
  40170a:	f47f af4b 	bne.w	4015a4 <_vfiprintf_r+0x50>
  40170e:	9900      	ldr	r1, [sp, #0]
  401710:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
  401714:	2b00      	cmp	r3, #0
  401716:	f6ff af45 	blt.w	4015a4 <_vfiprintf_r+0x50>
  40171a:	4623      	mov	r3, r4
  40171c:	4642      	mov	r2, r8
  40171e:	9805      	ldr	r0, [sp, #20]
  401720:	f000 fe16 	bl	402350 <__sbprintf>
  401724:	b02b      	add	sp, #172	; 0xac
  401726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40172a:	f001 fd4b 	bl	4031c4 <__sinit>
  40172e:	e71e      	b.n	40156e <_vfiprintf_r+0x1a>
  401730:	4264      	negs	r4, r4
  401732:	9304      	str	r3, [sp, #16]
  401734:	f046 0604 	orr.w	r6, r6, #4
  401738:	f898 3000 	ldrb.w	r3, [r8]
  40173c:	e771      	b.n	401622 <_vfiprintf_r+0xce>
  40173e:	2130      	movs	r1, #48	; 0x30
  401740:	9804      	ldr	r0, [sp, #16]
  401742:	f88d 1030 	strb.w	r1, [sp, #48]	; 0x30
  401746:	9901      	ldr	r1, [sp, #4]
  401748:	9406      	str	r4, [sp, #24]
  40174a:	f04f 0300 	mov.w	r3, #0
  40174e:	2278      	movs	r2, #120	; 0x78
  401750:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  401754:	2900      	cmp	r1, #0
  401756:	4603      	mov	r3, r0
  401758:	f88d 2031 	strb.w	r2, [sp, #49]	; 0x31
  40175c:	6804      	ldr	r4, [r0, #0]
  40175e:	f103 0304 	add.w	r3, r3, #4
  401762:	f04f 0500 	mov.w	r5, #0
  401766:	f046 0202 	orr.w	r2, r6, #2
  40176a:	f2c0 8525 	blt.w	4021b8 <_vfiprintf_r+0xc64>
  40176e:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  401772:	ea54 0205 	orrs.w	r2, r4, r5
  401776:	f046 0602 	orr.w	r6, r6, #2
  40177a:	9304      	str	r3, [sp, #16]
  40177c:	f040 84bf 	bne.w	4020fe <_vfiprintf_r+0xbaa>
  401780:	48b3      	ldr	r0, [pc, #716]	; (401a50 <_vfiprintf_r+0x4fc>)
  401782:	9b01      	ldr	r3, [sp, #4]
  401784:	2b00      	cmp	r3, #0
  401786:	f040 841c 	bne.w	401fc2 <_vfiprintf_r+0xa6e>
  40178a:	4699      	mov	r9, r3
  40178c:	2300      	movs	r3, #0
  40178e:	9301      	str	r3, [sp, #4]
  401790:	9303      	str	r3, [sp, #12]
  401792:	465f      	mov	r7, fp
  401794:	9b01      	ldr	r3, [sp, #4]
  401796:	9a03      	ldr	r2, [sp, #12]
  401798:	4293      	cmp	r3, r2
  40179a:	bfb8      	it	lt
  40179c:	4613      	movlt	r3, r2
  40179e:	461d      	mov	r5, r3
  4017a0:	f1b9 0f00 	cmp.w	r9, #0
  4017a4:	d000      	beq.n	4017a8 <_vfiprintf_r+0x254>
  4017a6:	3501      	adds	r5, #1
  4017a8:	f016 0302 	ands.w	r3, r6, #2
  4017ac:	9307      	str	r3, [sp, #28]
  4017ae:	bf18      	it	ne
  4017b0:	3502      	addne	r5, #2
  4017b2:	f016 0384 	ands.w	r3, r6, #132	; 0x84
  4017b6:	9308      	str	r3, [sp, #32]
  4017b8:	f040 82f1 	bne.w	401d9e <_vfiprintf_r+0x84a>
  4017bc:	9b06      	ldr	r3, [sp, #24]
  4017be:	1b5c      	subs	r4, r3, r5
  4017c0:	2c00      	cmp	r4, #0
  4017c2:	f340 82ec 	ble.w	401d9e <_vfiprintf_r+0x84a>
  4017c6:	2c10      	cmp	r4, #16
  4017c8:	f340 8556 	ble.w	402278 <_vfiprintf_r+0xd24>
  4017cc:	f8df 9284 	ldr.w	r9, [pc, #644]	; 401a54 <_vfiprintf_r+0x500>
  4017d0:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
  4017d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4017d6:	46d4      	mov	ip, sl
  4017d8:	2310      	movs	r3, #16
  4017da:	46c2      	mov	sl, r8
  4017dc:	4670      	mov	r0, lr
  4017de:	46a8      	mov	r8, r5
  4017e0:	464d      	mov	r5, r9
  4017e2:	f8dd 9014 	ldr.w	r9, [sp, #20]
  4017e6:	e007      	b.n	4017f8 <_vfiprintf_r+0x2a4>
  4017e8:	f100 0e02 	add.w	lr, r0, #2
  4017ec:	f10c 0c08 	add.w	ip, ip, #8
  4017f0:	4608      	mov	r0, r1
  4017f2:	3c10      	subs	r4, #16
  4017f4:	2c10      	cmp	r4, #16
  4017f6:	dd13      	ble.n	401820 <_vfiprintf_r+0x2cc>
  4017f8:	1c41      	adds	r1, r0, #1
  4017fa:	3210      	adds	r2, #16
  4017fc:	2907      	cmp	r1, #7
  4017fe:	920f      	str	r2, [sp, #60]	; 0x3c
  401800:	f8cc 5000 	str.w	r5, [ip]
  401804:	f8cc 3004 	str.w	r3, [ip, #4]
  401808:	910e      	str	r1, [sp, #56]	; 0x38
  40180a:	dded      	ble.n	4017e8 <_vfiprintf_r+0x294>
  40180c:	2a00      	cmp	r2, #0
  40180e:	f040 82b7 	bne.w	401d80 <_vfiprintf_r+0x82c>
  401812:	3c10      	subs	r4, #16
  401814:	2c10      	cmp	r4, #16
  401816:	4610      	mov	r0, r2
  401818:	f04f 0e01 	mov.w	lr, #1
  40181c:	46dc      	mov	ip, fp
  40181e:	dceb      	bgt.n	4017f8 <_vfiprintf_r+0x2a4>
  401820:	46a9      	mov	r9, r5
  401822:	4670      	mov	r0, lr
  401824:	4645      	mov	r5, r8
  401826:	46d0      	mov	r8, sl
  401828:	46e2      	mov	sl, ip
  40182a:	4422      	add	r2, r4
  40182c:	2807      	cmp	r0, #7
  40182e:	920f      	str	r2, [sp, #60]	; 0x3c
  401830:	f8ca 9000 	str.w	r9, [sl]
  401834:	f8ca 4004 	str.w	r4, [sl, #4]
  401838:	900e      	str	r0, [sp, #56]	; 0x38
  40183a:	f300 8375 	bgt.w	401f28 <_vfiprintf_r+0x9d4>
  40183e:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  401842:	f10a 0a08 	add.w	sl, sl, #8
  401846:	f100 0e01 	add.w	lr, r0, #1
  40184a:	2b00      	cmp	r3, #0
  40184c:	f040 82b0 	bne.w	401db0 <_vfiprintf_r+0x85c>
  401850:	9b07      	ldr	r3, [sp, #28]
  401852:	2b00      	cmp	r3, #0
  401854:	f000 82c3 	beq.w	401dde <_vfiprintf_r+0x88a>
  401858:	3202      	adds	r2, #2
  40185a:	a90c      	add	r1, sp, #48	; 0x30
  40185c:	2302      	movs	r3, #2
  40185e:	f1be 0f07 	cmp.w	lr, #7
  401862:	920f      	str	r2, [sp, #60]	; 0x3c
  401864:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  401868:	e88a 000a 	stmia.w	sl, {r1, r3}
  40186c:	f340 8378 	ble.w	401f60 <_vfiprintf_r+0xa0c>
  401870:	2a00      	cmp	r2, #0
  401872:	f040 840a 	bne.w	40208a <_vfiprintf_r+0xb36>
  401876:	9b08      	ldr	r3, [sp, #32]
  401878:	2b80      	cmp	r3, #128	; 0x80
  40187a:	f04f 0e01 	mov.w	lr, #1
  40187e:	4610      	mov	r0, r2
  401880:	46da      	mov	sl, fp
  401882:	f040 82b0 	bne.w	401de6 <_vfiprintf_r+0x892>
  401886:	9b06      	ldr	r3, [sp, #24]
  401888:	1b5c      	subs	r4, r3, r5
  40188a:	2c00      	cmp	r4, #0
  40188c:	f340 82ab 	ble.w	401de6 <_vfiprintf_r+0x892>
  401890:	2c10      	cmp	r4, #16
  401892:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 401a58 <_vfiprintf_r+0x504>
  401896:	f340 850b 	ble.w	4022b0 <_vfiprintf_r+0xd5c>
  40189a:	46d6      	mov	lr, sl
  40189c:	2310      	movs	r3, #16
  40189e:	46c2      	mov	sl, r8
  4018a0:	46a8      	mov	r8, r5
  4018a2:	464d      	mov	r5, r9
  4018a4:	f8dd 9014 	ldr.w	r9, [sp, #20]
  4018a8:	e007      	b.n	4018ba <_vfiprintf_r+0x366>
  4018aa:	f100 0c02 	add.w	ip, r0, #2
  4018ae:	f10e 0e08 	add.w	lr, lr, #8
  4018b2:	4608      	mov	r0, r1
  4018b4:	3c10      	subs	r4, #16
  4018b6:	2c10      	cmp	r4, #16
  4018b8:	dd13      	ble.n	4018e2 <_vfiprintf_r+0x38e>
  4018ba:	1c41      	adds	r1, r0, #1
  4018bc:	3210      	adds	r2, #16
  4018be:	2907      	cmp	r1, #7
  4018c0:	920f      	str	r2, [sp, #60]	; 0x3c
  4018c2:	f8ce 5000 	str.w	r5, [lr]
  4018c6:	f8ce 3004 	str.w	r3, [lr, #4]
  4018ca:	910e      	str	r1, [sp, #56]	; 0x38
  4018cc:	dded      	ble.n	4018aa <_vfiprintf_r+0x356>
  4018ce:	2a00      	cmp	r2, #0
  4018d0:	f040 8315 	bne.w	401efe <_vfiprintf_r+0x9aa>
  4018d4:	3c10      	subs	r4, #16
  4018d6:	2c10      	cmp	r4, #16
  4018d8:	f04f 0c01 	mov.w	ip, #1
  4018dc:	4610      	mov	r0, r2
  4018de:	46de      	mov	lr, fp
  4018e0:	dceb      	bgt.n	4018ba <_vfiprintf_r+0x366>
  4018e2:	46a9      	mov	r9, r5
  4018e4:	4645      	mov	r5, r8
  4018e6:	46d0      	mov	r8, sl
  4018e8:	46f2      	mov	sl, lr
  4018ea:	4422      	add	r2, r4
  4018ec:	f1bc 0f07 	cmp.w	ip, #7
  4018f0:	920f      	str	r2, [sp, #60]	; 0x3c
  4018f2:	f8ca 9000 	str.w	r9, [sl]
  4018f6:	f8ca 4004 	str.w	r4, [sl, #4]
  4018fa:	f8cd c038 	str.w	ip, [sp, #56]	; 0x38
  4018fe:	f300 83d2 	bgt.w	4020a6 <_vfiprintf_r+0xb52>
  401902:	9b01      	ldr	r3, [sp, #4]
  401904:	9903      	ldr	r1, [sp, #12]
  401906:	1a5c      	subs	r4, r3, r1
  401908:	2c00      	cmp	r4, #0
  40190a:	f10a 0a08 	add.w	sl, sl, #8
  40190e:	f10c 0e01 	add.w	lr, ip, #1
  401912:	4660      	mov	r0, ip
  401914:	f300 826d 	bgt.w	401df2 <_vfiprintf_r+0x89e>
  401918:	9903      	ldr	r1, [sp, #12]
  40191a:	f8ca 7000 	str.w	r7, [sl]
  40191e:	440a      	add	r2, r1
  401920:	f1be 0f07 	cmp.w	lr, #7
  401924:	920f      	str	r2, [sp, #60]	; 0x3c
  401926:	f8ca 1004 	str.w	r1, [sl, #4]
  40192a:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  40192e:	f340 82ce 	ble.w	401ece <_vfiprintf_r+0x97a>
  401932:	2a00      	cmp	r2, #0
  401934:	f040 833a 	bne.w	401fac <_vfiprintf_r+0xa58>
  401938:	0770      	lsls	r0, r6, #29
  40193a:	920e      	str	r2, [sp, #56]	; 0x38
  40193c:	d538      	bpl.n	4019b0 <_vfiprintf_r+0x45c>
  40193e:	9b06      	ldr	r3, [sp, #24]
  401940:	1b5c      	subs	r4, r3, r5
  401942:	2c00      	cmp	r4, #0
  401944:	dd34      	ble.n	4019b0 <_vfiprintf_r+0x45c>
  401946:	46da      	mov	sl, fp
  401948:	2c10      	cmp	r4, #16
  40194a:	f340 84ab 	ble.w	4022a4 <_vfiprintf_r+0xd50>
  40194e:	f8df 9104 	ldr.w	r9, [pc, #260]	; 401a54 <_vfiprintf_r+0x500>
  401952:	990e      	ldr	r1, [sp, #56]	; 0x38
  401954:	464f      	mov	r7, r9
  401956:	2610      	movs	r6, #16
  401958:	f8dd 9014 	ldr.w	r9, [sp, #20]
  40195c:	e006      	b.n	40196c <_vfiprintf_r+0x418>
  40195e:	1c88      	adds	r0, r1, #2
  401960:	f10a 0a08 	add.w	sl, sl, #8
  401964:	4619      	mov	r1, r3
  401966:	3c10      	subs	r4, #16
  401968:	2c10      	cmp	r4, #16
  40196a:	dd13      	ble.n	401994 <_vfiprintf_r+0x440>
  40196c:	1c4b      	adds	r3, r1, #1
  40196e:	3210      	adds	r2, #16
  401970:	2b07      	cmp	r3, #7
  401972:	920f      	str	r2, [sp, #60]	; 0x3c
  401974:	f8ca 7000 	str.w	r7, [sl]
  401978:	f8ca 6004 	str.w	r6, [sl, #4]
  40197c:	930e      	str	r3, [sp, #56]	; 0x38
  40197e:	ddee      	ble.n	40195e <_vfiprintf_r+0x40a>
  401980:	2a00      	cmp	r2, #0
  401982:	f040 828e 	bne.w	401ea2 <_vfiprintf_r+0x94e>
  401986:	3c10      	subs	r4, #16
  401988:	2c10      	cmp	r4, #16
  40198a:	f04f 0001 	mov.w	r0, #1
  40198e:	4611      	mov	r1, r2
  401990:	46da      	mov	sl, fp
  401992:	dceb      	bgt.n	40196c <_vfiprintf_r+0x418>
  401994:	46b9      	mov	r9, r7
  401996:	4422      	add	r2, r4
  401998:	2807      	cmp	r0, #7
  40199a:	920f      	str	r2, [sp, #60]	; 0x3c
  40199c:	f8ca 9000 	str.w	r9, [sl]
  4019a0:	f8ca 4004 	str.w	r4, [sl, #4]
  4019a4:	900e      	str	r0, [sp, #56]	; 0x38
  4019a6:	f340 829b 	ble.w	401ee0 <_vfiprintf_r+0x98c>
  4019aa:	2a00      	cmp	r2, #0
  4019ac:	f040 8425 	bne.w	4021fa <_vfiprintf_r+0xca6>
  4019b0:	9b02      	ldr	r3, [sp, #8]
  4019b2:	9a06      	ldr	r2, [sp, #24]
  4019b4:	42aa      	cmp	r2, r5
  4019b6:	bfac      	ite	ge
  4019b8:	189b      	addge	r3, r3, r2
  4019ba:	195b      	addlt	r3, r3, r5
  4019bc:	9302      	str	r3, [sp, #8]
  4019be:	e299      	b.n	401ef4 <_vfiprintf_r+0x9a0>
  4019c0:	f046 0680 	orr.w	r6, r6, #128	; 0x80
  4019c4:	f898 3000 	ldrb.w	r3, [r8]
  4019c8:	e62b      	b.n	401622 <_vfiprintf_r+0xce>
  4019ca:	9406      	str	r4, [sp, #24]
  4019cc:	2900      	cmp	r1, #0
  4019ce:	f040 84af 	bne.w	402330 <_vfiprintf_r+0xddc>
  4019d2:	f046 0610 	orr.w	r6, r6, #16
  4019d6:	06b3      	lsls	r3, r6, #26
  4019d8:	f140 8312 	bpl.w	402000 <_vfiprintf_r+0xaac>
  4019dc:	9904      	ldr	r1, [sp, #16]
  4019de:	3107      	adds	r1, #7
  4019e0:	f021 0107 	bic.w	r1, r1, #7
  4019e4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4019e8:	3108      	adds	r1, #8
  4019ea:	9104      	str	r1, [sp, #16]
  4019ec:	4614      	mov	r4, r2
  4019ee:	461d      	mov	r5, r3
  4019f0:	2a00      	cmp	r2, #0
  4019f2:	f173 0300 	sbcs.w	r3, r3, #0
  4019f6:	f2c0 8386 	blt.w	402106 <_vfiprintf_r+0xbb2>
  4019fa:	9b01      	ldr	r3, [sp, #4]
  4019fc:	f89d 902f 	ldrb.w	r9, [sp, #47]	; 0x2f
  401a00:	2b00      	cmp	r3, #0
  401a02:	f2c0 831a 	blt.w	40203a <_vfiprintf_r+0xae6>
  401a06:	ea54 0305 	orrs.w	r3, r4, r5
  401a0a:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  401a0e:	f000 80ed 	beq.w	401bec <_vfiprintf_r+0x698>
  401a12:	2d00      	cmp	r5, #0
  401a14:	bf08      	it	eq
  401a16:	2c0a      	cmpeq	r4, #10
  401a18:	f0c0 80ed 	bcc.w	401bf6 <_vfiprintf_r+0x6a2>
  401a1c:	465f      	mov	r7, fp
  401a1e:	4620      	mov	r0, r4
  401a20:	4629      	mov	r1, r5
  401a22:	220a      	movs	r2, #10
  401a24:	2300      	movs	r3, #0
  401a26:	f003 fd4b 	bl	4054c0 <__aeabi_uldivmod>
  401a2a:	3230      	adds	r2, #48	; 0x30
  401a2c:	f807 2d01 	strb.w	r2, [r7, #-1]!
  401a30:	4620      	mov	r0, r4
  401a32:	4629      	mov	r1, r5
  401a34:	2300      	movs	r3, #0
  401a36:	220a      	movs	r2, #10
  401a38:	f003 fd42 	bl	4054c0 <__aeabi_uldivmod>
  401a3c:	4604      	mov	r4, r0
  401a3e:	460d      	mov	r5, r1
  401a40:	ea54 0305 	orrs.w	r3, r4, r5
  401a44:	d1eb      	bne.n	401a1e <_vfiprintf_r+0x4ca>
  401a46:	ebc7 030b 	rsb	r3, r7, fp
  401a4a:	9303      	str	r3, [sp, #12]
  401a4c:	e6a2      	b.n	401794 <_vfiprintf_r+0x240>
  401a4e:	bf00      	nop
  401a50:	00405bcc 	.word	0x00405bcc
  401a54:	00405be8 	.word	0x00405be8
  401a58:	00405ba8 	.word	0x00405ba8
  401a5c:	9406      	str	r4, [sp, #24]
  401a5e:	2900      	cmp	r1, #0
  401a60:	f040 8462 	bne.w	402328 <_vfiprintf_r+0xdd4>
  401a64:	f046 0610 	orr.w	r6, r6, #16
  401a68:	f016 0320 	ands.w	r3, r6, #32
  401a6c:	f000 82ae 	beq.w	401fcc <_vfiprintf_r+0xa78>
  401a70:	9b04      	ldr	r3, [sp, #16]
  401a72:	3307      	adds	r3, #7
  401a74:	f023 0307 	bic.w	r3, r3, #7
  401a78:	f04f 0200 	mov.w	r2, #0
  401a7c:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
  401a80:	e9d3 4500 	ldrd	r4, r5, [r3]
  401a84:	f103 0208 	add.w	r2, r3, #8
  401a88:	9b01      	ldr	r3, [sp, #4]
  401a8a:	9204      	str	r2, [sp, #16]
  401a8c:	2b00      	cmp	r3, #0
  401a8e:	f2c0 8174 	blt.w	401d7a <_vfiprintf_r+0x826>
  401a92:	ea54 0305 	orrs.w	r3, r4, r5
  401a96:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  401a9a:	f040 816e 	bne.w	401d7a <_vfiprintf_r+0x826>
  401a9e:	9b01      	ldr	r3, [sp, #4]
  401aa0:	2b00      	cmp	r3, #0
  401aa2:	f000 8430 	beq.w	402306 <_vfiprintf_r+0xdb2>
  401aa6:	f04f 0900 	mov.w	r9, #0
  401aaa:	2400      	movs	r4, #0
  401aac:	2500      	movs	r5, #0
  401aae:	465f      	mov	r7, fp
  401ab0:	08e2      	lsrs	r2, r4, #3
  401ab2:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  401ab6:	08e9      	lsrs	r1, r5, #3
  401ab8:	f004 0307 	and.w	r3, r4, #7
  401abc:	460d      	mov	r5, r1
  401abe:	4614      	mov	r4, r2
  401ac0:	3330      	adds	r3, #48	; 0x30
  401ac2:	ea54 0205 	orrs.w	r2, r4, r5
  401ac6:	f807 3d01 	strb.w	r3, [r7, #-1]!
  401aca:	d1f1      	bne.n	401ab0 <_vfiprintf_r+0x55c>
  401acc:	07f4      	lsls	r4, r6, #31
  401ace:	d5ba      	bpl.n	401a46 <_vfiprintf_r+0x4f2>
  401ad0:	2b30      	cmp	r3, #48	; 0x30
  401ad2:	d0b8      	beq.n	401a46 <_vfiprintf_r+0x4f2>
  401ad4:	2230      	movs	r2, #48	; 0x30
  401ad6:	1e7b      	subs	r3, r7, #1
  401ad8:	f807 2c01 	strb.w	r2, [r7, #-1]
  401adc:	ebc3 020b 	rsb	r2, r3, fp
  401ae0:	9203      	str	r2, [sp, #12]
  401ae2:	461f      	mov	r7, r3
  401ae4:	e656      	b.n	401794 <_vfiprintf_r+0x240>
  401ae6:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  401aea:	2400      	movs	r4, #0
  401aec:	f818 3b01 	ldrb.w	r3, [r8], #1
  401af0:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401af4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
  401af8:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  401afc:	2a09      	cmp	r2, #9
  401afe:	d9f5      	bls.n	401aec <_vfiprintf_r+0x598>
  401b00:	e591      	b.n	401626 <_vfiprintf_r+0xd2>
  401b02:	f898 3000 	ldrb.w	r3, [r8]
  401b06:	2101      	movs	r1, #1
  401b08:	202b      	movs	r0, #43	; 0x2b
  401b0a:	e58a      	b.n	401622 <_vfiprintf_r+0xce>
  401b0c:	f898 3000 	ldrb.w	r3, [r8]
  401b10:	2b2a      	cmp	r3, #42	; 0x2a
  401b12:	f108 0501 	add.w	r5, r8, #1
  401b16:	f000 83dd 	beq.w	4022d4 <_vfiprintf_r+0xd80>
  401b1a:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  401b1e:	2a09      	cmp	r2, #9
  401b20:	46a8      	mov	r8, r5
  401b22:	bf98      	it	ls
  401b24:	2500      	movls	r5, #0
  401b26:	f200 83ce 	bhi.w	4022c6 <_vfiprintf_r+0xd72>
  401b2a:	f818 3b01 	ldrb.w	r3, [r8], #1
  401b2e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  401b32:	eb02 0545 	add.w	r5, r2, r5, lsl #1
  401b36:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  401b3a:	2a09      	cmp	r2, #9
  401b3c:	d9f5      	bls.n	401b2a <_vfiprintf_r+0x5d6>
  401b3e:	ea45 72e5 	orr.w	r2, r5, r5, asr #31
  401b42:	9201      	str	r2, [sp, #4]
  401b44:	e56f      	b.n	401626 <_vfiprintf_r+0xd2>
  401b46:	9a04      	ldr	r2, [sp, #16]
  401b48:	6814      	ldr	r4, [r2, #0]
  401b4a:	4613      	mov	r3, r2
  401b4c:	2c00      	cmp	r4, #0
  401b4e:	f103 0304 	add.w	r3, r3, #4
  401b52:	f6ff aded 	blt.w	401730 <_vfiprintf_r+0x1dc>
  401b56:	9304      	str	r3, [sp, #16]
  401b58:	f898 3000 	ldrb.w	r3, [r8]
  401b5c:	e561      	b.n	401622 <_vfiprintf_r+0xce>
  401b5e:	9406      	str	r4, [sp, #24]
  401b60:	2900      	cmp	r1, #0
  401b62:	d081      	beq.n	401a68 <_vfiprintf_r+0x514>
  401b64:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  401b68:	e77e      	b.n	401a68 <_vfiprintf_r+0x514>
  401b6a:	9a04      	ldr	r2, [sp, #16]
  401b6c:	9406      	str	r4, [sp, #24]
  401b6e:	6817      	ldr	r7, [r2, #0]
  401b70:	f04f 0300 	mov.w	r3, #0
  401b74:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  401b78:	1d14      	adds	r4, r2, #4
  401b7a:	9b01      	ldr	r3, [sp, #4]
  401b7c:	2f00      	cmp	r7, #0
  401b7e:	f000 8386 	beq.w	40228e <_vfiprintf_r+0xd3a>
  401b82:	2b00      	cmp	r3, #0
  401b84:	f2c0 835f 	blt.w	402246 <_vfiprintf_r+0xcf2>
  401b88:	461a      	mov	r2, r3
  401b8a:	2100      	movs	r1, #0
  401b8c:	4638      	mov	r0, r7
  401b8e:	f002 faff 	bl	404190 <memchr>
  401b92:	2800      	cmp	r0, #0
  401b94:	f000 838f 	beq.w	4022b6 <_vfiprintf_r+0xd62>
  401b98:	1bc3      	subs	r3, r0, r7
  401b9a:	9303      	str	r3, [sp, #12]
  401b9c:	2300      	movs	r3, #0
  401b9e:	9404      	str	r4, [sp, #16]
  401ba0:	f89d 902f 	ldrb.w	r9, [sp, #47]	; 0x2f
  401ba4:	9301      	str	r3, [sp, #4]
  401ba6:	e5f5      	b.n	401794 <_vfiprintf_r+0x240>
  401ba8:	9406      	str	r4, [sp, #24]
  401baa:	2900      	cmp	r1, #0
  401bac:	f040 83b9 	bne.w	402322 <_vfiprintf_r+0xdce>
  401bb0:	f016 0920 	ands.w	r9, r6, #32
  401bb4:	d135      	bne.n	401c22 <_vfiprintf_r+0x6ce>
  401bb6:	f016 0310 	ands.w	r3, r6, #16
  401bba:	d103      	bne.n	401bc4 <_vfiprintf_r+0x670>
  401bbc:	f016 0940 	ands.w	r9, r6, #64	; 0x40
  401bc0:	f040 832a 	bne.w	402218 <_vfiprintf_r+0xcc4>
  401bc4:	9a04      	ldr	r2, [sp, #16]
  401bc6:	4613      	mov	r3, r2
  401bc8:	6814      	ldr	r4, [r2, #0]
  401bca:	9a01      	ldr	r2, [sp, #4]
  401bcc:	f88d 902f 	strb.w	r9, [sp, #47]	; 0x2f
  401bd0:	2a00      	cmp	r2, #0
  401bd2:	f103 0304 	add.w	r3, r3, #4
  401bd6:	f04f 0500 	mov.w	r5, #0
  401bda:	f2c0 8332 	blt.w	402242 <_vfiprintf_r+0xcee>
  401bde:	ea54 0205 	orrs.w	r2, r4, r5
  401be2:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  401be6:	9304      	str	r3, [sp, #16]
  401be8:	f47f af13 	bne.w	401a12 <_vfiprintf_r+0x4be>
  401bec:	9b01      	ldr	r3, [sp, #4]
  401bee:	2b00      	cmp	r3, #0
  401bf0:	f43f adcc 	beq.w	40178c <_vfiprintf_r+0x238>
  401bf4:	2400      	movs	r4, #0
  401bf6:	af2a      	add	r7, sp, #168	; 0xa8
  401bf8:	3430      	adds	r4, #48	; 0x30
  401bfa:	f807 4d41 	strb.w	r4, [r7, #-65]!
  401bfe:	ebc7 030b 	rsb	r3, r7, fp
  401c02:	9303      	str	r3, [sp, #12]
  401c04:	e5c6      	b.n	401794 <_vfiprintf_r+0x240>
  401c06:	f046 0620 	orr.w	r6, r6, #32
  401c0a:	f898 3000 	ldrb.w	r3, [r8]
  401c0e:	e508      	b.n	401622 <_vfiprintf_r+0xce>
  401c10:	9406      	str	r4, [sp, #24]
  401c12:	2900      	cmp	r1, #0
  401c14:	f040 836e 	bne.w	4022f4 <_vfiprintf_r+0xda0>
  401c18:	f046 0610 	orr.w	r6, r6, #16
  401c1c:	f016 0920 	ands.w	r9, r6, #32
  401c20:	d0c9      	beq.n	401bb6 <_vfiprintf_r+0x662>
  401c22:	9b04      	ldr	r3, [sp, #16]
  401c24:	3307      	adds	r3, #7
  401c26:	f023 0307 	bic.w	r3, r3, #7
  401c2a:	f04f 0200 	mov.w	r2, #0
  401c2e:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
  401c32:	e9d3 4500 	ldrd	r4, r5, [r3]
  401c36:	f103 0208 	add.w	r2, r3, #8
  401c3a:	9b01      	ldr	r3, [sp, #4]
  401c3c:	9204      	str	r2, [sp, #16]
  401c3e:	2b00      	cmp	r3, #0
  401c40:	f2c0 81f9 	blt.w	402036 <_vfiprintf_r+0xae2>
  401c44:	ea54 0305 	orrs.w	r3, r4, r5
  401c48:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  401c4c:	f04f 0900 	mov.w	r9, #0
  401c50:	f47f aedf 	bne.w	401a12 <_vfiprintf_r+0x4be>
  401c54:	e7ca      	b.n	401bec <_vfiprintf_r+0x698>
  401c56:	9406      	str	r4, [sp, #24]
  401c58:	2900      	cmp	r1, #0
  401c5a:	f040 8351 	bne.w	402300 <_vfiprintf_r+0xdac>
  401c5e:	06b2      	lsls	r2, r6, #26
  401c60:	48ae      	ldr	r0, [pc, #696]	; (401f1c <_vfiprintf_r+0x9c8>)
  401c62:	d541      	bpl.n	401ce8 <_vfiprintf_r+0x794>
  401c64:	9a04      	ldr	r2, [sp, #16]
  401c66:	3207      	adds	r2, #7
  401c68:	f022 0207 	bic.w	r2, r2, #7
  401c6c:	e9d2 4500 	ldrd	r4, r5, [r2]
  401c70:	f102 0108 	add.w	r1, r2, #8
  401c74:	9104      	str	r1, [sp, #16]
  401c76:	f016 0901 	ands.w	r9, r6, #1
  401c7a:	f000 8177 	beq.w	401f6c <_vfiprintf_r+0xa18>
  401c7e:	ea54 0205 	orrs.w	r2, r4, r5
  401c82:	f040 8226 	bne.w	4020d2 <_vfiprintf_r+0xb7e>
  401c86:	f04f 0300 	mov.w	r3, #0
  401c8a:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  401c8e:	9b01      	ldr	r3, [sp, #4]
  401c90:	2b00      	cmp	r3, #0
  401c92:	f2c0 8196 	blt.w	401fc2 <_vfiprintf_r+0xa6e>
  401c96:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  401c9a:	e572      	b.n	401782 <_vfiprintf_r+0x22e>
  401c9c:	9a04      	ldr	r2, [sp, #16]
  401c9e:	9406      	str	r4, [sp, #24]
  401ca0:	6813      	ldr	r3, [r2, #0]
  401ca2:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
  401ca6:	4613      	mov	r3, r2
  401ca8:	f04f 0100 	mov.w	r1, #0
  401cac:	2501      	movs	r5, #1
  401cae:	3304      	adds	r3, #4
  401cb0:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  401cb4:	9304      	str	r3, [sp, #16]
  401cb6:	9503      	str	r5, [sp, #12]
  401cb8:	af10      	add	r7, sp, #64	; 0x40
  401cba:	2300      	movs	r3, #0
  401cbc:	9301      	str	r3, [sp, #4]
  401cbe:	e573      	b.n	4017a8 <_vfiprintf_r+0x254>
  401cc0:	f898 3000 	ldrb.w	r3, [r8]
  401cc4:	2800      	cmp	r0, #0
  401cc6:	f47f acac 	bne.w	401622 <_vfiprintf_r+0xce>
  401cca:	2101      	movs	r1, #1
  401ccc:	2020      	movs	r0, #32
  401cce:	e4a8      	b.n	401622 <_vfiprintf_r+0xce>
  401cd0:	f046 0601 	orr.w	r6, r6, #1
  401cd4:	f898 3000 	ldrb.w	r3, [r8]
  401cd8:	e4a3      	b.n	401622 <_vfiprintf_r+0xce>
  401cda:	9406      	str	r4, [sp, #24]
  401cdc:	2900      	cmp	r1, #0
  401cde:	f040 830c 	bne.w	4022fa <_vfiprintf_r+0xda6>
  401ce2:	06b2      	lsls	r2, r6, #26
  401ce4:	488e      	ldr	r0, [pc, #568]	; (401f20 <_vfiprintf_r+0x9cc>)
  401ce6:	d4bd      	bmi.n	401c64 <_vfiprintf_r+0x710>
  401ce8:	9904      	ldr	r1, [sp, #16]
  401cea:	06f7      	lsls	r7, r6, #27
  401cec:	460a      	mov	r2, r1
  401cee:	f100 819d 	bmi.w	40202c <_vfiprintf_r+0xad8>
  401cf2:	0675      	lsls	r5, r6, #25
  401cf4:	f140 819a 	bpl.w	40202c <_vfiprintf_r+0xad8>
  401cf8:	3204      	adds	r2, #4
  401cfa:	880c      	ldrh	r4, [r1, #0]
  401cfc:	9204      	str	r2, [sp, #16]
  401cfe:	2500      	movs	r5, #0
  401d00:	e7b9      	b.n	401c76 <_vfiprintf_r+0x722>
  401d02:	f046 0640 	orr.w	r6, r6, #64	; 0x40
  401d06:	f898 3000 	ldrb.w	r3, [r8]
  401d0a:	e48a      	b.n	401622 <_vfiprintf_r+0xce>
  401d0c:	f898 3000 	ldrb.w	r3, [r8]
  401d10:	2b6c      	cmp	r3, #108	; 0x6c
  401d12:	bf03      	ittte	eq
  401d14:	f898 3001 	ldrbeq.w	r3, [r8, #1]
  401d18:	f046 0620 	orreq.w	r6, r6, #32
  401d1c:	f108 0801 	addeq.w	r8, r8, #1
  401d20:	f046 0610 	orrne.w	r6, r6, #16
  401d24:	e47d      	b.n	401622 <_vfiprintf_r+0xce>
  401d26:	2900      	cmp	r1, #0
  401d28:	f040 8309 	bne.w	40233e <_vfiprintf_r+0xdea>
  401d2c:	06b4      	lsls	r4, r6, #26
  401d2e:	f140 821c 	bpl.w	40216a <_vfiprintf_r+0xc16>
  401d32:	9a04      	ldr	r2, [sp, #16]
  401d34:	9902      	ldr	r1, [sp, #8]
  401d36:	6813      	ldr	r3, [r2, #0]
  401d38:	17cd      	asrs	r5, r1, #31
  401d3a:	4608      	mov	r0, r1
  401d3c:	3204      	adds	r2, #4
  401d3e:	4629      	mov	r1, r5
  401d40:	9204      	str	r2, [sp, #16]
  401d42:	e9c3 0100 	strd	r0, r1, [r3]
  401d46:	e436      	b.n	4015b6 <_vfiprintf_r+0x62>
  401d48:	9406      	str	r4, [sp, #24]
  401d4a:	2900      	cmp	r1, #0
  401d4c:	f43f ae43 	beq.w	4019d6 <_vfiprintf_r+0x482>
  401d50:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  401d54:	e63f      	b.n	4019d6 <_vfiprintf_r+0x482>
  401d56:	9406      	str	r4, [sp, #24]
  401d58:	2900      	cmp	r1, #0
  401d5a:	f040 82ed 	bne.w	402338 <_vfiprintf_r+0xde4>
  401d5e:	2b00      	cmp	r3, #0
  401d60:	f000 808f 	beq.w	401e82 <_vfiprintf_r+0x92e>
  401d64:	2501      	movs	r5, #1
  401d66:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
  401d6a:	f04f 0300 	mov.w	r3, #0
  401d6e:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  401d72:	9503      	str	r5, [sp, #12]
  401d74:	af10      	add	r7, sp, #64	; 0x40
  401d76:	e7a0      	b.n	401cba <_vfiprintf_r+0x766>
  401d78:	9304      	str	r3, [sp, #16]
  401d7a:	f04f 0900 	mov.w	r9, #0
  401d7e:	e696      	b.n	401aae <_vfiprintf_r+0x55a>
  401d80:	aa0d      	add	r2, sp, #52	; 0x34
  401d82:	9900      	ldr	r1, [sp, #0]
  401d84:	9309      	str	r3, [sp, #36]	; 0x24
  401d86:	4648      	mov	r0, r9
  401d88:	f7ff fba8 	bl	4014dc <__sprint_r.part.0>
  401d8c:	2800      	cmp	r0, #0
  401d8e:	d17f      	bne.n	401e90 <_vfiprintf_r+0x93c>
  401d90:	980e      	ldr	r0, [sp, #56]	; 0x38
  401d92:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401d94:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401d96:	f100 0e01 	add.w	lr, r0, #1
  401d9a:	46dc      	mov	ip, fp
  401d9c:	e529      	b.n	4017f2 <_vfiprintf_r+0x29e>
  401d9e:	980e      	ldr	r0, [sp, #56]	; 0x38
  401da0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401da2:	f100 0e01 	add.w	lr, r0, #1
  401da6:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  401daa:	2b00      	cmp	r3, #0
  401dac:	f43f ad50 	beq.w	401850 <_vfiprintf_r+0x2fc>
  401db0:	3201      	adds	r2, #1
  401db2:	f10d 012f 	add.w	r1, sp, #47	; 0x2f
  401db6:	2301      	movs	r3, #1
  401db8:	f1be 0f07 	cmp.w	lr, #7
  401dbc:	920f      	str	r2, [sp, #60]	; 0x3c
  401dbe:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  401dc2:	e88a 000a 	stmia.w	sl, {r1, r3}
  401dc6:	f340 80bf 	ble.w	401f48 <_vfiprintf_r+0x9f4>
  401dca:	2a00      	cmp	r2, #0
  401dcc:	f040 814e 	bne.w	40206c <_vfiprintf_r+0xb18>
  401dd0:	9907      	ldr	r1, [sp, #28]
  401dd2:	2900      	cmp	r1, #0
  401dd4:	f040 80be 	bne.w	401f54 <_vfiprintf_r+0xa00>
  401dd8:	469e      	mov	lr, r3
  401dda:	4610      	mov	r0, r2
  401ddc:	46da      	mov	sl, fp
  401dde:	9b08      	ldr	r3, [sp, #32]
  401de0:	2b80      	cmp	r3, #128	; 0x80
  401de2:	f43f ad50 	beq.w	401886 <_vfiprintf_r+0x332>
  401de6:	9b01      	ldr	r3, [sp, #4]
  401de8:	9903      	ldr	r1, [sp, #12]
  401dea:	1a5c      	subs	r4, r3, r1
  401dec:	2c00      	cmp	r4, #0
  401dee:	f77f ad93 	ble.w	401918 <_vfiprintf_r+0x3c4>
  401df2:	2c10      	cmp	r4, #16
  401df4:	f8df 912c 	ldr.w	r9, [pc, #300]	; 401f24 <_vfiprintf_r+0x9d0>
  401df8:	dd25      	ble.n	401e46 <_vfiprintf_r+0x8f2>
  401dfa:	46d4      	mov	ip, sl
  401dfc:	2310      	movs	r3, #16
  401dfe:	46c2      	mov	sl, r8
  401e00:	46a8      	mov	r8, r5
  401e02:	464d      	mov	r5, r9
  401e04:	f8dd 9014 	ldr.w	r9, [sp, #20]
  401e08:	e007      	b.n	401e1a <_vfiprintf_r+0x8c6>
  401e0a:	f100 0e02 	add.w	lr, r0, #2
  401e0e:	f10c 0c08 	add.w	ip, ip, #8
  401e12:	4608      	mov	r0, r1
  401e14:	3c10      	subs	r4, #16
  401e16:	2c10      	cmp	r4, #16
  401e18:	dd11      	ble.n	401e3e <_vfiprintf_r+0x8ea>
  401e1a:	1c41      	adds	r1, r0, #1
  401e1c:	3210      	adds	r2, #16
  401e1e:	2907      	cmp	r1, #7
  401e20:	920f      	str	r2, [sp, #60]	; 0x3c
  401e22:	f8cc 5000 	str.w	r5, [ip]
  401e26:	f8cc 3004 	str.w	r3, [ip, #4]
  401e2a:	910e      	str	r1, [sp, #56]	; 0x38
  401e2c:	dded      	ble.n	401e0a <_vfiprintf_r+0x8b6>
  401e2e:	b9d2      	cbnz	r2, 401e66 <_vfiprintf_r+0x912>
  401e30:	3c10      	subs	r4, #16
  401e32:	2c10      	cmp	r4, #16
  401e34:	f04f 0e01 	mov.w	lr, #1
  401e38:	4610      	mov	r0, r2
  401e3a:	46dc      	mov	ip, fp
  401e3c:	dced      	bgt.n	401e1a <_vfiprintf_r+0x8c6>
  401e3e:	46a9      	mov	r9, r5
  401e40:	4645      	mov	r5, r8
  401e42:	46d0      	mov	r8, sl
  401e44:	46e2      	mov	sl, ip
  401e46:	4422      	add	r2, r4
  401e48:	f1be 0f07 	cmp.w	lr, #7
  401e4c:	920f      	str	r2, [sp, #60]	; 0x3c
  401e4e:	f8ca 9000 	str.w	r9, [sl]
  401e52:	f8ca 4004 	str.w	r4, [sl, #4]
  401e56:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  401e5a:	dc2e      	bgt.n	401eba <_vfiprintf_r+0x966>
  401e5c:	f10a 0a08 	add.w	sl, sl, #8
  401e60:	f10e 0e01 	add.w	lr, lr, #1
  401e64:	e558      	b.n	401918 <_vfiprintf_r+0x3c4>
  401e66:	aa0d      	add	r2, sp, #52	; 0x34
  401e68:	9900      	ldr	r1, [sp, #0]
  401e6a:	9301      	str	r3, [sp, #4]
  401e6c:	4648      	mov	r0, r9
  401e6e:	f7ff fb35 	bl	4014dc <__sprint_r.part.0>
  401e72:	b968      	cbnz	r0, 401e90 <_vfiprintf_r+0x93c>
  401e74:	980e      	ldr	r0, [sp, #56]	; 0x38
  401e76:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401e78:	9b01      	ldr	r3, [sp, #4]
  401e7a:	f100 0e01 	add.w	lr, r0, #1
  401e7e:	46dc      	mov	ip, fp
  401e80:	e7c8      	b.n	401e14 <_vfiprintf_r+0x8c0>
  401e82:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401e84:	b123      	cbz	r3, 401e90 <_vfiprintf_r+0x93c>
  401e86:	9805      	ldr	r0, [sp, #20]
  401e88:	9900      	ldr	r1, [sp, #0]
  401e8a:	aa0d      	add	r2, sp, #52	; 0x34
  401e8c:	f7ff fb26 	bl	4014dc <__sprint_r.part.0>
  401e90:	9b00      	ldr	r3, [sp, #0]
  401e92:	899b      	ldrh	r3, [r3, #12]
  401e94:	065a      	lsls	r2, r3, #25
  401e96:	f100 818b 	bmi.w	4021b0 <_vfiprintf_r+0xc5c>
  401e9a:	9802      	ldr	r0, [sp, #8]
  401e9c:	b02b      	add	sp, #172	; 0xac
  401e9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401ea2:	aa0d      	add	r2, sp, #52	; 0x34
  401ea4:	9900      	ldr	r1, [sp, #0]
  401ea6:	4648      	mov	r0, r9
  401ea8:	f7ff fb18 	bl	4014dc <__sprint_r.part.0>
  401eac:	2800      	cmp	r0, #0
  401eae:	d1ef      	bne.n	401e90 <_vfiprintf_r+0x93c>
  401eb0:	990e      	ldr	r1, [sp, #56]	; 0x38
  401eb2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401eb4:	1c48      	adds	r0, r1, #1
  401eb6:	46da      	mov	sl, fp
  401eb8:	e555      	b.n	401966 <_vfiprintf_r+0x412>
  401eba:	2a00      	cmp	r2, #0
  401ebc:	f040 80fb 	bne.w	4020b6 <_vfiprintf_r+0xb62>
  401ec0:	9a03      	ldr	r2, [sp, #12]
  401ec2:	921b      	str	r2, [sp, #108]	; 0x6c
  401ec4:	2301      	movs	r3, #1
  401ec6:	920f      	str	r2, [sp, #60]	; 0x3c
  401ec8:	971a      	str	r7, [sp, #104]	; 0x68
  401eca:	930e      	str	r3, [sp, #56]	; 0x38
  401ecc:	46da      	mov	sl, fp
  401ece:	f10a 0a08 	add.w	sl, sl, #8
  401ed2:	0771      	lsls	r1, r6, #29
  401ed4:	d504      	bpl.n	401ee0 <_vfiprintf_r+0x98c>
  401ed6:	9b06      	ldr	r3, [sp, #24]
  401ed8:	1b5c      	subs	r4, r3, r5
  401eda:	2c00      	cmp	r4, #0
  401edc:	f73f ad34 	bgt.w	401948 <_vfiprintf_r+0x3f4>
  401ee0:	9b02      	ldr	r3, [sp, #8]
  401ee2:	9906      	ldr	r1, [sp, #24]
  401ee4:	42a9      	cmp	r1, r5
  401ee6:	bfac      	ite	ge
  401ee8:	185b      	addge	r3, r3, r1
  401eea:	195b      	addlt	r3, r3, r5
  401eec:	9302      	str	r3, [sp, #8]
  401eee:	2a00      	cmp	r2, #0
  401ef0:	f040 80b3 	bne.w	40205a <_vfiprintf_r+0xb06>
  401ef4:	2300      	movs	r3, #0
  401ef6:	930e      	str	r3, [sp, #56]	; 0x38
  401ef8:	46da      	mov	sl, fp
  401efa:	f7ff bb5c 	b.w	4015b6 <_vfiprintf_r+0x62>
  401efe:	aa0d      	add	r2, sp, #52	; 0x34
  401f00:	9900      	ldr	r1, [sp, #0]
  401f02:	9307      	str	r3, [sp, #28]
  401f04:	4648      	mov	r0, r9
  401f06:	f7ff fae9 	bl	4014dc <__sprint_r.part.0>
  401f0a:	2800      	cmp	r0, #0
  401f0c:	d1c0      	bne.n	401e90 <_vfiprintf_r+0x93c>
  401f0e:	980e      	ldr	r0, [sp, #56]	; 0x38
  401f10:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401f12:	9b07      	ldr	r3, [sp, #28]
  401f14:	f100 0c01 	add.w	ip, r0, #1
  401f18:	46de      	mov	lr, fp
  401f1a:	e4cb      	b.n	4018b4 <_vfiprintf_r+0x360>
  401f1c:	00405bb8 	.word	0x00405bb8
  401f20:	00405bcc 	.word	0x00405bcc
  401f24:	00405ba8 	.word	0x00405ba8
  401f28:	2a00      	cmp	r2, #0
  401f2a:	f040 8133 	bne.w	402194 <_vfiprintf_r+0xc40>
  401f2e:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  401f32:	2b00      	cmp	r3, #0
  401f34:	f000 80f5 	beq.w	402122 <_vfiprintf_r+0xbce>
  401f38:	2301      	movs	r3, #1
  401f3a:	f10d 012f 	add.w	r1, sp, #47	; 0x2f
  401f3e:	461a      	mov	r2, r3
  401f40:	931b      	str	r3, [sp, #108]	; 0x6c
  401f42:	469e      	mov	lr, r3
  401f44:	911a      	str	r1, [sp, #104]	; 0x68
  401f46:	46da      	mov	sl, fp
  401f48:	4670      	mov	r0, lr
  401f4a:	f10a 0a08 	add.w	sl, sl, #8
  401f4e:	f10e 0e01 	add.w	lr, lr, #1
  401f52:	e47d      	b.n	401850 <_vfiprintf_r+0x2fc>
  401f54:	a90c      	add	r1, sp, #48	; 0x30
  401f56:	2202      	movs	r2, #2
  401f58:	469e      	mov	lr, r3
  401f5a:	911a      	str	r1, [sp, #104]	; 0x68
  401f5c:	921b      	str	r2, [sp, #108]	; 0x6c
  401f5e:	46da      	mov	sl, fp
  401f60:	4670      	mov	r0, lr
  401f62:	f10a 0a08 	add.w	sl, sl, #8
  401f66:	f10e 0e01 	add.w	lr, lr, #1
  401f6a:	e738      	b.n	401dde <_vfiprintf_r+0x88a>
  401f6c:	9b01      	ldr	r3, [sp, #4]
  401f6e:	f88d 902f 	strb.w	r9, [sp, #47]	; 0x2f
  401f72:	2b00      	cmp	r3, #0
  401f74:	f2c0 812a 	blt.w	4021cc <_vfiprintf_r+0xc78>
  401f78:	ea54 0305 	orrs.w	r3, r4, r5
  401f7c:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  401f80:	f43f abff 	beq.w	401782 <_vfiprintf_r+0x22e>
  401f84:	465f      	mov	r7, fp
  401f86:	0923      	lsrs	r3, r4, #4
  401f88:	f004 010f 	and.w	r1, r4, #15
  401f8c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  401f90:	092a      	lsrs	r2, r5, #4
  401f92:	461c      	mov	r4, r3
  401f94:	4615      	mov	r5, r2
  401f96:	5c43      	ldrb	r3, [r0, r1]
  401f98:	f807 3d01 	strb.w	r3, [r7, #-1]!
  401f9c:	ea54 0305 	orrs.w	r3, r4, r5
  401fa0:	d1f1      	bne.n	401f86 <_vfiprintf_r+0xa32>
  401fa2:	ebc7 030b 	rsb	r3, r7, fp
  401fa6:	9303      	str	r3, [sp, #12]
  401fa8:	f7ff bbf4 	b.w	401794 <_vfiprintf_r+0x240>
  401fac:	aa0d      	add	r2, sp, #52	; 0x34
  401fae:	9900      	ldr	r1, [sp, #0]
  401fb0:	9805      	ldr	r0, [sp, #20]
  401fb2:	f7ff fa93 	bl	4014dc <__sprint_r.part.0>
  401fb6:	2800      	cmp	r0, #0
  401fb8:	f47f af6a 	bne.w	401e90 <_vfiprintf_r+0x93c>
  401fbc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401fbe:	46da      	mov	sl, fp
  401fc0:	e787      	b.n	401ed2 <_vfiprintf_r+0x97e>
  401fc2:	f04f 0900 	mov.w	r9, #0
  401fc6:	2400      	movs	r4, #0
  401fc8:	2500      	movs	r5, #0
  401fca:	e7db      	b.n	401f84 <_vfiprintf_r+0xa30>
  401fcc:	f016 0210 	ands.w	r2, r6, #16
  401fd0:	f000 80b2 	beq.w	402138 <_vfiprintf_r+0xbe4>
  401fd4:	9904      	ldr	r1, [sp, #16]
  401fd6:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  401fda:	460a      	mov	r2, r1
  401fdc:	680c      	ldr	r4, [r1, #0]
  401fde:	9901      	ldr	r1, [sp, #4]
  401fe0:	2900      	cmp	r1, #0
  401fe2:	f102 0204 	add.w	r2, r2, #4
  401fe6:	f04f 0500 	mov.w	r5, #0
  401fea:	f2c0 8159 	blt.w	4022a0 <_vfiprintf_r+0xd4c>
  401fee:	ea54 0105 	orrs.w	r1, r4, r5
  401ff2:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  401ff6:	9204      	str	r2, [sp, #16]
  401ff8:	f43f ad51 	beq.w	401a9e <_vfiprintf_r+0x54a>
  401ffc:	4699      	mov	r9, r3
  401ffe:	e556      	b.n	401aae <_vfiprintf_r+0x55a>
  402000:	06f7      	lsls	r7, r6, #27
  402002:	d40a      	bmi.n	40201a <_vfiprintf_r+0xac6>
  402004:	0675      	lsls	r5, r6, #25
  402006:	d508      	bpl.n	40201a <_vfiprintf_r+0xac6>
  402008:	9904      	ldr	r1, [sp, #16]
  40200a:	f9b1 4000 	ldrsh.w	r4, [r1]
  40200e:	3104      	adds	r1, #4
  402010:	17e5      	asrs	r5, r4, #31
  402012:	4622      	mov	r2, r4
  402014:	462b      	mov	r3, r5
  402016:	9104      	str	r1, [sp, #16]
  402018:	e4ea      	b.n	4019f0 <_vfiprintf_r+0x49c>
  40201a:	9a04      	ldr	r2, [sp, #16]
  40201c:	6814      	ldr	r4, [r2, #0]
  40201e:	4613      	mov	r3, r2
  402020:	3304      	adds	r3, #4
  402022:	17e5      	asrs	r5, r4, #31
  402024:	9304      	str	r3, [sp, #16]
  402026:	4622      	mov	r2, r4
  402028:	462b      	mov	r3, r5
  40202a:	e4e1      	b.n	4019f0 <_vfiprintf_r+0x49c>
  40202c:	6814      	ldr	r4, [r2, #0]
  40202e:	3204      	adds	r2, #4
  402030:	9204      	str	r2, [sp, #16]
  402032:	2500      	movs	r5, #0
  402034:	e61f      	b.n	401c76 <_vfiprintf_r+0x722>
  402036:	f04f 0900 	mov.w	r9, #0
  40203a:	ea54 0305 	orrs.w	r3, r4, r5
  40203e:	f47f ace8 	bne.w	401a12 <_vfiprintf_r+0x4be>
  402042:	e5d8      	b.n	401bf6 <_vfiprintf_r+0x6a2>
  402044:	aa0d      	add	r2, sp, #52	; 0x34
  402046:	9900      	ldr	r1, [sp, #0]
  402048:	9805      	ldr	r0, [sp, #20]
  40204a:	f7ff fa47 	bl	4014dc <__sprint_r.part.0>
  40204e:	2800      	cmp	r0, #0
  402050:	f47f af1e 	bne.w	401e90 <_vfiprintf_r+0x93c>
  402054:	46da      	mov	sl, fp
  402056:	f7ff bb48 	b.w	4016ea <_vfiprintf_r+0x196>
  40205a:	aa0d      	add	r2, sp, #52	; 0x34
  40205c:	9900      	ldr	r1, [sp, #0]
  40205e:	9805      	ldr	r0, [sp, #20]
  402060:	f7ff fa3c 	bl	4014dc <__sprint_r.part.0>
  402064:	2800      	cmp	r0, #0
  402066:	f43f af45 	beq.w	401ef4 <_vfiprintf_r+0x9a0>
  40206a:	e711      	b.n	401e90 <_vfiprintf_r+0x93c>
  40206c:	aa0d      	add	r2, sp, #52	; 0x34
  40206e:	9900      	ldr	r1, [sp, #0]
  402070:	9805      	ldr	r0, [sp, #20]
  402072:	f7ff fa33 	bl	4014dc <__sprint_r.part.0>
  402076:	2800      	cmp	r0, #0
  402078:	f47f af0a 	bne.w	401e90 <_vfiprintf_r+0x93c>
  40207c:	980e      	ldr	r0, [sp, #56]	; 0x38
  40207e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402080:	f100 0e01 	add.w	lr, r0, #1
  402084:	46da      	mov	sl, fp
  402086:	f7ff bbe3 	b.w	401850 <_vfiprintf_r+0x2fc>
  40208a:	aa0d      	add	r2, sp, #52	; 0x34
  40208c:	9900      	ldr	r1, [sp, #0]
  40208e:	9805      	ldr	r0, [sp, #20]
  402090:	f7ff fa24 	bl	4014dc <__sprint_r.part.0>
  402094:	2800      	cmp	r0, #0
  402096:	f47f aefb 	bne.w	401e90 <_vfiprintf_r+0x93c>
  40209a:	980e      	ldr	r0, [sp, #56]	; 0x38
  40209c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40209e:	f100 0e01 	add.w	lr, r0, #1
  4020a2:	46da      	mov	sl, fp
  4020a4:	e69b      	b.n	401dde <_vfiprintf_r+0x88a>
  4020a6:	2a00      	cmp	r2, #0
  4020a8:	f040 80d8 	bne.w	40225c <_vfiprintf_r+0xd08>
  4020ac:	f04f 0e01 	mov.w	lr, #1
  4020b0:	4610      	mov	r0, r2
  4020b2:	46da      	mov	sl, fp
  4020b4:	e697      	b.n	401de6 <_vfiprintf_r+0x892>
  4020b6:	aa0d      	add	r2, sp, #52	; 0x34
  4020b8:	9900      	ldr	r1, [sp, #0]
  4020ba:	9805      	ldr	r0, [sp, #20]
  4020bc:	f7ff fa0e 	bl	4014dc <__sprint_r.part.0>
  4020c0:	2800      	cmp	r0, #0
  4020c2:	f47f aee5 	bne.w	401e90 <_vfiprintf_r+0x93c>
  4020c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4020c8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4020ca:	f103 0e01 	add.w	lr, r3, #1
  4020ce:	46da      	mov	sl, fp
  4020d0:	e422      	b.n	401918 <_vfiprintf_r+0x3c4>
  4020d2:	2230      	movs	r2, #48	; 0x30
  4020d4:	f88d 2030 	strb.w	r2, [sp, #48]	; 0x30
  4020d8:	9a01      	ldr	r2, [sp, #4]
  4020da:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
  4020de:	2a00      	cmp	r2, #0
  4020e0:	f04f 0300 	mov.w	r3, #0
  4020e4:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  4020e8:	f046 0302 	orr.w	r3, r6, #2
  4020ec:	f2c0 80cb 	blt.w	402286 <_vfiprintf_r+0xd32>
  4020f0:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  4020f4:	f046 0602 	orr.w	r6, r6, #2
  4020f8:	f04f 0900 	mov.w	r9, #0
  4020fc:	e742      	b.n	401f84 <_vfiprintf_r+0xa30>
  4020fe:	f04f 0900 	mov.w	r9, #0
  402102:	4890      	ldr	r0, [pc, #576]	; (402344 <_vfiprintf_r+0xdf0>)
  402104:	e73e      	b.n	401f84 <_vfiprintf_r+0xa30>
  402106:	9b01      	ldr	r3, [sp, #4]
  402108:	4264      	negs	r4, r4
  40210a:	f04f 092d 	mov.w	r9, #45	; 0x2d
  40210e:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402112:	2b00      	cmp	r3, #0
  402114:	f88d 902f 	strb.w	r9, [sp, #47]	; 0x2f
  402118:	f6ff ac7b 	blt.w	401a12 <_vfiprintf_r+0x4be>
  40211c:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  402120:	e477      	b.n	401a12 <_vfiprintf_r+0x4be>
  402122:	9b07      	ldr	r3, [sp, #28]
  402124:	2b00      	cmp	r3, #0
  402126:	d072      	beq.n	40220e <_vfiprintf_r+0xcba>
  402128:	ab0c      	add	r3, sp, #48	; 0x30
  40212a:	2202      	movs	r2, #2
  40212c:	931a      	str	r3, [sp, #104]	; 0x68
  40212e:	921b      	str	r2, [sp, #108]	; 0x6c
  402130:	f04f 0e01 	mov.w	lr, #1
  402134:	46da      	mov	sl, fp
  402136:	e713      	b.n	401f60 <_vfiprintf_r+0xa0c>
  402138:	f016 0940 	ands.w	r9, r6, #64	; 0x40
  40213c:	d048      	beq.n	4021d0 <_vfiprintf_r+0xc7c>
  40213e:	9904      	ldr	r1, [sp, #16]
  402140:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
  402144:	460b      	mov	r3, r1
  402146:	880c      	ldrh	r4, [r1, #0]
  402148:	9901      	ldr	r1, [sp, #4]
  40214a:	2900      	cmp	r1, #0
  40214c:	f103 0304 	add.w	r3, r3, #4
  402150:	f04f 0500 	mov.w	r5, #0
  402154:	f6ff ae10 	blt.w	401d78 <_vfiprintf_r+0x824>
  402158:	ea54 0105 	orrs.w	r1, r4, r5
  40215c:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  402160:	9304      	str	r3, [sp, #16]
  402162:	f43f ac9c 	beq.w	401a9e <_vfiprintf_r+0x54a>
  402166:	4691      	mov	r9, r2
  402168:	e4a1      	b.n	401aae <_vfiprintf_r+0x55a>
  40216a:	06f0      	lsls	r0, r6, #27
  40216c:	d40a      	bmi.n	402184 <_vfiprintf_r+0xc30>
  40216e:	0671      	lsls	r1, r6, #25
  402170:	d508      	bpl.n	402184 <_vfiprintf_r+0xc30>
  402172:	9a04      	ldr	r2, [sp, #16]
  402174:	6813      	ldr	r3, [r2, #0]
  402176:	3204      	adds	r2, #4
  402178:	9204      	str	r2, [sp, #16]
  40217a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
  40217e:	801a      	strh	r2, [r3, #0]
  402180:	f7ff ba19 	b.w	4015b6 <_vfiprintf_r+0x62>
  402184:	9a04      	ldr	r2, [sp, #16]
  402186:	6813      	ldr	r3, [r2, #0]
  402188:	3204      	adds	r2, #4
  40218a:	9204      	str	r2, [sp, #16]
  40218c:	9a02      	ldr	r2, [sp, #8]
  40218e:	601a      	str	r2, [r3, #0]
  402190:	f7ff ba11 	b.w	4015b6 <_vfiprintf_r+0x62>
  402194:	aa0d      	add	r2, sp, #52	; 0x34
  402196:	9900      	ldr	r1, [sp, #0]
  402198:	9805      	ldr	r0, [sp, #20]
  40219a:	f7ff f99f 	bl	4014dc <__sprint_r.part.0>
  40219e:	2800      	cmp	r0, #0
  4021a0:	f47f ae76 	bne.w	401e90 <_vfiprintf_r+0x93c>
  4021a4:	980e      	ldr	r0, [sp, #56]	; 0x38
  4021a6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4021a8:	f100 0e01 	add.w	lr, r0, #1
  4021ac:	46da      	mov	sl, fp
  4021ae:	e5fa      	b.n	401da6 <_vfiprintf_r+0x852>
  4021b0:	f04f 30ff 	mov.w	r0, #4294967295
  4021b4:	f7ff bab6 	b.w	401724 <_vfiprintf_r+0x1d0>
  4021b8:	4862      	ldr	r0, [pc, #392]	; (402344 <_vfiprintf_r+0xdf0>)
  4021ba:	4616      	mov	r6, r2
  4021bc:	ea54 0205 	orrs.w	r2, r4, r5
  4021c0:	9304      	str	r3, [sp, #16]
  4021c2:	f04f 0900 	mov.w	r9, #0
  4021c6:	f47f aedd 	bne.w	401f84 <_vfiprintf_r+0xa30>
  4021ca:	e6fc      	b.n	401fc6 <_vfiprintf_r+0xa72>
  4021cc:	9b04      	ldr	r3, [sp, #16]
  4021ce:	e7f5      	b.n	4021bc <_vfiprintf_r+0xc68>
  4021d0:	9a04      	ldr	r2, [sp, #16]
  4021d2:	f88d 902f 	strb.w	r9, [sp, #47]	; 0x2f
  4021d6:	4613      	mov	r3, r2
  4021d8:	6814      	ldr	r4, [r2, #0]
  4021da:	9a01      	ldr	r2, [sp, #4]
  4021dc:	2a00      	cmp	r2, #0
  4021de:	f103 0304 	add.w	r3, r3, #4
  4021e2:	f04f 0500 	mov.w	r5, #0
  4021e6:	f6ff adc7 	blt.w	401d78 <_vfiprintf_r+0x824>
  4021ea:	ea54 0205 	orrs.w	r2, r4, r5
  4021ee:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  4021f2:	9304      	str	r3, [sp, #16]
  4021f4:	f47f ac5b 	bne.w	401aae <_vfiprintf_r+0x55a>
  4021f8:	e451      	b.n	401a9e <_vfiprintf_r+0x54a>
  4021fa:	aa0d      	add	r2, sp, #52	; 0x34
  4021fc:	9900      	ldr	r1, [sp, #0]
  4021fe:	9805      	ldr	r0, [sp, #20]
  402200:	f7ff f96c 	bl	4014dc <__sprint_r.part.0>
  402204:	2800      	cmp	r0, #0
  402206:	f47f ae43 	bne.w	401e90 <_vfiprintf_r+0x93c>
  40220a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40220c:	e668      	b.n	401ee0 <_vfiprintf_r+0x98c>
  40220e:	4610      	mov	r0, r2
  402210:	f04f 0e01 	mov.w	lr, #1
  402214:	46da      	mov	sl, fp
  402216:	e5e6      	b.n	401de6 <_vfiprintf_r+0x892>
  402218:	9904      	ldr	r1, [sp, #16]
  40221a:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  40221e:	460a      	mov	r2, r1
  402220:	880c      	ldrh	r4, [r1, #0]
  402222:	9901      	ldr	r1, [sp, #4]
  402224:	2900      	cmp	r1, #0
  402226:	f102 0204 	add.w	r2, r2, #4
  40222a:	f04f 0500 	mov.w	r5, #0
  40222e:	db4e      	blt.n	4022ce <_vfiprintf_r+0xd7a>
  402230:	ea54 0105 	orrs.w	r1, r4, r5
  402234:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  402238:	9204      	str	r2, [sp, #16]
  40223a:	4699      	mov	r9, r3
  40223c:	f47f abe9 	bne.w	401a12 <_vfiprintf_r+0x4be>
  402240:	e4d4      	b.n	401bec <_vfiprintf_r+0x698>
  402242:	9304      	str	r3, [sp, #16]
  402244:	e6f9      	b.n	40203a <_vfiprintf_r+0xae6>
  402246:	4638      	mov	r0, r7
  402248:	9404      	str	r4, [sp, #16]
  40224a:	f7ff f8d9 	bl	401400 <strlen>
  40224e:	2300      	movs	r3, #0
  402250:	9003      	str	r0, [sp, #12]
  402252:	f89d 902f 	ldrb.w	r9, [sp, #47]	; 0x2f
  402256:	9301      	str	r3, [sp, #4]
  402258:	f7ff ba9c 	b.w	401794 <_vfiprintf_r+0x240>
  40225c:	aa0d      	add	r2, sp, #52	; 0x34
  40225e:	9900      	ldr	r1, [sp, #0]
  402260:	9805      	ldr	r0, [sp, #20]
  402262:	f7ff f93b 	bl	4014dc <__sprint_r.part.0>
  402266:	2800      	cmp	r0, #0
  402268:	f47f ae12 	bne.w	401e90 <_vfiprintf_r+0x93c>
  40226c:	980e      	ldr	r0, [sp, #56]	; 0x38
  40226e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402270:	f100 0e01 	add.w	lr, r0, #1
  402274:	46da      	mov	sl, fp
  402276:	e5b6      	b.n	401de6 <_vfiprintf_r+0x892>
  402278:	980e      	ldr	r0, [sp, #56]	; 0x38
  40227a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40227c:	f8df 90cc 	ldr.w	r9, [pc, #204]	; 40234c <_vfiprintf_r+0xdf8>
  402280:	3001      	adds	r0, #1
  402282:	f7ff bad2 	b.w	40182a <_vfiprintf_r+0x2d6>
  402286:	461e      	mov	r6, r3
  402288:	f04f 0900 	mov.w	r9, #0
  40228c:	e67a      	b.n	401f84 <_vfiprintf_r+0xa30>
  40228e:	2b06      	cmp	r3, #6
  402290:	bf28      	it	cs
  402292:	2306      	movcs	r3, #6
  402294:	9303      	str	r3, [sp, #12]
  402296:	9404      	str	r4, [sp, #16]
  402298:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
  40229c:	4f2a      	ldr	r7, [pc, #168]	; (402348 <_vfiprintf_r+0xdf4>)
  40229e:	e50c      	b.n	401cba <_vfiprintf_r+0x766>
  4022a0:	9204      	str	r2, [sp, #16]
  4022a2:	e56a      	b.n	401d7a <_vfiprintf_r+0x826>
  4022a4:	980e      	ldr	r0, [sp, #56]	; 0x38
  4022a6:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 40234c <_vfiprintf_r+0xdf8>
  4022aa:	3001      	adds	r0, #1
  4022ac:	f7ff bb73 	b.w	401996 <_vfiprintf_r+0x442>
  4022b0:	46f4      	mov	ip, lr
  4022b2:	f7ff bb1a 	b.w	4018ea <_vfiprintf_r+0x396>
  4022b6:	9b01      	ldr	r3, [sp, #4]
  4022b8:	f89d 902f 	ldrb.w	r9, [sp, #47]	; 0x2f
  4022bc:	9303      	str	r3, [sp, #12]
  4022be:	9404      	str	r4, [sp, #16]
  4022c0:	9001      	str	r0, [sp, #4]
  4022c2:	f7ff ba67 	b.w	401794 <_vfiprintf_r+0x240>
  4022c6:	2200      	movs	r2, #0
  4022c8:	9201      	str	r2, [sp, #4]
  4022ca:	f7ff b9ac 	b.w	401626 <_vfiprintf_r+0xd2>
  4022ce:	9204      	str	r2, [sp, #16]
  4022d0:	4699      	mov	r9, r3
  4022d2:	e6b2      	b.n	40203a <_vfiprintf_r+0xae6>
  4022d4:	9a04      	ldr	r2, [sp, #16]
  4022d6:	6813      	ldr	r3, [r2, #0]
  4022d8:	9301      	str	r3, [sp, #4]
  4022da:	3204      	adds	r2, #4
  4022dc:	2b00      	cmp	r3, #0
  4022de:	9204      	str	r2, [sp, #16]
  4022e0:	f898 3001 	ldrb.w	r3, [r8, #1]
  4022e4:	46a8      	mov	r8, r5
  4022e6:	f6bf a99c 	bge.w	401622 <_vfiprintf_r+0xce>
  4022ea:	f04f 32ff 	mov.w	r2, #4294967295
  4022ee:	9201      	str	r2, [sp, #4]
  4022f0:	f7ff b997 	b.w	401622 <_vfiprintf_r+0xce>
  4022f4:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  4022f8:	e48e      	b.n	401c18 <_vfiprintf_r+0x6c4>
  4022fa:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  4022fe:	e4f0      	b.n	401ce2 <_vfiprintf_r+0x78e>
  402300:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  402304:	e4ab      	b.n	401c5e <_vfiprintf_r+0x70a>
  402306:	4699      	mov	r9, r3
  402308:	07f3      	lsls	r3, r6, #31
  40230a:	d505      	bpl.n	402318 <_vfiprintf_r+0xdc4>
  40230c:	af2a      	add	r7, sp, #168	; 0xa8
  40230e:	2330      	movs	r3, #48	; 0x30
  402310:	f807 3d41 	strb.w	r3, [r7, #-65]!
  402314:	f7ff bb97 	b.w	401a46 <_vfiprintf_r+0x4f2>
  402318:	9b01      	ldr	r3, [sp, #4]
  40231a:	9303      	str	r3, [sp, #12]
  40231c:	465f      	mov	r7, fp
  40231e:	f7ff ba39 	b.w	401794 <_vfiprintf_r+0x240>
  402322:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  402326:	e443      	b.n	401bb0 <_vfiprintf_r+0x65c>
  402328:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  40232c:	f7ff bb9a 	b.w	401a64 <_vfiprintf_r+0x510>
  402330:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  402334:	f7ff bb4d 	b.w	4019d2 <_vfiprintf_r+0x47e>
  402338:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  40233c:	e50f      	b.n	401d5e <_vfiprintf_r+0x80a>
  40233e:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  402342:	e4f3      	b.n	401d2c <_vfiprintf_r+0x7d8>
  402344:	00405bcc 	.word	0x00405bcc
  402348:	00405be0 	.word	0x00405be0
  40234c:	00405be8 	.word	0x00405be8

00402350 <__sbprintf>:
  402350:	b5f0      	push	{r4, r5, r6, r7, lr}
  402352:	460c      	mov	r4, r1
  402354:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
  402358:	8989      	ldrh	r1, [r1, #12]
  40235a:	6e66      	ldr	r6, [r4, #100]	; 0x64
  40235c:	89e5      	ldrh	r5, [r4, #14]
  40235e:	9619      	str	r6, [sp, #100]	; 0x64
  402360:	f021 0102 	bic.w	r1, r1, #2
  402364:	6a66      	ldr	r6, [r4, #36]	; 0x24
  402366:	f8ad 500e 	strh.w	r5, [sp, #14]
  40236a:	2500      	movs	r5, #0
  40236c:	69e7      	ldr	r7, [r4, #28]
  40236e:	f8ad 100c 	strh.w	r1, [sp, #12]
  402372:	9609      	str	r6, [sp, #36]	; 0x24
  402374:	9506      	str	r5, [sp, #24]
  402376:	ae1a      	add	r6, sp, #104	; 0x68
  402378:	f44f 6580 	mov.w	r5, #1024	; 0x400
  40237c:	4669      	mov	r1, sp
  40237e:	9600      	str	r6, [sp, #0]
  402380:	9604      	str	r6, [sp, #16]
  402382:	9502      	str	r5, [sp, #8]
  402384:	9505      	str	r5, [sp, #20]
  402386:	9707      	str	r7, [sp, #28]
  402388:	4606      	mov	r6, r0
  40238a:	f7ff f8e3 	bl	401554 <_vfiprintf_r>
  40238e:	1e05      	subs	r5, r0, #0
  402390:	db07      	blt.n	4023a2 <__sbprintf+0x52>
  402392:	4630      	mov	r0, r6
  402394:	4669      	mov	r1, sp
  402396:	f000 fe6f 	bl	403078 <_fflush_r>
  40239a:	2800      	cmp	r0, #0
  40239c:	bf18      	it	ne
  40239e:	f04f 35ff 	movne.w	r5, #4294967295
  4023a2:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  4023a6:	065b      	lsls	r3, r3, #25
  4023a8:	d503      	bpl.n	4023b2 <__sbprintf+0x62>
  4023aa:	89a3      	ldrh	r3, [r4, #12]
  4023ac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4023b0:	81a3      	strh	r3, [r4, #12]
  4023b2:	4628      	mov	r0, r5
  4023b4:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
  4023b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4023ba:	bf00      	nop

004023bc <__svfiscanf_r>:
  4023bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4023c0:	468b      	mov	fp, r1
  4023c2:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
  4023c6:	b0d9      	sub	sp, #356	; 0x164
  4023c8:	4607      	mov	r7, r0
  4023ca:	0488      	lsls	r0, r1, #18
  4023cc:	9305      	str	r3, [sp, #20]
  4023ce:	d409      	bmi.n	4023e4 <__svfiscanf_r+0x28>
  4023d0:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4023d4:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
  4023d8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  4023dc:	f8ab 100c 	strh.w	r1, [fp, #12]
  4023e0:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  4023e4:	4616      	mov	r6, r2
  4023e6:	2300      	movs	r3, #0
  4023e8:	f816 1b01 	ldrb.w	r1, [r6], #1
  4023ec:	9306      	str	r3, [sp, #24]
  4023ee:	9303      	str	r3, [sp, #12]
  4023f0:	4699      	mov	r9, r3
  4023f2:	9307      	str	r3, [sp, #28]
  4023f4:	f8df a4dc 	ldr.w	sl, [pc, #1244]	; 4028d4 <__svfiscanf_r+0x518>
  4023f8:	910b      	str	r1, [sp, #44]	; 0x2c
  4023fa:	b371      	cbz	r1, 40245a <__svfiscanf_r+0x9e>
  4023fc:	f8da c000 	ldr.w	ip, [sl]
  402400:	eb0c 0301 	add.w	r3, ip, r1
  402404:	785b      	ldrb	r3, [r3, #1]
  402406:	f003 0308 	and.w	r3, r3, #8
  40240a:	f003 05ff 	and.w	r5, r3, #255	; 0xff
  40240e:	b343      	cbz	r3, 402462 <__svfiscanf_r+0xa6>
  402410:	f8db 3004 	ldr.w	r3, [fp, #4]
  402414:	e012      	b.n	40243c <__svfiscanf_r+0x80>
  402416:	f8db 3000 	ldr.w	r3, [fp]
  40241a:	f8da 1000 	ldr.w	r1, [sl]
  40241e:	781a      	ldrb	r2, [r3, #0]
  402420:	440a      	add	r2, r1
  402422:	3301      	adds	r3, #1
  402424:	7852      	ldrb	r2, [r2, #1]
  402426:	0712      	lsls	r2, r2, #28
  402428:	d510      	bpl.n	40244c <__svfiscanf_r+0x90>
  40242a:	f8db 2004 	ldr.w	r2, [fp, #4]
  40242e:	f8cb 3000 	str.w	r3, [fp]
  402432:	1e53      	subs	r3, r2, #1
  402434:	f109 0901 	add.w	r9, r9, #1
  402438:	f8cb 3004 	str.w	r3, [fp, #4]
  40243c:	2b00      	cmp	r3, #0
  40243e:	dcea      	bgt.n	402416 <__svfiscanf_r+0x5a>
  402440:	4659      	mov	r1, fp
  402442:	4638      	mov	r0, r7
  402444:	f002 f9f0 	bl	404828 <__srefill_r>
  402448:	2800      	cmp	r0, #0
  40244a:	d0e4      	beq.n	402416 <__svfiscanf_r+0x5a>
  40244c:	4632      	mov	r2, r6
  40244e:	4616      	mov	r6, r2
  402450:	f816 1b01 	ldrb.w	r1, [r6], #1
  402454:	910b      	str	r1, [sp, #44]	; 0x2c
  402456:	2900      	cmp	r1, #0
  402458:	d1d0      	bne.n	4023fc <__svfiscanf_r+0x40>
  40245a:	9807      	ldr	r0, [sp, #28]
  40245c:	b059      	add	sp, #356	; 0x164
  40245e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402462:	2925      	cmp	r1, #37	; 0x25
  402464:	f040 8082 	bne.w	40256c <__svfiscanf_r+0x1b0>
  402468:	7853      	ldrb	r3, [r2, #1]
  40246a:	462c      	mov	r4, r5
  40246c:	1c72      	adds	r2, r6, #1
  40246e:	2b78      	cmp	r3, #120	; 0x78
  402470:	f200 8264 	bhi.w	40293c <__svfiscanf_r+0x580>
  402474:	e8df f013 	tbh	[pc, r3, lsl #1]
  402478:	02620093 	.word	0x02620093
  40247c:	02620262 	.word	0x02620262
  402480:	02620262 	.word	0x02620262
  402484:	02620262 	.word	0x02620262
  402488:	02620262 	.word	0x02620262
  40248c:	02620262 	.word	0x02620262
  402490:	02620262 	.word	0x02620262
  402494:	02620262 	.word	0x02620262
  402498:	02620262 	.word	0x02620262
  40249c:	02620262 	.word	0x02620262
  4024a0:	02620262 	.word	0x02620262
  4024a4:	02620262 	.word	0x02620262
  4024a8:	02620262 	.word	0x02620262
  4024ac:	02620262 	.word	0x02620262
  4024b0:	02620262 	.word	0x02620262
  4024b4:	02620262 	.word	0x02620262
  4024b8:	02620262 	.word	0x02620262
  4024bc:	02620262 	.word	0x02620262
  4024c0:	00790262 	.word	0x00790262
  4024c4:	02620262 	.word	0x02620262
  4024c8:	02620262 	.word	0x02620262
  4024cc:	026201a7 	.word	0x026201a7
  4024d0:	02620262 	.word	0x02620262
  4024d4:	02620262 	.word	0x02620262
  4024d8:	019f019f 	.word	0x019f019f
  4024dc:	019f019f 	.word	0x019f019f
  4024e0:	019f019f 	.word	0x019f019f
  4024e4:	019f019f 	.word	0x019f019f
  4024e8:	019f019f 	.word	0x019f019f
  4024ec:	02620262 	.word	0x02620262
  4024f0:	02620262 	.word	0x02620262
  4024f4:	02620262 	.word	0x02620262
  4024f8:	02620262 	.word	0x02620262
  4024fc:	02620262 	.word	0x02620262
  402500:	0262018d 	.word	0x0262018d
  402504:	02620262 	.word	0x02620262
  402508:	02620262 	.word	0x02620262
  40250c:	02620262 	.word	0x02620262
  402510:	026201be 	.word	0x026201be
  402514:	01ac0262 	.word	0x01ac0262
  402518:	02620262 	.word	0x02620262
  40251c:	02620262 	.word	0x02620262
  402520:	02620262 	.word	0x02620262
  402524:	02620262 	.word	0x02620262
  402528:	0262017b 	.word	0x0262017b
  40252c:	01440262 	.word	0x01440262
  402530:	02620262 	.word	0x02620262
  402534:	02620262 	.word	0x02620262
  402538:	02620262 	.word	0x02620262
  40253c:	01150262 	.word	0x01150262
  402540:	02620109 	.word	0x02620109
  402544:	02620262 	.word	0x02620262
  402548:	01c30104 	.word	0x01c30104
  40254c:	02620262 	.word	0x02620262
  402550:	026200fc 	.word	0x026200fc
  402554:	00df00eb 	.word	0x00df00eb
  402558:	026200d1 	.word	0x026200d1
  40255c:	00c90262 	.word	0x00c90262
  402560:	00980262 	.word	0x00980262
  402564:	02620262 	.word	0x02620262
  402568:	017b      	.short	0x017b
  40256a:	4616      	mov	r6, r2
  40256c:	f8db 3004 	ldr.w	r3, [fp, #4]
  402570:	2b00      	cmp	r3, #0
  402572:	f340 8244 	ble.w	4029fe <__svfiscanf_r+0x642>
  402576:	f8db 3000 	ldr.w	r3, [fp]
  40257a:	f816 2c01 	ldrb.w	r2, [r6, #-1]
  40257e:	7819      	ldrb	r1, [r3, #0]
  402580:	4291      	cmp	r1, r2
  402582:	f47f af6a 	bne.w	40245a <__svfiscanf_r+0x9e>
  402586:	f8db 2004 	ldr.w	r2, [fp, #4]
  40258a:	3301      	adds	r3, #1
  40258c:	3a01      	subs	r2, #1
  40258e:	f8cb 2004 	str.w	r2, [fp, #4]
  402592:	f8cb 3000 	str.w	r3, [fp]
  402596:	f109 0901 	add.w	r9, r9, #1
  40259a:	4632      	mov	r2, r6
  40259c:	e757      	b.n	40244e <__svfiscanf_r+0x92>
  40259e:	f04f 30ff 	mov.w	r0, #4294967295
  4025a2:	b059      	add	sp, #356	; 0x164
  4025a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4025a8:	f8db 3004 	ldr.w	r3, [fp, #4]
  4025ac:	9202      	str	r2, [sp, #8]
  4025ae:	2b00      	cmp	r3, #0
  4025b0:	f340 8259 	ble.w	402a66 <__svfiscanf_r+0x6aa>
  4025b4:	4bc5      	ldr	r3, [pc, #788]	; (4028cc <__svfiscanf_r+0x510>)
  4025b6:	9306      	str	r3, [sp, #24]
  4025b8:	230a      	movs	r3, #10
  4025ba:	9303      	str	r3, [sp, #12]
  4025bc:	2603      	movs	r6, #3
  4025be:	f8db 3000 	ldr.w	r3, [fp]
  4025c2:	e001      	b.n	4025c8 <__svfiscanf_r+0x20c>
  4025c4:	f8cb 3000 	str.w	r3, [fp]
  4025c8:	f893 e000 	ldrb.w	lr, [r3]
  4025cc:	eb0c 020e 	add.w	r2, ip, lr
  4025d0:	7850      	ldrb	r0, [r2, #1]
  4025d2:	f000 0208 	and.w	r2, r0, #8
  4025d6:	f002 01ff 	and.w	r1, r2, #255	; 0xff
  4025da:	2a00      	cmp	r2, #0
  4025dc:	f000 826e 	beq.w	402abc <__svfiscanf_r+0x700>
  4025e0:	f8db 2004 	ldr.w	r2, [fp, #4]
  4025e4:	3a01      	subs	r2, #1
  4025e6:	2a00      	cmp	r2, #0
  4025e8:	f109 0901 	add.w	r9, r9, #1
  4025ec:	f8cb 2004 	str.w	r2, [fp, #4]
  4025f0:	f103 0301 	add.w	r3, r3, #1
  4025f4:	dce6      	bgt.n	4025c4 <__svfiscanf_r+0x208>
  4025f6:	4659      	mov	r1, fp
  4025f8:	4638      	mov	r0, r7
  4025fa:	f002 f915 	bl	404828 <__srefill_r>
  4025fe:	2800      	cmp	r0, #0
  402600:	f040 818c 	bne.w	40291c <__svfiscanf_r+0x560>
  402604:	f8da c000 	ldr.w	ip, [sl]
  402608:	e7d9      	b.n	4025be <__svfiscanf_r+0x202>
  40260a:	f8db 3004 	ldr.w	r3, [fp, #4]
  40260e:	9202      	str	r2, [sp, #8]
  402610:	2b00      	cmp	r3, #0
  402612:	f340 8232 	ble.w	402a7a <__svfiscanf_r+0x6be>
  402616:	2602      	movs	r6, #2
  402618:	e7d1      	b.n	4025be <__svfiscanf_r+0x202>
  40261a:	f8db 3004 	ldr.w	r3, [fp, #4]
  40261e:	9202      	str	r2, [sp, #8]
  402620:	2b00      	cmp	r3, #0
  402622:	f445 7508 	orr.w	r5, r5, #544	; 0x220
  402626:	f340 80aa 	ble.w	40277e <__svfiscanf_r+0x3c2>
  40262a:	4ba8      	ldr	r3, [pc, #672]	; (4028cc <__svfiscanf_r+0x510>)
  40262c:	9306      	str	r3, [sp, #24]
  40262e:	2310      	movs	r3, #16
  402630:	9303      	str	r3, [sp, #12]
  402632:	2603      	movs	r6, #3
  402634:	e7c3      	b.n	4025be <__svfiscanf_r+0x202>
  402636:	f8db 3004 	ldr.w	r3, [fp, #4]
  40263a:	9202      	str	r2, [sp, #8]
  40263c:	2b00      	cmp	r3, #0
  40263e:	f340 80cf 	ble.w	4027e0 <__svfiscanf_r+0x424>
  402642:	4ba2      	ldr	r3, [pc, #648]	; (4028cc <__svfiscanf_r+0x510>)
  402644:	9306      	str	r3, [sp, #24]
  402646:	2308      	movs	r3, #8
  402648:	9303      	str	r3, [sp, #12]
  40264a:	2603      	movs	r6, #3
  40264c:	e7b7      	b.n	4025be <__svfiscanf_r+0x202>
  40264e:	06eb      	lsls	r3, r5, #27
  402650:	9202      	str	r2, [sp, #8]
  402652:	f100 812c 	bmi.w	4028ae <__svfiscanf_r+0x4f2>
  402656:	076e      	lsls	r6, r5, #29
  402658:	f140 81e4 	bpl.w	402a24 <__svfiscanf_r+0x668>
  40265c:	9905      	ldr	r1, [sp, #20]
  40265e:	680b      	ldr	r3, [r1, #0]
  402660:	f8a3 9000 	strh.w	r9, [r3]
  402664:	460b      	mov	r3, r1
  402666:	4616      	mov	r6, r2
  402668:	3304      	adds	r3, #4
  40266a:	9305      	str	r3, [sp, #20]
  40266c:	4632      	mov	r2, r6
  40266e:	e6ee      	b.n	40244e <__svfiscanf_r+0x92>
  402670:	7873      	ldrb	r3, [r6, #1]
  402672:	2b6c      	cmp	r3, #108	; 0x6c
  402674:	f000 81cb 	beq.w	402a0e <__svfiscanf_r+0x652>
  402678:	f045 0501 	orr.w	r5, r5, #1
  40267c:	4616      	mov	r6, r2
  40267e:	e6f5      	b.n	40246c <__svfiscanf_r+0xb0>
  402680:	7873      	ldrb	r3, [r6, #1]
  402682:	f045 0504 	orr.w	r5, r5, #4
  402686:	4616      	mov	r6, r2
  402688:	e6f0      	b.n	40246c <__svfiscanf_r+0xb0>
  40268a:	f8db 3004 	ldr.w	r3, [fp, #4]
  40268e:	9202      	str	r2, [sp, #8]
  402690:	2b00      	cmp	r3, #0
  402692:	f340 8086 	ble.w	4027a2 <__svfiscanf_r+0x3e6>
  402696:	4b8e      	ldr	r3, [pc, #568]	; (4028d0 <__svfiscanf_r+0x514>)
  402698:	9306      	str	r3, [sp, #24]
  40269a:	230a      	movs	r3, #10
  40269c:	9303      	str	r3, [sp, #12]
  40269e:	2603      	movs	r6, #3
  4026a0:	e78d      	b.n	4025be <__svfiscanf_r+0x202>
  4026a2:	f8db 3004 	ldr.w	r3, [fp, #4]
  4026a6:	9202      	str	r2, [sp, #8]
  4026a8:	2b00      	cmp	r3, #0
  4026aa:	f340 81d4 	ble.w	402a56 <__svfiscanf_r+0x69a>
  4026ae:	2c00      	cmp	r4, #0
  4026b0:	bf08      	it	eq
  4026b2:	2401      	moveq	r4, #1
  4026b4:	f015 0301 	ands.w	r3, r5, #1
  4026b8:	f040 80ad 	bne.w	402816 <__svfiscanf_r+0x45a>
  4026bc:	06ea      	lsls	r2, r5, #27
  4026be:	f140 818a 	bpl.w	4029d6 <__svfiscanf_r+0x61a>
  4026c2:	461d      	mov	r5, r3
  4026c4:	e009      	b.n	4026da <__svfiscanf_r+0x31e>
  4026c6:	4413      	add	r3, r2
  4026c8:	f8cb 3000 	str.w	r3, [fp]
  4026cc:	4415      	add	r5, r2
  4026ce:	1aa4      	subs	r4, r4, r2
  4026d0:	f002 f8aa 	bl	404828 <__srefill_r>
  4026d4:	2800      	cmp	r0, #0
  4026d6:	f040 8175 	bne.w	4029c4 <__svfiscanf_r+0x608>
  4026da:	f8db 2004 	ldr.w	r2, [fp, #4]
  4026de:	f8db 3000 	ldr.w	r3, [fp]
  4026e2:	42a2      	cmp	r2, r4
  4026e4:	4659      	mov	r1, fp
  4026e6:	4638      	mov	r0, r7
  4026e8:	dbed      	blt.n	4026c6 <__svfiscanf_r+0x30a>
  4026ea:	1b12      	subs	r2, r2, r4
  4026ec:	4423      	add	r3, r4
  4026ee:	f8cb 2004 	str.w	r2, [fp, #4]
  4026f2:	4425      	add	r5, r4
  4026f4:	f8cb 3000 	str.w	r3, [fp]
  4026f8:	9e02      	ldr	r6, [sp, #8]
  4026fa:	44a9      	add	r9, r5
  4026fc:	4632      	mov	r2, r6
  4026fe:	e6a6      	b.n	40244e <__svfiscanf_r+0x92>
  402700:	f10d 0860 	add.w	r8, sp, #96	; 0x60
  402704:	4611      	mov	r1, r2
  402706:	4640      	mov	r0, r8
  402708:	f002 f92a 	bl	404960 <__sccl>
  40270c:	f8db 3004 	ldr.w	r3, [fp, #4]
  402710:	2b00      	cmp	r3, #0
  402712:	4606      	mov	r6, r0
  402714:	f340 81ca 	ble.w	402aac <__svfiscanf_r+0x6f0>
  402718:	2c00      	cmp	r4, #0
  40271a:	f8db 1000 	ldr.w	r1, [fp]
  40271e:	bf08      	it	eq
  402720:	f04f 34ff 	moveq.w	r4, #4294967295
  402724:	06eb      	lsls	r3, r5, #27
  402726:	7808      	ldrb	r0, [r1, #0]
  402728:	f140 80c4 	bpl.w	4028b4 <__svfiscanf_r+0x4f8>
  40272c:	9402      	str	r4, [sp, #8]
  40272e:	2500      	movs	r5, #0
  402730:	e000      	b.n	402734 <__svfiscanf_r+0x378>
  402732:	7808      	ldrb	r0, [r1, #0]
  402734:	f818 3000 	ldrb.w	r3, [r8, r0]
  402738:	3101      	adds	r1, #1
  40273a:	2b00      	cmp	r3, #0
  40273c:	f000 8146 	beq.w	4029cc <__svfiscanf_r+0x610>
  402740:	f8db 3004 	ldr.w	r3, [fp, #4]
  402744:	f8cb 1000 	str.w	r1, [fp]
  402748:	3501      	adds	r5, #1
  40274a:	3b01      	subs	r3, #1
  40274c:	42a5      	cmp	r5, r4
  40274e:	f8cb 3004 	str.w	r3, [fp, #4]
  402752:	f000 8110 	beq.w	402976 <__svfiscanf_r+0x5ba>
  402756:	2b00      	cmp	r3, #0
  402758:	dceb      	bgt.n	402732 <__svfiscanf_r+0x376>
  40275a:	4659      	mov	r1, fp
  40275c:	4638      	mov	r0, r7
  40275e:	f002 f863 	bl	404828 <__srefill_r>
  402762:	2800      	cmp	r0, #0
  402764:	f040 8106 	bne.w	402974 <__svfiscanf_r+0x5b8>
  402768:	f8db 1000 	ldr.w	r1, [fp]
  40276c:	e7e1      	b.n	402732 <__svfiscanf_r+0x376>
  40276e:	f8db 3004 	ldr.w	r3, [fp, #4]
  402772:	9202      	str	r2, [sp, #8]
  402774:	2b00      	cmp	r3, #0
  402776:	f445 7500 	orr.w	r5, r5, #512	; 0x200
  40277a:	f73f af56 	bgt.w	40262a <__svfiscanf_r+0x26e>
  40277e:	4659      	mov	r1, fp
  402780:	4638      	mov	r0, r7
  402782:	f002 f851 	bl	404828 <__srefill_r>
  402786:	2800      	cmp	r0, #0
  402788:	f040 80c8 	bne.w	40291c <__svfiscanf_r+0x560>
  40278c:	f8da c000 	ldr.w	ip, [sl]
  402790:	e74b      	b.n	40262a <__svfiscanf_r+0x26e>
  402792:	f8db 3004 	ldr.w	r3, [fp, #4]
  402796:	9202      	str	r2, [sp, #8]
  402798:	2b00      	cmp	r3, #0
  40279a:	f045 0501 	orr.w	r5, r5, #1
  40279e:	f73f af7a 	bgt.w	402696 <__svfiscanf_r+0x2da>
  4027a2:	4659      	mov	r1, fp
  4027a4:	4638      	mov	r0, r7
  4027a6:	f002 f83f 	bl	404828 <__srefill_r>
  4027aa:	2800      	cmp	r0, #0
  4027ac:	f040 80b6 	bne.w	40291c <__svfiscanf_r+0x560>
  4027b0:	f8da c000 	ldr.w	ip, [sl]
  4027b4:	e76f      	b.n	402696 <__svfiscanf_r+0x2da>
  4027b6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4027ba:	eb03 0444 	add.w	r4, r3, r4, lsl #1
  4027be:	3c30      	subs	r4, #48	; 0x30
  4027c0:	7873      	ldrb	r3, [r6, #1]
  4027c2:	4616      	mov	r6, r2
  4027c4:	e652      	b.n	40246c <__svfiscanf_r+0xb0>
  4027c6:	7873      	ldrb	r3, [r6, #1]
  4027c8:	f045 0510 	orr.w	r5, r5, #16
  4027cc:	4616      	mov	r6, r2
  4027ce:	e64d      	b.n	40246c <__svfiscanf_r+0xb0>
  4027d0:	f8db 3004 	ldr.w	r3, [fp, #4]
  4027d4:	9202      	str	r2, [sp, #8]
  4027d6:	2b00      	cmp	r3, #0
  4027d8:	f045 0501 	orr.w	r5, r5, #1
  4027dc:	f73f af31 	bgt.w	402642 <__svfiscanf_r+0x286>
  4027e0:	4659      	mov	r1, fp
  4027e2:	4638      	mov	r0, r7
  4027e4:	f002 f820 	bl	404828 <__srefill_r>
  4027e8:	2800      	cmp	r0, #0
  4027ea:	f040 8097 	bne.w	40291c <__svfiscanf_r+0x560>
  4027ee:	f8da c000 	ldr.w	ip, [sl]
  4027f2:	e726      	b.n	402642 <__svfiscanf_r+0x286>
  4027f4:	7873      	ldrb	r3, [r6, #1]
  4027f6:	f045 0502 	orr.w	r5, r5, #2
  4027fa:	4616      	mov	r6, r2
  4027fc:	e636      	b.n	40246c <__svfiscanf_r+0xb0>
  4027fe:	f8db 3004 	ldr.w	r3, [fp, #4]
  402802:	9202      	str	r2, [sp, #8]
  402804:	2b00      	cmp	r3, #0
  402806:	f340 8143 	ble.w	402a90 <__svfiscanf_r+0x6d4>
  40280a:	4b31      	ldr	r3, [pc, #196]	; (4028d0 <__svfiscanf_r+0x514>)
  40280c:	9306      	str	r3, [sp, #24]
  40280e:	2300      	movs	r3, #0
  402810:	9303      	str	r3, [sp, #12]
  402812:	2603      	movs	r6, #3
  402814:	e6d3      	b.n	4025be <__svfiscanf_r+0x202>
  402816:	ab0c      	add	r3, sp, #48	; 0x30
  402818:	4618      	mov	r0, r3
  40281a:	2208      	movs	r2, #8
  40281c:	2100      	movs	r1, #0
  40281e:	9308      	str	r3, [sp, #32]
  402820:	f7fe fca2 	bl	401168 <memset>
  402824:	f015 0310 	ands.w	r3, r5, #16
  402828:	9309      	str	r3, [sp, #36]	; 0x24
  40282a:	f000 80ab 	beq.w	402984 <__svfiscanf_r+0x5c8>
  40282e:	2300      	movs	r3, #0
  402830:	9304      	str	r3, [sp, #16]
  402832:	2500      	movs	r5, #0
  402834:	f10d 0838 	add.w	r8, sp, #56	; 0x38
  402838:	f001 f928 	bl	403a8c <__locale_mb_cur_max>
  40283c:	42a8      	cmp	r0, r5
  40283e:	d06d      	beq.n	40291c <__svfiscanf_r+0x560>
  402840:	e89b 000c 	ldmia.w	fp, {r2, r3}
  402844:	f812 0b01 	ldrb.w	r0, [r2], #1
  402848:	f8cb 2000 	str.w	r2, [fp]
  40284c:	3b01      	subs	r3, #1
  40284e:	9a08      	ldr	r2, [sp, #32]
  402850:	9200      	str	r2, [sp, #0]
  402852:	1c6e      	adds	r6, r5, #1
  402854:	f8cb 3004 	str.w	r3, [fp, #4]
  402858:	9904      	ldr	r1, [sp, #16]
  40285a:	f808 0005 	strb.w	r0, [r8, r5]
  40285e:	4633      	mov	r3, r6
  402860:	4642      	mov	r2, r8
  402862:	4638      	mov	r0, r7
  402864:	f001 fc4c 	bl	404100 <_mbrtowc_r>
  402868:	1c41      	adds	r1, r0, #1
  40286a:	d057      	beq.n	40291c <__svfiscanf_r+0x560>
  40286c:	2800      	cmp	r0, #0
  40286e:	f040 8090 	bne.w	402992 <__svfiscanf_r+0x5d6>
  402872:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402874:	2b00      	cmp	r3, #0
  402876:	f040 809b 	bne.w	4029b0 <__svfiscanf_r+0x5f4>
  40287a:	9a04      	ldr	r2, [sp, #16]
  40287c:	44b1      	add	r9, r6
  40287e:	6013      	str	r3, [r2, #0]
  402880:	3c01      	subs	r4, #1
  402882:	9b04      	ldr	r3, [sp, #16]
  402884:	3304      	adds	r3, #4
  402886:	9304      	str	r3, [sp, #16]
  402888:	f8db 3004 	ldr.w	r3, [fp, #4]
  40288c:	2b00      	cmp	r3, #0
  40288e:	f04f 0500 	mov.w	r5, #0
  402892:	dc73      	bgt.n	40297c <__svfiscanf_r+0x5c0>
  402894:	4659      	mov	r1, fp
  402896:	4638      	mov	r0, r7
  402898:	f001 ffc6 	bl	404828 <__srefill_r>
  40289c:	2800      	cmp	r0, #0
  40289e:	d06d      	beq.n	40297c <__svfiscanf_r+0x5c0>
  4028a0:	2d00      	cmp	r5, #0
  4028a2:	d13b      	bne.n	40291c <__svfiscanf_r+0x560>
  4028a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4028a6:	b913      	cbnz	r3, 4028ae <__svfiscanf_r+0x4f2>
  4028a8:	9b07      	ldr	r3, [sp, #28]
  4028aa:	3301      	adds	r3, #1
  4028ac:	9307      	str	r3, [sp, #28]
  4028ae:	9e02      	ldr	r6, [sp, #8]
  4028b0:	4632      	mov	r2, r6
  4028b2:	e5cc      	b.n	40244e <__svfiscanf_r+0x92>
  4028b4:	9a05      	ldr	r2, [sp, #20]
  4028b6:	6815      	ldr	r5, [r2, #0]
  4028b8:	9504      	str	r5, [sp, #16]
  4028ba:	4613      	mov	r3, r2
  4028bc:	3304      	adds	r3, #4
  4028be:	192a      	adds	r2, r5, r4
  4028c0:	9302      	str	r3, [sp, #8]
  4028c2:	462c      	mov	r4, r5
  4028c4:	4603      	mov	r3, r0
  4028c6:	463d      	mov	r5, r7
  4028c8:	4617      	mov	r7, r2
  4028ca:	e008      	b.n	4028de <__svfiscanf_r+0x522>
  4028cc:	00404d35 	.word	0x00404d35
  4028d0:	00404a5d 	.word	0x00404a5d
  4028d4:	2000043c 	.word	0x2000043c
  4028d8:	f8db 1000 	ldr.w	r1, [fp]
  4028dc:	780b      	ldrb	r3, [r1, #0]
  4028de:	f818 3003 	ldrb.w	r3, [r8, r3]
  4028e2:	1c48      	adds	r0, r1, #1
  4028e4:	2b00      	cmp	r3, #0
  4028e6:	d036      	beq.n	402956 <__svfiscanf_r+0x59a>
  4028e8:	f8db 3004 	ldr.w	r3, [fp, #4]
  4028ec:	f8cb 0000 	str.w	r0, [fp]
  4028f0:	3b01      	subs	r3, #1
  4028f2:	f8cb 3004 	str.w	r3, [fp, #4]
  4028f6:	780b      	ldrb	r3, [r1, #0]
  4028f8:	f804 3b01 	strb.w	r3, [r4], #1
  4028fc:	42a7      	cmp	r7, r4
  4028fe:	d02a      	beq.n	402956 <__svfiscanf_r+0x59a>
  402900:	f8db 3004 	ldr.w	r3, [fp, #4]
  402904:	2b00      	cmp	r3, #0
  402906:	dce7      	bgt.n	4028d8 <__svfiscanf_r+0x51c>
  402908:	4659      	mov	r1, fp
  40290a:	4628      	mov	r0, r5
  40290c:	f001 ff8c 	bl	404828 <__srefill_r>
  402910:	2800      	cmp	r0, #0
  402912:	d0e1      	beq.n	4028d8 <__svfiscanf_r+0x51c>
  402914:	462f      	mov	r7, r5
  402916:	9d04      	ldr	r5, [sp, #16]
  402918:	42a5      	cmp	r5, r4
  40291a:	d11e      	bne.n	40295a <__svfiscanf_r+0x59e>
  40291c:	9a07      	ldr	r2, [sp, #28]
  40291e:	2a00      	cmp	r2, #0
  402920:	f43f ae3d 	beq.w	40259e <__svfiscanf_r+0x1e2>
  402924:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  402928:	f013 0f40 	tst.w	r3, #64	; 0x40
  40292c:	4613      	mov	r3, r2
  40292e:	bf18      	it	ne
  402930:	f04f 33ff 	movne.w	r3, #4294967295
  402934:	4618      	mov	r0, r3
  402936:	b059      	add	sp, #356	; 0x164
  402938:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40293c:	4463      	add	r3, ip
  40293e:	9202      	str	r2, [sp, #8]
  402940:	785b      	ldrb	r3, [r3, #1]
  402942:	f003 0303 	and.w	r3, r3, #3
  402946:	2b01      	cmp	r3, #1
  402948:	f8db 3004 	ldr.w	r3, [fp, #4]
  40294c:	d064      	beq.n	402a18 <__svfiscanf_r+0x65c>
  40294e:	2b00      	cmp	r3, #0
  402950:	f73f aea1 	bgt.w	402696 <__svfiscanf_r+0x2da>
  402954:	e725      	b.n	4027a2 <__svfiscanf_r+0x3e6>
  402956:	462f      	mov	r7, r5
  402958:	9d04      	ldr	r5, [sp, #16]
  40295a:	1b65      	subs	r5, r4, r5
  40295c:	f43f ad7d 	beq.w	40245a <__svfiscanf_r+0x9e>
  402960:	9b07      	ldr	r3, [sp, #28]
  402962:	3301      	adds	r3, #1
  402964:	2200      	movs	r2, #0
  402966:	9307      	str	r3, [sp, #28]
  402968:	9b02      	ldr	r3, [sp, #8]
  40296a:	9305      	str	r3, [sp, #20]
  40296c:	7022      	strb	r2, [r4, #0]
  40296e:	44a9      	add	r9, r5
  402970:	4632      	mov	r2, r6
  402972:	e56c      	b.n	40244e <__svfiscanf_r+0x92>
  402974:	9502      	str	r5, [sp, #8]
  402976:	9d02      	ldr	r5, [sp, #8]
  402978:	44a9      	add	r9, r5
  40297a:	e7f9      	b.n	402970 <__svfiscanf_r+0x5b4>
  40297c:	2c00      	cmp	r4, #0
  40297e:	f47f af5b 	bne.w	402838 <__svfiscanf_r+0x47c>
  402982:	e78f      	b.n	4028a4 <__svfiscanf_r+0x4e8>
  402984:	9a05      	ldr	r2, [sp, #20]
  402986:	6813      	ldr	r3, [r2, #0]
  402988:	9304      	str	r3, [sp, #16]
  40298a:	4613      	mov	r3, r2
  40298c:	3304      	adds	r3, #4
  40298e:	9305      	str	r3, [sp, #20]
  402990:	e74f      	b.n	402832 <__svfiscanf_r+0x476>
  402992:	3002      	adds	r0, #2
  402994:	d10f      	bne.n	4029b6 <__svfiscanf_r+0x5fa>
  402996:	f8db 3004 	ldr.w	r3, [fp, #4]
  40299a:	2b00      	cmp	r3, #0
  40299c:	4635      	mov	r5, r6
  40299e:	f73f af4b 	bgt.w	402838 <__svfiscanf_r+0x47c>
  4029a2:	4659      	mov	r1, fp
  4029a4:	4638      	mov	r0, r7
  4029a6:	f001 ff3f 	bl	404828 <__srefill_r>
  4029aa:	2800      	cmp	r0, #0
  4029ac:	d0e6      	beq.n	40297c <__svfiscanf_r+0x5c0>
  4029ae:	e777      	b.n	4028a0 <__svfiscanf_r+0x4e4>
  4029b0:	44b1      	add	r9, r6
  4029b2:	3c01      	subs	r4, #1
  4029b4:	e768      	b.n	402888 <__svfiscanf_r+0x4cc>
  4029b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4029b8:	44b1      	add	r9, r6
  4029ba:	3c01      	subs	r4, #1
  4029bc:	2b00      	cmp	r3, #0
  4029be:	f43f af60 	beq.w	402882 <__svfiscanf_r+0x4c6>
  4029c2:	e761      	b.n	402888 <__svfiscanf_r+0x4cc>
  4029c4:	2d00      	cmp	r5, #0
  4029c6:	f47f ae97 	bne.w	4026f8 <__svfiscanf_r+0x33c>
  4029ca:	e7a7      	b.n	40291c <__svfiscanf_r+0x560>
  4029cc:	2d00      	cmp	r5, #0
  4029ce:	f43f ad44 	beq.w	40245a <__svfiscanf_r+0x9e>
  4029d2:	44a9      	add	r9, r5
  4029d4:	e7cc      	b.n	402970 <__svfiscanf_r+0x5b4>
  4029d6:	9d05      	ldr	r5, [sp, #20]
  4029d8:	4623      	mov	r3, r4
  4029da:	6829      	ldr	r1, [r5, #0]
  4029dc:	f8cd b000 	str.w	fp, [sp]
  4029e0:	2201      	movs	r2, #1
  4029e2:	4638      	mov	r0, r7
  4029e4:	f000 fc6a 	bl	4032bc <_fread_r>
  4029e8:	3504      	adds	r5, #4
  4029ea:	2800      	cmp	r0, #0
  4029ec:	d096      	beq.n	40291c <__svfiscanf_r+0x560>
  4029ee:	9b07      	ldr	r3, [sp, #28]
  4029f0:	9e02      	ldr	r6, [sp, #8]
  4029f2:	9505      	str	r5, [sp, #20]
  4029f4:	3301      	adds	r3, #1
  4029f6:	4481      	add	r9, r0
  4029f8:	9307      	str	r3, [sp, #28]
  4029fa:	4632      	mov	r2, r6
  4029fc:	e527      	b.n	40244e <__svfiscanf_r+0x92>
  4029fe:	4659      	mov	r1, fp
  402a00:	4638      	mov	r0, r7
  402a02:	f001 ff11 	bl	404828 <__srefill_r>
  402a06:	2800      	cmp	r0, #0
  402a08:	f43f adb5 	beq.w	402576 <__svfiscanf_r+0x1ba>
  402a0c:	e786      	b.n	40291c <__svfiscanf_r+0x560>
  402a0e:	78b3      	ldrb	r3, [r6, #2]
  402a10:	f045 0502 	orr.w	r5, r5, #2
  402a14:	3602      	adds	r6, #2
  402a16:	e529      	b.n	40246c <__svfiscanf_r+0xb0>
  402a18:	2b00      	cmp	r3, #0
  402a1a:	f045 0501 	orr.w	r5, r5, #1
  402a1e:	f73f ae3a 	bgt.w	402696 <__svfiscanf_r+0x2da>
  402a22:	e6be      	b.n	4027a2 <__svfiscanf_r+0x3e6>
  402a24:	07ec      	lsls	r4, r5, #31
  402a26:	d40c      	bmi.n	402a42 <__svfiscanf_r+0x686>
  402a28:	07a8      	lsls	r0, r5, #30
  402a2a:	d50a      	bpl.n	402a42 <__svfiscanf_r+0x686>
  402a2c:	9805      	ldr	r0, [sp, #20]
  402a2e:	9e02      	ldr	r6, [sp, #8]
  402a30:	6801      	ldr	r1, [r0, #0]
  402a32:	464a      	mov	r2, r9
  402a34:	17d3      	asrs	r3, r2, #31
  402a36:	3004      	adds	r0, #4
  402a38:	e9c1 2300 	strd	r2, r3, [r1]
  402a3c:	9005      	str	r0, [sp, #20]
  402a3e:	4632      	mov	r2, r6
  402a40:	e505      	b.n	40244e <__svfiscanf_r+0x92>
  402a42:	9a05      	ldr	r2, [sp, #20]
  402a44:	9e02      	ldr	r6, [sp, #8]
  402a46:	6813      	ldr	r3, [r2, #0]
  402a48:	f8c3 9000 	str.w	r9, [r3]
  402a4c:	4613      	mov	r3, r2
  402a4e:	3304      	adds	r3, #4
  402a50:	9305      	str	r3, [sp, #20]
  402a52:	4632      	mov	r2, r6
  402a54:	e4fb      	b.n	40244e <__svfiscanf_r+0x92>
  402a56:	4659      	mov	r1, fp
  402a58:	4638      	mov	r0, r7
  402a5a:	f001 fee5 	bl	404828 <__srefill_r>
  402a5e:	2800      	cmp	r0, #0
  402a60:	f43f ae25 	beq.w	4026ae <__svfiscanf_r+0x2f2>
  402a64:	e75a      	b.n	40291c <__svfiscanf_r+0x560>
  402a66:	4659      	mov	r1, fp
  402a68:	4638      	mov	r0, r7
  402a6a:	f001 fedd 	bl	404828 <__srefill_r>
  402a6e:	2800      	cmp	r0, #0
  402a70:	f47f af54 	bne.w	40291c <__svfiscanf_r+0x560>
  402a74:	f8da c000 	ldr.w	ip, [sl]
  402a78:	e59c      	b.n	4025b4 <__svfiscanf_r+0x1f8>
  402a7a:	4659      	mov	r1, fp
  402a7c:	4638      	mov	r0, r7
  402a7e:	f001 fed3 	bl	404828 <__srefill_r>
  402a82:	2800      	cmp	r0, #0
  402a84:	f47f af4a 	bne.w	40291c <__svfiscanf_r+0x560>
  402a88:	f8da c000 	ldr.w	ip, [sl]
  402a8c:	2602      	movs	r6, #2
  402a8e:	e596      	b.n	4025be <__svfiscanf_r+0x202>
  402a90:	4659      	mov	r1, fp
  402a92:	4638      	mov	r0, r7
  402a94:	f001 fec8 	bl	404828 <__srefill_r>
  402a98:	2800      	cmp	r0, #0
  402a9a:	f47f af3f 	bne.w	40291c <__svfiscanf_r+0x560>
  402a9e:	4b8b      	ldr	r3, [pc, #556]	; (402ccc <__svfiscanf_r+0x910>)
  402aa0:	9003      	str	r0, [sp, #12]
  402aa2:	f8da c000 	ldr.w	ip, [sl]
  402aa6:	9306      	str	r3, [sp, #24]
  402aa8:	2603      	movs	r6, #3
  402aaa:	e588      	b.n	4025be <__svfiscanf_r+0x202>
  402aac:	4659      	mov	r1, fp
  402aae:	4638      	mov	r0, r7
  402ab0:	f001 feba 	bl	404828 <__srefill_r>
  402ab4:	2800      	cmp	r0, #0
  402ab6:	f43f ae2f 	beq.w	402718 <__svfiscanf_r+0x35c>
  402aba:	e72f      	b.n	40291c <__svfiscanf_r+0x560>
  402abc:	2e03      	cmp	r6, #3
  402abe:	f040 8098 	bne.w	402bf2 <__svfiscanf_r+0x836>
  402ac2:	1e62      	subs	r2, r4, #1
  402ac4:	2a26      	cmp	r2, #38	; 0x26
  402ac6:	bf98      	it	ls
  402ac8:	460a      	movls	r2, r1
  402aca:	f10d 0838 	add.w	r8, sp, #56	; 0x38
  402ace:	f04f 0100 	mov.w	r1, #0
  402ad2:	4618      	mov	r0, r3
  402ad4:	464b      	mov	r3, r9
  402ad6:	46b9      	mov	r9, r7
  402ad8:	9f03      	ldr	r7, [sp, #12]
  402ada:	9104      	str	r1, [sp, #16]
  402adc:	bf88      	it	hi
  402ade:	f1a4 0227 	subhi.w	r2, r4, #39	; 0x27
  402ae2:	f445 6558 	orr.w	r5, r5, #3456	; 0xd80
  402ae6:	bf88      	it	hi
  402ae8:	2427      	movhi	r4, #39	; 0x27
  402aea:	4646      	mov	r6, r8
  402aec:	f1ae 012b 	sub.w	r1, lr, #43	; 0x2b
  402af0:	294d      	cmp	r1, #77	; 0x4d
  402af2:	d850      	bhi.n	402b96 <__svfiscanf_r+0x7da>
  402af4:	e8df f001 	tbb	[pc, r1]
  402af8:	4f784f78 	.word	0x4f784f78
  402afc:	7272664f 	.word	0x7272664f
  402b00:	72727272 	.word	0x72727272
  402b04:	4f4a4a72 	.word	0x4f4a4a72
  402b08:	4f4f4f4f 	.word	0x4f4f4f4f
  402b0c:	45454f4f 	.word	0x45454f4f
  402b10:	45454545 	.word	0x45454545
  402b14:	4f4f4f4f 	.word	0x4f4f4f4f
  402b18:	4f4f4f4f 	.word	0x4f4f4f4f
  402b1c:	4f4f4f4f 	.word	0x4f4f4f4f
  402b20:	4f4f4f4f 	.word	0x4f4f4f4f
  402b24:	4f4f274f 	.word	0x4f4f274f
  402b28:	4f4f4f4f 	.word	0x4f4f4f4f
  402b2c:	45454f4f 	.word	0x45454f4f
  402b30:	45454545 	.word	0x45454545
  402b34:	4f4f4f4f 	.word	0x4f4f4f4f
  402b38:	4f4f4f4f 	.word	0x4f4f4f4f
  402b3c:	4f4f4f4f 	.word	0x4f4f4f4f
  402b40:	4f4f4f4f 	.word	0x4f4f4f4f
  402b44:	274f      	.short	0x274f
  402b46:	f405 61c0 	and.w	r1, r5, #1536	; 0x600
  402b4a:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
  402b4e:	d122      	bne.n	402b96 <__svfiscanf_r+0x7da>
  402b50:	f425 7500 	bic.w	r5, r5, #512	; 0x200
  402b54:	f445 65a0 	orr.w	r5, r5, #1280	; 0x500
  402b58:	2710      	movs	r7, #16
  402b5a:	f886 e000 	strb.w	lr, [r6]
  402b5e:	3601      	adds	r6, #1
  402b60:	f8db 1004 	ldr.w	r1, [fp, #4]
  402b64:	3901      	subs	r1, #1
  402b66:	2900      	cmp	r1, #0
  402b68:	f8cb 1004 	str.w	r1, [fp, #4]
  402b6c:	dd6e      	ble.n	402c4c <__svfiscanf_r+0x890>
  402b6e:	3001      	adds	r0, #1
  402b70:	f8cb 0000 	str.w	r0, [fp]
  402b74:	3c01      	subs	r4, #1
  402b76:	d00e      	beq.n	402b96 <__svfiscanf_r+0x7da>
  402b78:	f8db 0000 	ldr.w	r0, [fp]
  402b7c:	f890 e000 	ldrb.w	lr, [r0]
  402b80:	e7b4      	b.n	402aec <__svfiscanf_r+0x730>
  402b82:	2f0a      	cmp	r7, #10
  402b84:	dd07      	ble.n	402b96 <__svfiscanf_r+0x7da>
  402b86:	f425 6538 	bic.w	r5, r5, #2944	; 0xb80
  402b8a:	e7e6      	b.n	402b5a <__svfiscanf_r+0x79e>
  402b8c:	4950      	ldr	r1, [pc, #320]	; (402cd0 <__svfiscanf_r+0x914>)
  402b8e:	f931 7017 	ldrsh.w	r7, [r1, r7, lsl #1]
  402b92:	2f08      	cmp	r7, #8
  402b94:	dcf7      	bgt.n	402b86 <__svfiscanf_r+0x7ca>
  402b96:	05e8      	lsls	r0, r5, #23
  402b98:	9703      	str	r7, [sp, #12]
  402b9a:	464f      	mov	r7, r9
  402b9c:	4699      	mov	r9, r3
  402b9e:	d505      	bpl.n	402bac <__svfiscanf_r+0x7f0>
  402ba0:	4546      	cmp	r6, r8
  402ba2:	f200 80e0 	bhi.w	402d66 <__svfiscanf_r+0x9aa>
  402ba6:	4546      	cmp	r6, r8
  402ba8:	f43f ac57 	beq.w	40245a <__svfiscanf_r+0x9e>
  402bac:	f015 0410 	ands.w	r4, r5, #16
  402bb0:	f000 80b3 	beq.w	402d1a <__svfiscanf_r+0x95e>
  402bb4:	9b04      	ldr	r3, [sp, #16]
  402bb6:	ebc8 0606 	rsb	r6, r8, r6
  402bba:	441e      	add	r6, r3
  402bbc:	44b1      	add	r9, r6
  402bbe:	9e02      	ldr	r6, [sp, #8]
  402bc0:	4632      	mov	r2, r6
  402bc2:	e444      	b.n	40244e <__svfiscanf_r+0x92>
  402bc4:	0529      	lsls	r1, r5, #20
  402bc6:	d5c8      	bpl.n	402b5a <__svfiscanf_r+0x79e>
  402bc8:	b917      	cbnz	r7, 402bd0 <__svfiscanf_r+0x814>
  402bca:	f445 7500 	orr.w	r5, r5, #512	; 0x200
  402bce:	2708      	movs	r7, #8
  402bd0:	0569      	lsls	r1, r5, #21
  402bd2:	f140 80b6 	bpl.w	402d42 <__svfiscanf_r+0x986>
  402bd6:	f425 65b0 	bic.w	r5, r5, #1408	; 0x580
  402bda:	e7be      	b.n	402b5a <__svfiscanf_r+0x79e>
  402bdc:	493c      	ldr	r1, [pc, #240]	; (402cd0 <__svfiscanf_r+0x914>)
  402bde:	f425 6538 	bic.w	r5, r5, #2944	; 0xb80
  402be2:	f931 7017 	ldrsh.w	r7, [r1, r7, lsl #1]
  402be6:	e7b8      	b.n	402b5a <__svfiscanf_r+0x79e>
  402be8:	0629      	lsls	r1, r5, #24
  402bea:	d5d4      	bpl.n	402b96 <__svfiscanf_r+0x7da>
  402bec:	f025 0580 	bic.w	r5, r5, #128	; 0x80
  402bf0:	e7b3      	b.n	402b5a <__svfiscanf_r+0x79e>
  402bf2:	2c00      	cmp	r4, #0
  402bf4:	bf08      	it	eq
  402bf6:	f04f 34ff 	moveq.w	r4, #4294967295
  402bfa:	f015 0201 	ands.w	r2, r5, #1
  402bfe:	d169      	bne.n	402cd4 <__svfiscanf_r+0x918>
  402c00:	06e9      	lsls	r1, r5, #27
  402c02:	d52e      	bpl.n	402c62 <__svfiscanf_r+0x8a6>
  402c04:	4615      	mov	r5, r2
  402c06:	4661      	mov	r1, ip
  402c08:	e002      	b.n	402c10 <__svfiscanf_r+0x854>
  402c0a:	781a      	ldrb	r2, [r3, #0]
  402c0c:	440a      	add	r2, r1
  402c0e:	7850      	ldrb	r0, [r2, #1]
  402c10:	0706      	lsls	r6, r0, #28
  402c12:	f103 0301 	add.w	r3, r3, #1
  402c16:	f53f ad6f 	bmi.w	4026f8 <__svfiscanf_r+0x33c>
  402c1a:	f8db 2004 	ldr.w	r2, [fp, #4]
  402c1e:	f8cb 3000 	str.w	r3, [fp]
  402c22:	3501      	adds	r5, #1
  402c24:	3a01      	subs	r2, #1
  402c26:	42ac      	cmp	r4, r5
  402c28:	f8cb 2004 	str.w	r2, [fp, #4]
  402c2c:	f43f ad64 	beq.w	4026f8 <__svfiscanf_r+0x33c>
  402c30:	2a00      	cmp	r2, #0
  402c32:	dcea      	bgt.n	402c0a <__svfiscanf_r+0x84e>
  402c34:	4659      	mov	r1, fp
  402c36:	4638      	mov	r0, r7
  402c38:	f001 fdf6 	bl	404828 <__srefill_r>
  402c3c:	2800      	cmp	r0, #0
  402c3e:	f47f ad5b 	bne.w	4026f8 <__svfiscanf_r+0x33c>
  402c42:	f8da 1000 	ldr.w	r1, [sl]
  402c46:	f8db 3000 	ldr.w	r3, [fp]
  402c4a:	e7de      	b.n	402c0a <__svfiscanf_r+0x84e>
  402c4c:	4659      	mov	r1, fp
  402c4e:	4648      	mov	r0, r9
  402c50:	9208      	str	r2, [sp, #32]
  402c52:	9303      	str	r3, [sp, #12]
  402c54:	f001 fde8 	bl	404828 <__srefill_r>
  402c58:	9b03      	ldr	r3, [sp, #12]
  402c5a:	9a08      	ldr	r2, [sp, #32]
  402c5c:	2800      	cmp	r0, #0
  402c5e:	d089      	beq.n	402b74 <__svfiscanf_r+0x7b8>
  402c60:	e799      	b.n	402b96 <__svfiscanf_r+0x7da>
  402c62:	9905      	ldr	r1, [sp, #20]
  402c64:	680e      	ldr	r6, [r1, #0]
  402c66:	1d0d      	adds	r5, r1, #4
  402c68:	4434      	add	r4, r6
  402c6a:	46b0      	mov	r8, r6
  402c6c:	e006      	b.n	402c7c <__svfiscanf_r+0x8c0>
  402c6e:	f8db 3000 	ldr.w	r3, [fp]
  402c72:	f8da 2000 	ldr.w	r2, [sl]
  402c76:	7819      	ldrb	r1, [r3, #0]
  402c78:	440a      	add	r2, r1
  402c7a:	7850      	ldrb	r0, [r2, #1]
  402c7c:	0700      	lsls	r0, r0, #28
  402c7e:	f103 0101 	add.w	r1, r3, #1
  402c82:	d415      	bmi.n	402cb0 <__svfiscanf_r+0x8f4>
  402c84:	f8db 2004 	ldr.w	r2, [fp, #4]
  402c88:	f8cb 1000 	str.w	r1, [fp]
  402c8c:	3a01      	subs	r2, #1
  402c8e:	f8cb 2004 	str.w	r2, [fp, #4]
  402c92:	781b      	ldrb	r3, [r3, #0]
  402c94:	f808 3b01 	strb.w	r3, [r8], #1
  402c98:	4544      	cmp	r4, r8
  402c9a:	d009      	beq.n	402cb0 <__svfiscanf_r+0x8f4>
  402c9c:	f8db 3004 	ldr.w	r3, [fp, #4]
  402ca0:	2b00      	cmp	r3, #0
  402ca2:	dce4      	bgt.n	402c6e <__svfiscanf_r+0x8b2>
  402ca4:	4659      	mov	r1, fp
  402ca6:	4638      	mov	r0, r7
  402ca8:	f001 fdbe 	bl	404828 <__srefill_r>
  402cac:	2800      	cmp	r0, #0
  402cae:	d0de      	beq.n	402c6e <__svfiscanf_r+0x8b2>
  402cb0:	ebc6 0608 	rsb	r6, r6, r8
  402cb4:	9a07      	ldr	r2, [sp, #28]
  402cb6:	9505      	str	r5, [sp, #20]
  402cb8:	44b1      	add	r9, r6
  402cba:	9e02      	ldr	r6, [sp, #8]
  402cbc:	3201      	adds	r2, #1
  402cbe:	2300      	movs	r3, #0
  402cc0:	9207      	str	r2, [sp, #28]
  402cc2:	f888 3000 	strb.w	r3, [r8]
  402cc6:	4632      	mov	r2, r6
  402cc8:	f7ff bbc1 	b.w	40244e <__svfiscanf_r+0x92>
  402ccc:	00404a5d 	.word	0x00404a5d
  402cd0:	00405bf8 	.word	0x00405bf8
  402cd4:	ab0c      	add	r3, sp, #48	; 0x30
  402cd6:	4618      	mov	r0, r3
  402cd8:	2208      	movs	r2, #8
  402cda:	9308      	str	r3, [sp, #32]
  402cdc:	f7fe fa44 	bl	401168 <memset>
  402ce0:	f015 0310 	ands.w	r3, r5, #16
  402ce4:	9304      	str	r3, [sp, #16]
  402ce6:	d13b      	bne.n	402d60 <__svfiscanf_r+0x9a4>
  402ce8:	9a05      	ldr	r2, [sp, #20]
  402cea:	4613      	mov	r3, r2
  402cec:	3304      	adds	r3, #4
  402cee:	f8d2 8000 	ldr.w	r8, [r2]
  402cf2:	9305      	str	r3, [sp, #20]
  402cf4:	2600      	movs	r6, #0
  402cf6:	f8db 3000 	ldr.w	r3, [fp]
  402cfa:	f8da 2000 	ldr.w	r2, [sl]
  402cfe:	781b      	ldrb	r3, [r3, #0]
  402d00:	4413      	add	r3, r2
  402d02:	785b      	ldrb	r3, [r3, #1]
  402d04:	0718      	lsls	r0, r3, #28
  402d06:	d401      	bmi.n	402d0c <__svfiscanf_r+0x950>
  402d08:	2c00      	cmp	r4, #0
  402d0a:	d149      	bne.n	402da0 <__svfiscanf_r+0x9e4>
  402d0c:	9b04      	ldr	r3, [sp, #16]
  402d0e:	2b00      	cmp	r3, #0
  402d10:	f47f adcd 	bne.w	4028ae <__svfiscanf_r+0x4f2>
  402d14:	f8c8 3000 	str.w	r3, [r8]
  402d18:	e5c6      	b.n	4028a8 <__svfiscanf_r+0x4ec>
  402d1a:	4622      	mov	r2, r4
  402d1c:	4641      	mov	r1, r8
  402d1e:	7034      	strb	r4, [r6, #0]
  402d20:	9b03      	ldr	r3, [sp, #12]
  402d22:	9c06      	ldr	r4, [sp, #24]
  402d24:	4638      	mov	r0, r7
  402d26:	47a0      	blx	r4
  402d28:	06a9      	lsls	r1, r5, #26
  402d2a:	d413      	bmi.n	402d54 <__svfiscanf_r+0x998>
  402d2c:	076a      	lsls	r2, r5, #29
  402d2e:	d522      	bpl.n	402d76 <__svfiscanf_r+0x9ba>
  402d30:	9a05      	ldr	r2, [sp, #20]
  402d32:	6813      	ldr	r3, [r2, #0]
  402d34:	3204      	adds	r2, #4
  402d36:	9205      	str	r2, [sp, #20]
  402d38:	8018      	strh	r0, [r3, #0]
  402d3a:	9b07      	ldr	r3, [sp, #28]
  402d3c:	3301      	adds	r3, #1
  402d3e:	9307      	str	r3, [sp, #28]
  402d40:	e738      	b.n	402bb4 <__svfiscanf_r+0x7f8>
  402d42:	f425 7560 	bic.w	r5, r5, #896	; 0x380
  402d46:	b10a      	cbz	r2, 402d4c <__svfiscanf_r+0x990>
  402d48:	3a01      	subs	r2, #1
  402d4a:	3401      	adds	r4, #1
  402d4c:	9904      	ldr	r1, [sp, #16]
  402d4e:	3101      	adds	r1, #1
  402d50:	9104      	str	r1, [sp, #16]
  402d52:	e705      	b.n	402b60 <__svfiscanf_r+0x7a4>
  402d54:	9a05      	ldr	r2, [sp, #20]
  402d56:	6813      	ldr	r3, [r2, #0]
  402d58:	3204      	adds	r2, #4
  402d5a:	9205      	str	r2, [sp, #20]
  402d5c:	6018      	str	r0, [r3, #0]
  402d5e:	e7ec      	b.n	402d3a <__svfiscanf_r+0x97e>
  402d60:	f10d 082c 	add.w	r8, sp, #44	; 0x2c
  402d64:	e7c6      	b.n	402cf4 <__svfiscanf_r+0x938>
  402d66:	f816 1c01 	ldrb.w	r1, [r6, #-1]
  402d6a:	465a      	mov	r2, fp
  402d6c:	4638      	mov	r0, r7
  402d6e:	f002 f99b 	bl	4050a8 <_ungetc_r>
  402d72:	3e01      	subs	r6, #1
  402d74:	e717      	b.n	402ba6 <__svfiscanf_r+0x7ea>
  402d76:	f015 0201 	ands.w	r2, r5, #1
  402d7a:	d1eb      	bne.n	402d54 <__svfiscanf_r+0x998>
  402d7c:	07ab      	lsls	r3, r5, #30
  402d7e:	d5e9      	bpl.n	402d54 <__svfiscanf_r+0x998>
  402d80:	4b30      	ldr	r3, [pc, #192]	; (402e44 <__svfiscanf_r+0xa88>)
  402d82:	9906      	ldr	r1, [sp, #24]
  402d84:	4299      	cmp	r1, r3
  402d86:	4638      	mov	r0, r7
  402d88:	9b03      	ldr	r3, [sp, #12]
  402d8a:	4641      	mov	r1, r8
  402d8c:	d053      	beq.n	402e36 <__svfiscanf_r+0xa7a>
  402d8e:	f001 fef9 	bl	404b84 <_strtoll_r>
  402d92:	9a05      	ldr	r2, [sp, #20]
  402d94:	6813      	ldr	r3, [r2, #0]
  402d96:	3204      	adds	r2, #4
  402d98:	9205      	str	r2, [sp, #20]
  402d9a:	e9c3 0100 	strd	r0, r1, [r3]
  402d9e:	e7cc      	b.n	402d3a <__svfiscanf_r+0x97e>
  402da0:	f000 fe74 	bl	403a8c <__locale_mb_cur_max>
  402da4:	4286      	cmp	r6, r0
  402da6:	f43f adb9 	beq.w	40291c <__svfiscanf_r+0x560>
  402daa:	e89b 000c 	ldmia.w	fp, {r2, r3}
  402dae:	f812 0b01 	ldrb.w	r0, [r2], #1
  402db2:	f8cb 2000 	str.w	r2, [fp]
  402db6:	9a08      	ldr	r2, [sp, #32]
  402db8:	9200      	str	r2, [sp, #0]
  402dba:	aa0e      	add	r2, sp, #56	; 0x38
  402dbc:	1c75      	adds	r5, r6, #1
  402dbe:	3b01      	subs	r3, #1
  402dc0:	5590      	strb	r0, [r2, r6]
  402dc2:	f8cb 3004 	str.w	r3, [fp, #4]
  402dc6:	4641      	mov	r1, r8
  402dc8:	462b      	mov	r3, r5
  402dca:	4638      	mov	r0, r7
  402dcc:	f001 f998 	bl	404100 <_mbrtowc_r>
  402dd0:	1c46      	adds	r6, r0, #1
  402dd2:	f43f ada3 	beq.w	40291c <__svfiscanf_r+0x560>
  402dd6:	b188      	cbz	r0, 402dfc <__svfiscanf_r+0xa40>
  402dd8:	3002      	adds	r0, #2
  402dda:	bf08      	it	eq
  402ddc:	462e      	moveq	r6, r5
  402dde:	d12d      	bne.n	402e3c <__svfiscanf_r+0xa80>
  402de0:	f8db 3004 	ldr.w	r3, [fp, #4]
  402de4:	2b00      	cmp	r3, #0
  402de6:	dc86      	bgt.n	402cf6 <__svfiscanf_r+0x93a>
  402de8:	4659      	mov	r1, fp
  402dea:	4638      	mov	r0, r7
  402dec:	f001 fd1c 	bl	404828 <__srefill_r>
  402df0:	2800      	cmp	r0, #0
  402df2:	d080      	beq.n	402cf6 <__svfiscanf_r+0x93a>
  402df4:	2e00      	cmp	r6, #0
  402df6:	f47f ad91 	bne.w	40291c <__svfiscanf_r+0x560>
  402dfa:	e787      	b.n	402d0c <__svfiscanf_r+0x950>
  402dfc:	f8c8 0000 	str.w	r0, [r8]
  402e00:	f000 fe32 	bl	403a68 <iswspace>
  402e04:	b168      	cbz	r0, 402e22 <__svfiscanf_r+0xa66>
  402e06:	2d00      	cmp	r5, #0
  402e08:	d080      	beq.n	402d0c <__svfiscanf_r+0x950>
  402e0a:	ab0e      	add	r3, sp, #56	; 0x38
  402e0c:	195c      	adds	r4, r3, r5
  402e0e:	3d01      	subs	r5, #1
  402e10:	465a      	mov	r2, fp
  402e12:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
  402e16:	4638      	mov	r0, r7
  402e18:	f002 f946 	bl	4050a8 <_ungetc_r>
  402e1c:	2d00      	cmp	r5, #0
  402e1e:	d1f6      	bne.n	402e0e <__svfiscanf_r+0xa52>
  402e20:	e774      	b.n	402d0c <__svfiscanf_r+0x950>
  402e22:	9b04      	ldr	r3, [sp, #16]
  402e24:	44a9      	add	r9, r5
  402e26:	3c01      	subs	r4, #1
  402e28:	b91b      	cbnz	r3, 402e32 <__svfiscanf_r+0xa76>
  402e2a:	f108 0804 	add.w	r8, r8, #4
  402e2e:	461e      	mov	r6, r3
  402e30:	e7d6      	b.n	402de0 <__svfiscanf_r+0xa24>
  402e32:	4606      	mov	r6, r0
  402e34:	e7d4      	b.n	402de0 <__svfiscanf_r+0xa24>
  402e36:	f002 f817 	bl	404e68 <_strtoull_r>
  402e3a:	e7aa      	b.n	402d92 <__svfiscanf_r+0x9d6>
  402e3c:	f8d8 0000 	ldr.w	r0, [r8]
  402e40:	e7de      	b.n	402e00 <__svfiscanf_r+0xa44>
  402e42:	bf00      	nop
  402e44:	00404d35 	.word	0x00404d35

00402e48 <__swsetup_r>:
  402e48:	b538      	push	{r3, r4, r5, lr}
  402e4a:	4b30      	ldr	r3, [pc, #192]	; (402f0c <__swsetup_r+0xc4>)
  402e4c:	681b      	ldr	r3, [r3, #0]
  402e4e:	4605      	mov	r5, r0
  402e50:	460c      	mov	r4, r1
  402e52:	b113      	cbz	r3, 402e5a <__swsetup_r+0x12>
  402e54:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  402e56:	2a00      	cmp	r2, #0
  402e58:	d038      	beq.n	402ecc <__swsetup_r+0x84>
  402e5a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402e5e:	b293      	uxth	r3, r2
  402e60:	0718      	lsls	r0, r3, #28
  402e62:	d50c      	bpl.n	402e7e <__swsetup_r+0x36>
  402e64:	6920      	ldr	r0, [r4, #16]
  402e66:	b1a8      	cbz	r0, 402e94 <__swsetup_r+0x4c>
  402e68:	f013 0201 	ands.w	r2, r3, #1
  402e6c:	d01e      	beq.n	402eac <__swsetup_r+0x64>
  402e6e:	6963      	ldr	r3, [r4, #20]
  402e70:	2200      	movs	r2, #0
  402e72:	425b      	negs	r3, r3
  402e74:	61a3      	str	r3, [r4, #24]
  402e76:	60a2      	str	r2, [r4, #8]
  402e78:	b1f0      	cbz	r0, 402eb8 <__swsetup_r+0x70>
  402e7a:	2000      	movs	r0, #0
  402e7c:	bd38      	pop	{r3, r4, r5, pc}
  402e7e:	06d9      	lsls	r1, r3, #27
  402e80:	d53c      	bpl.n	402efc <__swsetup_r+0xb4>
  402e82:	0758      	lsls	r0, r3, #29
  402e84:	d426      	bmi.n	402ed4 <__swsetup_r+0x8c>
  402e86:	6920      	ldr	r0, [r4, #16]
  402e88:	f042 0308 	orr.w	r3, r2, #8
  402e8c:	81a3      	strh	r3, [r4, #12]
  402e8e:	b29b      	uxth	r3, r3
  402e90:	2800      	cmp	r0, #0
  402e92:	d1e9      	bne.n	402e68 <__swsetup_r+0x20>
  402e94:	f403 7220 	and.w	r2, r3, #640	; 0x280
  402e98:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  402e9c:	d0e4      	beq.n	402e68 <__swsetup_r+0x20>
  402e9e:	4628      	mov	r0, r5
  402ea0:	4621      	mov	r1, r4
  402ea2:	f000 fe29 	bl	403af8 <__smakebuf_r>
  402ea6:	89a3      	ldrh	r3, [r4, #12]
  402ea8:	6920      	ldr	r0, [r4, #16]
  402eaa:	e7dd      	b.n	402e68 <__swsetup_r+0x20>
  402eac:	0799      	lsls	r1, r3, #30
  402eae:	bf58      	it	pl
  402eb0:	6962      	ldrpl	r2, [r4, #20]
  402eb2:	60a2      	str	r2, [r4, #8]
  402eb4:	2800      	cmp	r0, #0
  402eb6:	d1e0      	bne.n	402e7a <__swsetup_r+0x32>
  402eb8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402ebc:	061a      	lsls	r2, r3, #24
  402ebe:	d5dd      	bpl.n	402e7c <__swsetup_r+0x34>
  402ec0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402ec4:	81a3      	strh	r3, [r4, #12]
  402ec6:	f04f 30ff 	mov.w	r0, #4294967295
  402eca:	bd38      	pop	{r3, r4, r5, pc}
  402ecc:	4618      	mov	r0, r3
  402ece:	f000 f979 	bl	4031c4 <__sinit>
  402ed2:	e7c2      	b.n	402e5a <__swsetup_r+0x12>
  402ed4:	6b21      	ldr	r1, [r4, #48]	; 0x30
  402ed6:	b151      	cbz	r1, 402eee <__swsetup_r+0xa6>
  402ed8:	f104 0340 	add.w	r3, r4, #64	; 0x40
  402edc:	4299      	cmp	r1, r3
  402ede:	d004      	beq.n	402eea <__swsetup_r+0xa2>
  402ee0:	4628      	mov	r0, r5
  402ee2:	f000 fb07 	bl	4034f4 <_free_r>
  402ee6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402eea:	2300      	movs	r3, #0
  402eec:	6323      	str	r3, [r4, #48]	; 0x30
  402eee:	2300      	movs	r3, #0
  402ef0:	6920      	ldr	r0, [r4, #16]
  402ef2:	6063      	str	r3, [r4, #4]
  402ef4:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  402ef8:	6020      	str	r0, [r4, #0]
  402efa:	e7c5      	b.n	402e88 <__swsetup_r+0x40>
  402efc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  402f00:	2309      	movs	r3, #9
  402f02:	602b      	str	r3, [r5, #0]
  402f04:	f04f 30ff 	mov.w	r0, #4294967295
  402f08:	81a2      	strh	r2, [r4, #12]
  402f0a:	bd38      	pop	{r3, r4, r5, pc}
  402f0c:	20000438 	.word	0x20000438

00402f10 <register_fini>:
  402f10:	4b02      	ldr	r3, [pc, #8]	; (402f1c <register_fini+0xc>)
  402f12:	b113      	cbz	r3, 402f1a <register_fini+0xa>
  402f14:	4802      	ldr	r0, [pc, #8]	; (402f20 <register_fini+0x10>)
  402f16:	f000 b805 	b.w	402f24 <atexit>
  402f1a:	4770      	bx	lr
  402f1c:	00000000 	.word	0x00000000
  402f20:	004031d9 	.word	0x004031d9

00402f24 <atexit>:
  402f24:	2300      	movs	r3, #0
  402f26:	4601      	mov	r1, r0
  402f28:	461a      	mov	r2, r3
  402f2a:	4618      	mov	r0, r3
  402f2c:	f002 b9d0 	b.w	4052d0 <__register_exitproc>

00402f30 <__sflush_r>:
  402f30:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  402f34:	b29a      	uxth	r2, r3
  402f36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402f3a:	460d      	mov	r5, r1
  402f3c:	0711      	lsls	r1, r2, #28
  402f3e:	4680      	mov	r8, r0
  402f40:	d43c      	bmi.n	402fbc <__sflush_r+0x8c>
  402f42:	686a      	ldr	r2, [r5, #4]
  402f44:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  402f48:	2a00      	cmp	r2, #0
  402f4a:	81ab      	strh	r3, [r5, #12]
  402f4c:	dd73      	ble.n	403036 <__sflush_r+0x106>
  402f4e:	6aac      	ldr	r4, [r5, #40]	; 0x28
  402f50:	2c00      	cmp	r4, #0
  402f52:	d04b      	beq.n	402fec <__sflush_r+0xbc>
  402f54:	b29b      	uxth	r3, r3
  402f56:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
  402f5a:	2100      	movs	r1, #0
  402f5c:	b292      	uxth	r2, r2
  402f5e:	f8d8 6000 	ldr.w	r6, [r8]
  402f62:	f8c8 1000 	str.w	r1, [r8]
  402f66:	2a00      	cmp	r2, #0
  402f68:	d069      	beq.n	40303e <__sflush_r+0x10e>
  402f6a:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  402f6c:	075f      	lsls	r7, r3, #29
  402f6e:	d505      	bpl.n	402f7c <__sflush_r+0x4c>
  402f70:	6869      	ldr	r1, [r5, #4]
  402f72:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  402f74:	1a52      	subs	r2, r2, r1
  402f76:	b10b      	cbz	r3, 402f7c <__sflush_r+0x4c>
  402f78:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  402f7a:	1ad2      	subs	r2, r2, r3
  402f7c:	2300      	movs	r3, #0
  402f7e:	69e9      	ldr	r1, [r5, #28]
  402f80:	4640      	mov	r0, r8
  402f82:	47a0      	blx	r4
  402f84:	1c44      	adds	r4, r0, #1
  402f86:	d03c      	beq.n	403002 <__sflush_r+0xd2>
  402f88:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  402f8c:	692a      	ldr	r2, [r5, #16]
  402f8e:	602a      	str	r2, [r5, #0]
  402f90:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  402f94:	2200      	movs	r2, #0
  402f96:	81ab      	strh	r3, [r5, #12]
  402f98:	04db      	lsls	r3, r3, #19
  402f9a:	606a      	str	r2, [r5, #4]
  402f9c:	d449      	bmi.n	403032 <__sflush_r+0x102>
  402f9e:	6b29      	ldr	r1, [r5, #48]	; 0x30
  402fa0:	f8c8 6000 	str.w	r6, [r8]
  402fa4:	b311      	cbz	r1, 402fec <__sflush_r+0xbc>
  402fa6:	f105 0340 	add.w	r3, r5, #64	; 0x40
  402faa:	4299      	cmp	r1, r3
  402fac:	d002      	beq.n	402fb4 <__sflush_r+0x84>
  402fae:	4640      	mov	r0, r8
  402fb0:	f000 faa0 	bl	4034f4 <_free_r>
  402fb4:	2000      	movs	r0, #0
  402fb6:	6328      	str	r0, [r5, #48]	; 0x30
  402fb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402fbc:	692e      	ldr	r6, [r5, #16]
  402fbe:	b1ae      	cbz	r6, 402fec <__sflush_r+0xbc>
  402fc0:	682c      	ldr	r4, [r5, #0]
  402fc2:	602e      	str	r6, [r5, #0]
  402fc4:	0790      	lsls	r0, r2, #30
  402fc6:	bf0c      	ite	eq
  402fc8:	696b      	ldreq	r3, [r5, #20]
  402fca:	2300      	movne	r3, #0
  402fcc:	1ba4      	subs	r4, r4, r6
  402fce:	60ab      	str	r3, [r5, #8]
  402fd0:	e00a      	b.n	402fe8 <__sflush_r+0xb8>
  402fd2:	4623      	mov	r3, r4
  402fd4:	4632      	mov	r2, r6
  402fd6:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  402fd8:	69e9      	ldr	r1, [r5, #28]
  402fda:	4640      	mov	r0, r8
  402fdc:	47b8      	blx	r7
  402fde:	2800      	cmp	r0, #0
  402fe0:	eba4 0400 	sub.w	r4, r4, r0
  402fe4:	4406      	add	r6, r0
  402fe6:	dd04      	ble.n	402ff2 <__sflush_r+0xc2>
  402fe8:	2c00      	cmp	r4, #0
  402fea:	dcf2      	bgt.n	402fd2 <__sflush_r+0xa2>
  402fec:	2000      	movs	r0, #0
  402fee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402ff2:	89ab      	ldrh	r3, [r5, #12]
  402ff4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402ff8:	81ab      	strh	r3, [r5, #12]
  402ffa:	f04f 30ff 	mov.w	r0, #4294967295
  402ffe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403002:	f8d8 2000 	ldr.w	r2, [r8]
  403006:	2a1d      	cmp	r2, #29
  403008:	d8f3      	bhi.n	402ff2 <__sflush_r+0xc2>
  40300a:	4b1a      	ldr	r3, [pc, #104]	; (403074 <__sflush_r+0x144>)
  40300c:	40d3      	lsrs	r3, r2
  40300e:	f003 0301 	and.w	r3, r3, #1
  403012:	f083 0401 	eor.w	r4, r3, #1
  403016:	2b00      	cmp	r3, #0
  403018:	d0eb      	beq.n	402ff2 <__sflush_r+0xc2>
  40301a:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  40301e:	6929      	ldr	r1, [r5, #16]
  403020:	6029      	str	r1, [r5, #0]
  403022:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  403026:	04d9      	lsls	r1, r3, #19
  403028:	606c      	str	r4, [r5, #4]
  40302a:	81ab      	strh	r3, [r5, #12]
  40302c:	d5b7      	bpl.n	402f9e <__sflush_r+0x6e>
  40302e:	2a00      	cmp	r2, #0
  403030:	d1b5      	bne.n	402f9e <__sflush_r+0x6e>
  403032:	6528      	str	r0, [r5, #80]	; 0x50
  403034:	e7b3      	b.n	402f9e <__sflush_r+0x6e>
  403036:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  403038:	2a00      	cmp	r2, #0
  40303a:	dc88      	bgt.n	402f4e <__sflush_r+0x1e>
  40303c:	e7d6      	b.n	402fec <__sflush_r+0xbc>
  40303e:	2301      	movs	r3, #1
  403040:	69e9      	ldr	r1, [r5, #28]
  403042:	4640      	mov	r0, r8
  403044:	47a0      	blx	r4
  403046:	1c43      	adds	r3, r0, #1
  403048:	4602      	mov	r2, r0
  40304a:	d002      	beq.n	403052 <__sflush_r+0x122>
  40304c:	89ab      	ldrh	r3, [r5, #12]
  40304e:	6aac      	ldr	r4, [r5, #40]	; 0x28
  403050:	e78c      	b.n	402f6c <__sflush_r+0x3c>
  403052:	f8d8 3000 	ldr.w	r3, [r8]
  403056:	2b00      	cmp	r3, #0
  403058:	d0f8      	beq.n	40304c <__sflush_r+0x11c>
  40305a:	2b1d      	cmp	r3, #29
  40305c:	d001      	beq.n	403062 <__sflush_r+0x132>
  40305e:	2b16      	cmp	r3, #22
  403060:	d102      	bne.n	403068 <__sflush_r+0x138>
  403062:	f8c8 6000 	str.w	r6, [r8]
  403066:	e7c1      	b.n	402fec <__sflush_r+0xbc>
  403068:	89ab      	ldrh	r3, [r5, #12]
  40306a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40306e:	81ab      	strh	r3, [r5, #12]
  403070:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403074:	20400001 	.word	0x20400001

00403078 <_fflush_r>:
  403078:	b510      	push	{r4, lr}
  40307a:	4604      	mov	r4, r0
  40307c:	b082      	sub	sp, #8
  40307e:	b108      	cbz	r0, 403084 <_fflush_r+0xc>
  403080:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403082:	b153      	cbz	r3, 40309a <_fflush_r+0x22>
  403084:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
  403088:	b908      	cbnz	r0, 40308e <_fflush_r+0x16>
  40308a:	b002      	add	sp, #8
  40308c:	bd10      	pop	{r4, pc}
  40308e:	4620      	mov	r0, r4
  403090:	b002      	add	sp, #8
  403092:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  403096:	f7ff bf4b 	b.w	402f30 <__sflush_r>
  40309a:	9101      	str	r1, [sp, #4]
  40309c:	f000 f892 	bl	4031c4 <__sinit>
  4030a0:	9901      	ldr	r1, [sp, #4]
  4030a2:	e7ef      	b.n	403084 <_fflush_r+0xc>

004030a4 <fflush>:
  4030a4:	b120      	cbz	r0, 4030b0 <fflush+0xc>
  4030a6:	4b05      	ldr	r3, [pc, #20]	; (4030bc <fflush+0x18>)
  4030a8:	4601      	mov	r1, r0
  4030aa:	6818      	ldr	r0, [r3, #0]
  4030ac:	f7ff bfe4 	b.w	403078 <_fflush_r>
  4030b0:	4b03      	ldr	r3, [pc, #12]	; (4030c0 <fflush+0x1c>)
  4030b2:	4904      	ldr	r1, [pc, #16]	; (4030c4 <fflush+0x20>)
  4030b4:	6818      	ldr	r0, [r3, #0]
  4030b6:	f000 bcad 	b.w	403a14 <_fwalk_reent>
  4030ba:	bf00      	nop
  4030bc:	20000438 	.word	0x20000438
  4030c0:	00405ba0 	.word	0x00405ba0
  4030c4:	00403079 	.word	0x00403079

004030c8 <_cleanup_r>:
  4030c8:	4901      	ldr	r1, [pc, #4]	; (4030d0 <_cleanup_r+0x8>)
  4030ca:	f000 bca3 	b.w	403a14 <_fwalk_reent>
  4030ce:	bf00      	nop
  4030d0:	00405399 	.word	0x00405399

004030d4 <__sinit.part.1>:
  4030d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4030d8:	4b35      	ldr	r3, [pc, #212]	; (4031b0 <__sinit.part.1+0xdc>)
  4030da:	6845      	ldr	r5, [r0, #4]
  4030dc:	63c3      	str	r3, [r0, #60]	; 0x3c
  4030de:	2400      	movs	r4, #0
  4030e0:	4607      	mov	r7, r0
  4030e2:	f500 723b 	add.w	r2, r0, #748	; 0x2ec
  4030e6:	2304      	movs	r3, #4
  4030e8:	2103      	movs	r1, #3
  4030ea:	f8c0 12e4 	str.w	r1, [r0, #740]	; 0x2e4
  4030ee:	f8c0 22e8 	str.w	r2, [r0, #744]	; 0x2e8
  4030f2:	f8c0 42e0 	str.w	r4, [r0, #736]	; 0x2e0
  4030f6:	b083      	sub	sp, #12
  4030f8:	602c      	str	r4, [r5, #0]
  4030fa:	606c      	str	r4, [r5, #4]
  4030fc:	60ac      	str	r4, [r5, #8]
  4030fe:	666c      	str	r4, [r5, #100]	; 0x64
  403100:	81ec      	strh	r4, [r5, #14]
  403102:	612c      	str	r4, [r5, #16]
  403104:	616c      	str	r4, [r5, #20]
  403106:	61ac      	str	r4, [r5, #24]
  403108:	81ab      	strh	r3, [r5, #12]
  40310a:	4621      	mov	r1, r4
  40310c:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  403110:	2208      	movs	r2, #8
  403112:	f7fe f829 	bl	401168 <memset>
  403116:	68be      	ldr	r6, [r7, #8]
  403118:	f8df b098 	ldr.w	fp, [pc, #152]	; 4031b4 <__sinit.part.1+0xe0>
  40311c:	f8df a098 	ldr.w	sl, [pc, #152]	; 4031b8 <__sinit.part.1+0xe4>
  403120:	f8df 9098 	ldr.w	r9, [pc, #152]	; 4031bc <__sinit.part.1+0xe8>
  403124:	f8df 8098 	ldr.w	r8, [pc, #152]	; 4031c0 <__sinit.part.1+0xec>
  403128:	f8c5 b020 	str.w	fp, [r5, #32]
  40312c:	2301      	movs	r3, #1
  40312e:	2209      	movs	r2, #9
  403130:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  403134:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  403138:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  40313c:	61ed      	str	r5, [r5, #28]
  40313e:	4621      	mov	r1, r4
  403140:	81f3      	strh	r3, [r6, #14]
  403142:	81b2      	strh	r2, [r6, #12]
  403144:	f106 005c 	add.w	r0, r6, #92	; 0x5c
  403148:	6034      	str	r4, [r6, #0]
  40314a:	6074      	str	r4, [r6, #4]
  40314c:	60b4      	str	r4, [r6, #8]
  40314e:	6674      	str	r4, [r6, #100]	; 0x64
  403150:	6134      	str	r4, [r6, #16]
  403152:	6174      	str	r4, [r6, #20]
  403154:	61b4      	str	r4, [r6, #24]
  403156:	2208      	movs	r2, #8
  403158:	9301      	str	r3, [sp, #4]
  40315a:	f7fe f805 	bl	401168 <memset>
  40315e:	68fd      	ldr	r5, [r7, #12]
  403160:	61f6      	str	r6, [r6, #28]
  403162:	2012      	movs	r0, #18
  403164:	2202      	movs	r2, #2
  403166:	f8c6 b020 	str.w	fp, [r6, #32]
  40316a:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
  40316e:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
  403172:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
  403176:	4621      	mov	r1, r4
  403178:	81a8      	strh	r0, [r5, #12]
  40317a:	81ea      	strh	r2, [r5, #14]
  40317c:	602c      	str	r4, [r5, #0]
  40317e:	606c      	str	r4, [r5, #4]
  403180:	60ac      	str	r4, [r5, #8]
  403182:	666c      	str	r4, [r5, #100]	; 0x64
  403184:	612c      	str	r4, [r5, #16]
  403186:	616c      	str	r4, [r5, #20]
  403188:	61ac      	str	r4, [r5, #24]
  40318a:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  40318e:	2208      	movs	r2, #8
  403190:	f7fd ffea 	bl	401168 <memset>
  403194:	9b01      	ldr	r3, [sp, #4]
  403196:	61ed      	str	r5, [r5, #28]
  403198:	f8c5 b020 	str.w	fp, [r5, #32]
  40319c:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  4031a0:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  4031a4:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  4031a8:	63bb      	str	r3, [r7, #56]	; 0x38
  4031aa:	b003      	add	sp, #12
  4031ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4031b0:	004030c9 	.word	0x004030c9
  4031b4:	004049d5 	.word	0x004049d5
  4031b8:	004049f9 	.word	0x004049f9
  4031bc:	00404a35 	.word	0x00404a35
  4031c0:	00404a55 	.word	0x00404a55

004031c4 <__sinit>:
  4031c4:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4031c6:	b103      	cbz	r3, 4031ca <__sinit+0x6>
  4031c8:	4770      	bx	lr
  4031ca:	f7ff bf83 	b.w	4030d4 <__sinit.part.1>
  4031ce:	bf00      	nop

004031d0 <__sfp_lock_acquire>:
  4031d0:	4770      	bx	lr
  4031d2:	bf00      	nop

004031d4 <__sfp_lock_release>:
  4031d4:	4770      	bx	lr
  4031d6:	bf00      	nop

004031d8 <__libc_fini_array>:
  4031d8:	b538      	push	{r3, r4, r5, lr}
  4031da:	4d07      	ldr	r5, [pc, #28]	; (4031f8 <__libc_fini_array+0x20>)
  4031dc:	4c07      	ldr	r4, [pc, #28]	; (4031fc <__libc_fini_array+0x24>)
  4031de:	1b2c      	subs	r4, r5, r4
  4031e0:	10a4      	asrs	r4, r4, #2
  4031e2:	d005      	beq.n	4031f0 <__libc_fini_array+0x18>
  4031e4:	3c01      	subs	r4, #1
  4031e6:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  4031ea:	4798      	blx	r3
  4031ec:	2c00      	cmp	r4, #0
  4031ee:	d1f9      	bne.n	4031e4 <__libc_fini_array+0xc>
  4031f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4031f4:	f002 bd9e 	b.w	405d34 <_fini>
  4031f8:	00405d44 	.word	0x00405d44
  4031fc:	00405d40 	.word	0x00405d40

00403200 <__fputwc>:
  403200:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  403204:	b082      	sub	sp, #8
  403206:	4680      	mov	r8, r0
  403208:	4689      	mov	r9, r1
  40320a:	4614      	mov	r4, r2
  40320c:	f000 fc3e 	bl	403a8c <__locale_mb_cur_max>
  403210:	2801      	cmp	r0, #1
  403212:	d033      	beq.n	40327c <__fputwc+0x7c>
  403214:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  403218:	464a      	mov	r2, r9
  40321a:	a901      	add	r1, sp, #4
  40321c:	4640      	mov	r0, r8
  40321e:	f002 f809 	bl	405234 <_wcrtomb_r>
  403222:	f1b0 3fff 	cmp.w	r0, #4294967295
  403226:	4682      	mov	sl, r0
  403228:	d021      	beq.n	40326e <__fputwc+0x6e>
  40322a:	b388      	cbz	r0, 403290 <__fputwc+0x90>
  40322c:	f89d 6004 	ldrb.w	r6, [sp, #4]
  403230:	2500      	movs	r5, #0
  403232:	e008      	b.n	403246 <__fputwc+0x46>
  403234:	6823      	ldr	r3, [r4, #0]
  403236:	1c5a      	adds	r2, r3, #1
  403238:	6022      	str	r2, [r4, #0]
  40323a:	701e      	strb	r6, [r3, #0]
  40323c:	3501      	adds	r5, #1
  40323e:	4555      	cmp	r5, sl
  403240:	d226      	bcs.n	403290 <__fputwc+0x90>
  403242:	ab01      	add	r3, sp, #4
  403244:	5d5e      	ldrb	r6, [r3, r5]
  403246:	68a3      	ldr	r3, [r4, #8]
  403248:	3b01      	subs	r3, #1
  40324a:	2b00      	cmp	r3, #0
  40324c:	60a3      	str	r3, [r4, #8]
  40324e:	daf1      	bge.n	403234 <__fputwc+0x34>
  403250:	69a7      	ldr	r7, [r4, #24]
  403252:	42bb      	cmp	r3, r7
  403254:	4631      	mov	r1, r6
  403256:	4622      	mov	r2, r4
  403258:	4640      	mov	r0, r8
  40325a:	db01      	blt.n	403260 <__fputwc+0x60>
  40325c:	2e0a      	cmp	r6, #10
  40325e:	d1e9      	bne.n	403234 <__fputwc+0x34>
  403260:	f001 ff92 	bl	405188 <__swbuf_r>
  403264:	1c43      	adds	r3, r0, #1
  403266:	d1e9      	bne.n	40323c <__fputwc+0x3c>
  403268:	b002      	add	sp, #8
  40326a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40326e:	89a3      	ldrh	r3, [r4, #12]
  403270:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403274:	81a3      	strh	r3, [r4, #12]
  403276:	b002      	add	sp, #8
  403278:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40327c:	f109 33ff 	add.w	r3, r9, #4294967295
  403280:	2bfe      	cmp	r3, #254	; 0xfe
  403282:	d8c7      	bhi.n	403214 <__fputwc+0x14>
  403284:	fa5f f689 	uxtb.w	r6, r9
  403288:	4682      	mov	sl, r0
  40328a:	f88d 6004 	strb.w	r6, [sp, #4]
  40328e:	e7cf      	b.n	403230 <__fputwc+0x30>
  403290:	4648      	mov	r0, r9
  403292:	b002      	add	sp, #8
  403294:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00403298 <_fputwc_r>:
  403298:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  40329c:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  4032a0:	d10a      	bne.n	4032b8 <_fputwc_r+0x20>
  4032a2:	b410      	push	{r4}
  4032a4:	6e54      	ldr	r4, [r2, #100]	; 0x64
  4032a6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  4032aa:	f444 5400 	orr.w	r4, r4, #8192	; 0x2000
  4032ae:	6654      	str	r4, [r2, #100]	; 0x64
  4032b0:	8193      	strh	r3, [r2, #12]
  4032b2:	bc10      	pop	{r4}
  4032b4:	f7ff bfa4 	b.w	403200 <__fputwc>
  4032b8:	f7ff bfa2 	b.w	403200 <__fputwc>

004032bc <_fread_r>:
  4032bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4032c0:	b083      	sub	sp, #12
  4032c2:	fb02 f603 	mul.w	r6, r2, r3
  4032c6:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4032ca:	2e00      	cmp	r6, #0
  4032cc:	d048      	beq.n	403360 <_fread_r+0xa4>
  4032ce:	4691      	mov	r9, r2
  4032d0:	4698      	mov	r8, r3
  4032d2:	460c      	mov	r4, r1
  4032d4:	4605      	mov	r5, r0
  4032d6:	b118      	cbz	r0, 4032e0 <_fread_r+0x24>
  4032d8:	6b82      	ldr	r2, [r0, #56]	; 0x38
  4032da:	2a00      	cmp	r2, #0
  4032dc:	f000 80ab 	beq.w	403436 <_fread_r+0x17a>
  4032e0:	f9bb 200c 	ldrsh.w	r2, [fp, #12]
  4032e4:	b291      	uxth	r1, r2
  4032e6:	0488      	lsls	r0, r1, #18
  4032e8:	d40a      	bmi.n	403300 <_fread_r+0x44>
  4032ea:	f8db 1064 	ldr.w	r1, [fp, #100]	; 0x64
  4032ee:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4032f2:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
  4032f6:	f8ab 200c 	strh.w	r2, [fp, #12]
  4032fa:	b291      	uxth	r1, r2
  4032fc:	f8cb 0064 	str.w	r0, [fp, #100]	; 0x64
  403300:	f8db 7004 	ldr.w	r7, [fp, #4]
  403304:	2f00      	cmp	r7, #0
  403306:	db36      	blt.n	403376 <_fread_r+0xba>
  403308:	078b      	lsls	r3, r1, #30
  40330a:	463a      	mov	r2, r7
  40330c:	d43a      	bmi.n	403384 <_fread_r+0xc8>
  40330e:	46b2      	mov	sl, r6
  403310:	e012      	b.n	403338 <_fread_r+0x7c>
  403312:	f8db 1000 	ldr.w	r1, [fp]
  403316:	f000 ff8b 	bl	404230 <memcpy>
  40331a:	f8db 3000 	ldr.w	r3, [fp]
  40331e:	443b      	add	r3, r7
  403320:	f8cb 3000 	str.w	r3, [fp]
  403324:	4659      	mov	r1, fp
  403326:	4628      	mov	r0, r5
  403328:	443c      	add	r4, r7
  40332a:	ebc7 0a0a 	rsb	sl, r7, sl
  40332e:	f001 fa7b 	bl	404828 <__srefill_r>
  403332:	b9c8      	cbnz	r0, 403368 <_fread_r+0xac>
  403334:	f8db 7004 	ldr.w	r7, [fp, #4]
  403338:	45ba      	cmp	sl, r7
  40333a:	463a      	mov	r2, r7
  40333c:	4620      	mov	r0, r4
  40333e:	d8e8      	bhi.n	403312 <_fread_r+0x56>
  403340:	4652      	mov	r2, sl
  403342:	f8db 1000 	ldr.w	r1, [fp]
  403346:	f000 ff73 	bl	404230 <memcpy>
  40334a:	e89b 0006 	ldmia.w	fp, {r1, r2}
  40334e:	ebca 0202 	rsb	r2, sl, r2
  403352:	4451      	add	r1, sl
  403354:	e88b 0006 	stmia.w	fp, {r1, r2}
  403358:	4640      	mov	r0, r8
  40335a:	b003      	add	sp, #12
  40335c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403360:	4630      	mov	r0, r6
  403362:	b003      	add	sp, #12
  403364:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403368:	ebca 0606 	rsb	r6, sl, r6
  40336c:	fbb6 f0f9 	udiv	r0, r6, r9
  403370:	b003      	add	sp, #12
  403372:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403376:	2000      	movs	r0, #0
  403378:	078b      	lsls	r3, r1, #30
  40337a:	4602      	mov	r2, r0
  40337c:	f8cb 0004 	str.w	r0, [fp, #4]
  403380:	4607      	mov	r7, r0
  403382:	d5c4      	bpl.n	40330e <_fread_r+0x52>
  403384:	42b2      	cmp	r2, r6
  403386:	4613      	mov	r3, r2
  403388:	bf28      	it	cs
  40338a:	4633      	movcs	r3, r6
  40338c:	461a      	mov	r2, r3
  40338e:	f8db 1000 	ldr.w	r1, [fp]
  403392:	9300      	str	r3, [sp, #0]
  403394:	4620      	mov	r0, r4
  403396:	f000 ff4b 	bl	404230 <memcpy>
  40339a:	f8db 7000 	ldr.w	r7, [fp]
  40339e:	9b00      	ldr	r3, [sp, #0]
  4033a0:	f8db 2004 	ldr.w	r2, [fp, #4]
  4033a4:	f8db 1030 	ldr.w	r1, [fp, #48]	; 0x30
  4033a8:	eb07 0a03 	add.w	sl, r7, r3
  4033ac:	1ad2      	subs	r2, r2, r3
  4033ae:	f8cb a000 	str.w	sl, [fp]
  4033b2:	f8cb 2004 	str.w	r2, [fp, #4]
  4033b6:	1af7      	subs	r7, r6, r3
  4033b8:	2900      	cmp	r1, #0
  4033ba:	d049      	beq.n	403450 <_fread_r+0x194>
  4033bc:	2f00      	cmp	r7, #0
  4033be:	d045      	beq.n	40344c <_fread_r+0x190>
  4033c0:	f10b 0040 	add.w	r0, fp, #64	; 0x40
  4033c4:	4281      	cmp	r1, r0
  4033c6:	d006      	beq.n	4033d6 <_fread_r+0x11a>
  4033c8:	4628      	mov	r0, r5
  4033ca:	9300      	str	r3, [sp, #0]
  4033cc:	f000 f892 	bl	4034f4 <_free_r>
  4033d0:	f8db a000 	ldr.w	sl, [fp]
  4033d4:	9b00      	ldr	r3, [sp, #0]
  4033d6:	2100      	movs	r1, #0
  4033d8:	f8cb 1030 	str.w	r1, [fp, #48]	; 0x30
  4033dc:	f8db 2010 	ldr.w	r2, [fp, #16]
  4033e0:	f8db 1014 	ldr.w	r1, [fp, #20]
  4033e4:	9600      	str	r6, [sp, #0]
  4033e6:	441c      	add	r4, r3
  4033e8:	f8cd 8004 	str.w	r8, [sp, #4]
  4033ec:	4616      	mov	r6, r2
  4033ee:	46a0      	mov	r8, r4
  4033f0:	4654      	mov	r4, sl
  4033f2:	46aa      	mov	sl, r5
  4033f4:	460d      	mov	r5, r1
  4033f6:	e000      	b.n	4033fa <_fread_r+0x13e>
  4033f8:	b337      	cbz	r7, 403448 <_fread_r+0x18c>
  4033fa:	f8cb 8010 	str.w	r8, [fp, #16]
  4033fe:	f8cb 7014 	str.w	r7, [fp, #20]
  403402:	f8cb 8000 	str.w	r8, [fp]
  403406:	4659      	mov	r1, fp
  403408:	4650      	mov	r0, sl
  40340a:	f001 fa0d 	bl	404828 <__srefill_r>
  40340e:	f8db 1004 	ldr.w	r1, [fp, #4]
  403412:	f8cb 6010 	str.w	r6, [fp, #16]
  403416:	2300      	movs	r3, #0
  403418:	f8cb 5014 	str.w	r5, [fp, #20]
  40341c:	f8cb 4000 	str.w	r4, [fp]
  403420:	1a7f      	subs	r7, r7, r1
  403422:	4488      	add	r8, r1
  403424:	f8cb 3004 	str.w	r3, [fp, #4]
  403428:	2800      	cmp	r0, #0
  40342a:	d0e5      	beq.n	4033f8 <_fread_r+0x13c>
  40342c:	9e00      	ldr	r6, [sp, #0]
  40342e:	1bf6      	subs	r6, r6, r7
  403430:	fbb6 f0f9 	udiv	r0, r6, r9
  403434:	e791      	b.n	40335a <_fread_r+0x9e>
  403436:	f7ff fec5 	bl	4031c4 <__sinit>
  40343a:	f9bb 200c 	ldrsh.w	r2, [fp, #12]
  40343e:	b291      	uxth	r1, r2
  403440:	0488      	lsls	r0, r1, #18
  403442:	f53f af5d 	bmi.w	403300 <_fread_r+0x44>
  403446:	e750      	b.n	4032ea <_fread_r+0x2e>
  403448:	f8dd 8004 	ldr.w	r8, [sp, #4]
  40344c:	4640      	mov	r0, r8
  40344e:	e784      	b.n	40335a <_fread_r+0x9e>
  403450:	2f00      	cmp	r7, #0
  403452:	d1c3      	bne.n	4033dc <_fread_r+0x120>
  403454:	4640      	mov	r0, r8
  403456:	e780      	b.n	40335a <_fread_r+0x9e>

00403458 <_malloc_trim_r>:
  403458:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40345a:	4f23      	ldr	r7, [pc, #140]	; (4034e8 <_malloc_trim_r+0x90>)
  40345c:	460c      	mov	r4, r1
  40345e:	4606      	mov	r6, r0
  403460:	f000 ffe4 	bl	40442c <__malloc_lock>
  403464:	68bb      	ldr	r3, [r7, #8]
  403466:	685d      	ldr	r5, [r3, #4]
  403468:	f025 0503 	bic.w	r5, r5, #3
  40346c:	1b29      	subs	r1, r5, r4
  40346e:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
  403472:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  403476:	f021 010f 	bic.w	r1, r1, #15
  40347a:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  40347e:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  403482:	db07      	blt.n	403494 <_malloc_trim_r+0x3c>
  403484:	2100      	movs	r1, #0
  403486:	4630      	mov	r0, r6
  403488:	f001 fa58 	bl	40493c <_sbrk_r>
  40348c:	68bb      	ldr	r3, [r7, #8]
  40348e:	442b      	add	r3, r5
  403490:	4298      	cmp	r0, r3
  403492:	d004      	beq.n	40349e <_malloc_trim_r+0x46>
  403494:	4630      	mov	r0, r6
  403496:	f000 ffcb 	bl	404430 <__malloc_unlock>
  40349a:	2000      	movs	r0, #0
  40349c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40349e:	4261      	negs	r1, r4
  4034a0:	4630      	mov	r0, r6
  4034a2:	f001 fa4b 	bl	40493c <_sbrk_r>
  4034a6:	3001      	adds	r0, #1
  4034a8:	d00d      	beq.n	4034c6 <_malloc_trim_r+0x6e>
  4034aa:	4b10      	ldr	r3, [pc, #64]	; (4034ec <_malloc_trim_r+0x94>)
  4034ac:	68ba      	ldr	r2, [r7, #8]
  4034ae:	6819      	ldr	r1, [r3, #0]
  4034b0:	1b2d      	subs	r5, r5, r4
  4034b2:	f045 0501 	orr.w	r5, r5, #1
  4034b6:	4630      	mov	r0, r6
  4034b8:	1b09      	subs	r1, r1, r4
  4034ba:	6055      	str	r5, [r2, #4]
  4034bc:	6019      	str	r1, [r3, #0]
  4034be:	f000 ffb7 	bl	404430 <__malloc_unlock>
  4034c2:	2001      	movs	r0, #1
  4034c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4034c6:	2100      	movs	r1, #0
  4034c8:	4630      	mov	r0, r6
  4034ca:	f001 fa37 	bl	40493c <_sbrk_r>
  4034ce:	68ba      	ldr	r2, [r7, #8]
  4034d0:	1a83      	subs	r3, r0, r2
  4034d2:	2b0f      	cmp	r3, #15
  4034d4:	ddde      	ble.n	403494 <_malloc_trim_r+0x3c>
  4034d6:	4c06      	ldr	r4, [pc, #24]	; (4034f0 <_malloc_trim_r+0x98>)
  4034d8:	4904      	ldr	r1, [pc, #16]	; (4034ec <_malloc_trim_r+0x94>)
  4034da:	6824      	ldr	r4, [r4, #0]
  4034dc:	f043 0301 	orr.w	r3, r3, #1
  4034e0:	1b00      	subs	r0, r0, r4
  4034e2:	6053      	str	r3, [r2, #4]
  4034e4:	6008      	str	r0, [r1, #0]
  4034e6:	e7d5      	b.n	403494 <_malloc_trim_r+0x3c>
  4034e8:	20000464 	.word	0x20000464
  4034ec:	2000095c 	.word	0x2000095c
  4034f0:	20000870 	.word	0x20000870

004034f4 <_free_r>:
  4034f4:	2900      	cmp	r1, #0
  4034f6:	d045      	beq.n	403584 <_free_r+0x90>
  4034f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4034fc:	460d      	mov	r5, r1
  4034fe:	4680      	mov	r8, r0
  403500:	f000 ff94 	bl	40442c <__malloc_lock>
  403504:	f855 7c04 	ldr.w	r7, [r5, #-4]
  403508:	496a      	ldr	r1, [pc, #424]	; (4036b4 <_free_r+0x1c0>)
  40350a:	f027 0301 	bic.w	r3, r7, #1
  40350e:	f1a5 0408 	sub.w	r4, r5, #8
  403512:	18e2      	adds	r2, r4, r3
  403514:	688e      	ldr	r6, [r1, #8]
  403516:	6850      	ldr	r0, [r2, #4]
  403518:	42b2      	cmp	r2, r6
  40351a:	f020 0003 	bic.w	r0, r0, #3
  40351e:	d062      	beq.n	4035e6 <_free_r+0xf2>
  403520:	07fe      	lsls	r6, r7, #31
  403522:	6050      	str	r0, [r2, #4]
  403524:	d40b      	bmi.n	40353e <_free_r+0x4a>
  403526:	f855 7c08 	ldr.w	r7, [r5, #-8]
  40352a:	1be4      	subs	r4, r4, r7
  40352c:	f101 0e08 	add.w	lr, r1, #8
  403530:	68a5      	ldr	r5, [r4, #8]
  403532:	4575      	cmp	r5, lr
  403534:	443b      	add	r3, r7
  403536:	d06f      	beq.n	403618 <_free_r+0x124>
  403538:	68e7      	ldr	r7, [r4, #12]
  40353a:	60ef      	str	r7, [r5, #12]
  40353c:	60bd      	str	r5, [r7, #8]
  40353e:	1815      	adds	r5, r2, r0
  403540:	686d      	ldr	r5, [r5, #4]
  403542:	07ed      	lsls	r5, r5, #31
  403544:	d542      	bpl.n	4035cc <_free_r+0xd8>
  403546:	f043 0201 	orr.w	r2, r3, #1
  40354a:	6062      	str	r2, [r4, #4]
  40354c:	50e3      	str	r3, [r4, r3]
  40354e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  403552:	d218      	bcs.n	403586 <_free_r+0x92>
  403554:	08db      	lsrs	r3, r3, #3
  403556:	1c5a      	adds	r2, r3, #1
  403558:	684d      	ldr	r5, [r1, #4]
  40355a:	f851 7032 	ldr.w	r7, [r1, r2, lsl #3]
  40355e:	60a7      	str	r7, [r4, #8]
  403560:	2001      	movs	r0, #1
  403562:	109b      	asrs	r3, r3, #2
  403564:	fa00 f303 	lsl.w	r3, r0, r3
  403568:	eb01 00c2 	add.w	r0, r1, r2, lsl #3
  40356c:	431d      	orrs	r5, r3
  40356e:	3808      	subs	r0, #8
  403570:	60e0      	str	r0, [r4, #12]
  403572:	604d      	str	r5, [r1, #4]
  403574:	f841 4032 	str.w	r4, [r1, r2, lsl #3]
  403578:	60fc      	str	r4, [r7, #12]
  40357a:	4640      	mov	r0, r8
  40357c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  403580:	f000 bf56 	b.w	404430 <__malloc_unlock>
  403584:	4770      	bx	lr
  403586:	0a5a      	lsrs	r2, r3, #9
  403588:	2a04      	cmp	r2, #4
  40358a:	d853      	bhi.n	403634 <_free_r+0x140>
  40358c:	099a      	lsrs	r2, r3, #6
  40358e:	f102 0739 	add.w	r7, r2, #57	; 0x39
  403592:	007f      	lsls	r7, r7, #1
  403594:	f102 0538 	add.w	r5, r2, #56	; 0x38
  403598:	eb01 0087 	add.w	r0, r1, r7, lsl #2
  40359c:	f851 2027 	ldr.w	r2, [r1, r7, lsl #2]
  4035a0:	4944      	ldr	r1, [pc, #272]	; (4036b4 <_free_r+0x1c0>)
  4035a2:	3808      	subs	r0, #8
  4035a4:	4290      	cmp	r0, r2
  4035a6:	d04d      	beq.n	403644 <_free_r+0x150>
  4035a8:	6851      	ldr	r1, [r2, #4]
  4035aa:	f021 0103 	bic.w	r1, r1, #3
  4035ae:	428b      	cmp	r3, r1
  4035b0:	d202      	bcs.n	4035b8 <_free_r+0xc4>
  4035b2:	6892      	ldr	r2, [r2, #8]
  4035b4:	4290      	cmp	r0, r2
  4035b6:	d1f7      	bne.n	4035a8 <_free_r+0xb4>
  4035b8:	68d0      	ldr	r0, [r2, #12]
  4035ba:	60e0      	str	r0, [r4, #12]
  4035bc:	60a2      	str	r2, [r4, #8]
  4035be:	6084      	str	r4, [r0, #8]
  4035c0:	60d4      	str	r4, [r2, #12]
  4035c2:	4640      	mov	r0, r8
  4035c4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4035c8:	f000 bf32 	b.w	404430 <__malloc_unlock>
  4035cc:	6895      	ldr	r5, [r2, #8]
  4035ce:	4f3a      	ldr	r7, [pc, #232]	; (4036b8 <_free_r+0x1c4>)
  4035d0:	42bd      	cmp	r5, r7
  4035d2:	4403      	add	r3, r0
  4035d4:	d03f      	beq.n	403656 <_free_r+0x162>
  4035d6:	68d0      	ldr	r0, [r2, #12]
  4035d8:	60e8      	str	r0, [r5, #12]
  4035da:	f043 0201 	orr.w	r2, r3, #1
  4035de:	6085      	str	r5, [r0, #8]
  4035e0:	6062      	str	r2, [r4, #4]
  4035e2:	50e3      	str	r3, [r4, r3]
  4035e4:	e7b3      	b.n	40354e <_free_r+0x5a>
  4035e6:	07ff      	lsls	r7, r7, #31
  4035e8:	4403      	add	r3, r0
  4035ea:	d407      	bmi.n	4035fc <_free_r+0x108>
  4035ec:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4035f0:	1aa4      	subs	r4, r4, r2
  4035f2:	4413      	add	r3, r2
  4035f4:	68a0      	ldr	r0, [r4, #8]
  4035f6:	68e2      	ldr	r2, [r4, #12]
  4035f8:	60c2      	str	r2, [r0, #12]
  4035fa:	6090      	str	r0, [r2, #8]
  4035fc:	4a2f      	ldr	r2, [pc, #188]	; (4036bc <_free_r+0x1c8>)
  4035fe:	6812      	ldr	r2, [r2, #0]
  403600:	f043 0001 	orr.w	r0, r3, #1
  403604:	4293      	cmp	r3, r2
  403606:	6060      	str	r0, [r4, #4]
  403608:	608c      	str	r4, [r1, #8]
  40360a:	d3b6      	bcc.n	40357a <_free_r+0x86>
  40360c:	4b2c      	ldr	r3, [pc, #176]	; (4036c0 <_free_r+0x1cc>)
  40360e:	4640      	mov	r0, r8
  403610:	6819      	ldr	r1, [r3, #0]
  403612:	f7ff ff21 	bl	403458 <_malloc_trim_r>
  403616:	e7b0      	b.n	40357a <_free_r+0x86>
  403618:	1811      	adds	r1, r2, r0
  40361a:	6849      	ldr	r1, [r1, #4]
  40361c:	07c9      	lsls	r1, r1, #31
  40361e:	d444      	bmi.n	4036aa <_free_r+0x1b6>
  403620:	6891      	ldr	r1, [r2, #8]
  403622:	68d2      	ldr	r2, [r2, #12]
  403624:	60ca      	str	r2, [r1, #12]
  403626:	4403      	add	r3, r0
  403628:	f043 0001 	orr.w	r0, r3, #1
  40362c:	6091      	str	r1, [r2, #8]
  40362e:	6060      	str	r0, [r4, #4]
  403630:	50e3      	str	r3, [r4, r3]
  403632:	e7a2      	b.n	40357a <_free_r+0x86>
  403634:	2a14      	cmp	r2, #20
  403636:	d817      	bhi.n	403668 <_free_r+0x174>
  403638:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  40363c:	007f      	lsls	r7, r7, #1
  40363e:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  403642:	e7a9      	b.n	403598 <_free_r+0xa4>
  403644:	10aa      	asrs	r2, r5, #2
  403646:	684b      	ldr	r3, [r1, #4]
  403648:	2501      	movs	r5, #1
  40364a:	fa05 f202 	lsl.w	r2, r5, r2
  40364e:	4313      	orrs	r3, r2
  403650:	604b      	str	r3, [r1, #4]
  403652:	4602      	mov	r2, r0
  403654:	e7b1      	b.n	4035ba <_free_r+0xc6>
  403656:	f043 0201 	orr.w	r2, r3, #1
  40365a:	614c      	str	r4, [r1, #20]
  40365c:	610c      	str	r4, [r1, #16]
  40365e:	60e5      	str	r5, [r4, #12]
  403660:	60a5      	str	r5, [r4, #8]
  403662:	6062      	str	r2, [r4, #4]
  403664:	50e3      	str	r3, [r4, r3]
  403666:	e788      	b.n	40357a <_free_r+0x86>
  403668:	2a54      	cmp	r2, #84	; 0x54
  40366a:	d806      	bhi.n	40367a <_free_r+0x186>
  40366c:	0b1a      	lsrs	r2, r3, #12
  40366e:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  403672:	007f      	lsls	r7, r7, #1
  403674:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  403678:	e78e      	b.n	403598 <_free_r+0xa4>
  40367a:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40367e:	d806      	bhi.n	40368e <_free_r+0x19a>
  403680:	0bda      	lsrs	r2, r3, #15
  403682:	f102 0778 	add.w	r7, r2, #120	; 0x78
  403686:	007f      	lsls	r7, r7, #1
  403688:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40368c:	e784      	b.n	403598 <_free_r+0xa4>
  40368e:	f240 5054 	movw	r0, #1364	; 0x554
  403692:	4282      	cmp	r2, r0
  403694:	d806      	bhi.n	4036a4 <_free_r+0x1b0>
  403696:	0c9a      	lsrs	r2, r3, #18
  403698:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40369c:	007f      	lsls	r7, r7, #1
  40369e:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4036a2:	e779      	b.n	403598 <_free_r+0xa4>
  4036a4:	27fe      	movs	r7, #254	; 0xfe
  4036a6:	257e      	movs	r5, #126	; 0x7e
  4036a8:	e776      	b.n	403598 <_free_r+0xa4>
  4036aa:	f043 0201 	orr.w	r2, r3, #1
  4036ae:	6062      	str	r2, [r4, #4]
  4036b0:	50e3      	str	r3, [r4, r3]
  4036b2:	e762      	b.n	40357a <_free_r+0x86>
  4036b4:	20000464 	.word	0x20000464
  4036b8:	2000046c 	.word	0x2000046c
  4036bc:	2000086c 	.word	0x2000086c
  4036c0:	20000958 	.word	0x20000958

004036c4 <__sfvwrite_r>:
  4036c4:	6893      	ldr	r3, [r2, #8]
  4036c6:	2b00      	cmp	r3, #0
  4036c8:	d076      	beq.n	4037b8 <__sfvwrite_r+0xf4>
  4036ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4036ce:	898b      	ldrh	r3, [r1, #12]
  4036d0:	b085      	sub	sp, #20
  4036d2:	460c      	mov	r4, r1
  4036d4:	0719      	lsls	r1, r3, #28
  4036d6:	9001      	str	r0, [sp, #4]
  4036d8:	4616      	mov	r6, r2
  4036da:	d529      	bpl.n	403730 <__sfvwrite_r+0x6c>
  4036dc:	6922      	ldr	r2, [r4, #16]
  4036de:	b33a      	cbz	r2, 403730 <__sfvwrite_r+0x6c>
  4036e0:	f003 0802 	and.w	r8, r3, #2
  4036e4:	fa1f f088 	uxth.w	r0, r8
  4036e8:	6835      	ldr	r5, [r6, #0]
  4036ea:	2800      	cmp	r0, #0
  4036ec:	d02f      	beq.n	40374e <__sfvwrite_r+0x8a>
  4036ee:	f04f 0900 	mov.w	r9, #0
  4036f2:	4fb4      	ldr	r7, [pc, #720]	; (4039c4 <__sfvwrite_r+0x300>)
  4036f4:	46c8      	mov	r8, r9
  4036f6:	46b2      	mov	sl, r6
  4036f8:	45b8      	cmp	r8, r7
  4036fa:	4643      	mov	r3, r8
  4036fc:	464a      	mov	r2, r9
  4036fe:	bf28      	it	cs
  403700:	463b      	movcs	r3, r7
  403702:	9801      	ldr	r0, [sp, #4]
  403704:	f1b8 0f00 	cmp.w	r8, #0
  403708:	d050      	beq.n	4037ac <__sfvwrite_r+0xe8>
  40370a:	69e1      	ldr	r1, [r4, #28]
  40370c:	6a66      	ldr	r6, [r4, #36]	; 0x24
  40370e:	47b0      	blx	r6
  403710:	2800      	cmp	r0, #0
  403712:	dd71      	ble.n	4037f8 <__sfvwrite_r+0x134>
  403714:	f8da 3008 	ldr.w	r3, [sl, #8]
  403718:	1a1b      	subs	r3, r3, r0
  40371a:	4481      	add	r9, r0
  40371c:	ebc0 0808 	rsb	r8, r0, r8
  403720:	f8ca 3008 	str.w	r3, [sl, #8]
  403724:	2b00      	cmp	r3, #0
  403726:	d1e7      	bne.n	4036f8 <__sfvwrite_r+0x34>
  403728:	2000      	movs	r0, #0
  40372a:	b005      	add	sp, #20
  40372c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403730:	4621      	mov	r1, r4
  403732:	9801      	ldr	r0, [sp, #4]
  403734:	f7ff fb88 	bl	402e48 <__swsetup_r>
  403738:	2800      	cmp	r0, #0
  40373a:	f040 813a 	bne.w	4039b2 <__sfvwrite_r+0x2ee>
  40373e:	89a3      	ldrh	r3, [r4, #12]
  403740:	6835      	ldr	r5, [r6, #0]
  403742:	f003 0802 	and.w	r8, r3, #2
  403746:	fa1f f088 	uxth.w	r0, r8
  40374a:	2800      	cmp	r0, #0
  40374c:	d1cf      	bne.n	4036ee <__sfvwrite_r+0x2a>
  40374e:	f013 0901 	ands.w	r9, r3, #1
  403752:	d15b      	bne.n	40380c <__sfvwrite_r+0x148>
  403754:	464f      	mov	r7, r9
  403756:	9602      	str	r6, [sp, #8]
  403758:	b31f      	cbz	r7, 4037a2 <__sfvwrite_r+0xde>
  40375a:	059a      	lsls	r2, r3, #22
  40375c:	f8d4 8008 	ldr.w	r8, [r4, #8]
  403760:	d52c      	bpl.n	4037bc <__sfvwrite_r+0xf8>
  403762:	4547      	cmp	r7, r8
  403764:	46c2      	mov	sl, r8
  403766:	f0c0 80a4 	bcc.w	4038b2 <__sfvwrite_r+0x1ee>
  40376a:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40376e:	f040 80b1 	bne.w	4038d4 <__sfvwrite_r+0x210>
  403772:	6820      	ldr	r0, [r4, #0]
  403774:	4652      	mov	r2, sl
  403776:	4649      	mov	r1, r9
  403778:	f000 fdf4 	bl	404364 <memmove>
  40377c:	68a0      	ldr	r0, [r4, #8]
  40377e:	6823      	ldr	r3, [r4, #0]
  403780:	ebc8 0000 	rsb	r0, r8, r0
  403784:	4453      	add	r3, sl
  403786:	60a0      	str	r0, [r4, #8]
  403788:	6023      	str	r3, [r4, #0]
  40378a:	4638      	mov	r0, r7
  40378c:	9a02      	ldr	r2, [sp, #8]
  40378e:	6893      	ldr	r3, [r2, #8]
  403790:	1a1b      	subs	r3, r3, r0
  403792:	4481      	add	r9, r0
  403794:	1a3f      	subs	r7, r7, r0
  403796:	6093      	str	r3, [r2, #8]
  403798:	2b00      	cmp	r3, #0
  40379a:	d0c5      	beq.n	403728 <__sfvwrite_r+0x64>
  40379c:	89a3      	ldrh	r3, [r4, #12]
  40379e:	2f00      	cmp	r7, #0
  4037a0:	d1db      	bne.n	40375a <__sfvwrite_r+0x96>
  4037a2:	f8d5 9000 	ldr.w	r9, [r5]
  4037a6:	686f      	ldr	r7, [r5, #4]
  4037a8:	3508      	adds	r5, #8
  4037aa:	e7d5      	b.n	403758 <__sfvwrite_r+0x94>
  4037ac:	f8d5 9000 	ldr.w	r9, [r5]
  4037b0:	f8d5 8004 	ldr.w	r8, [r5, #4]
  4037b4:	3508      	adds	r5, #8
  4037b6:	e79f      	b.n	4036f8 <__sfvwrite_r+0x34>
  4037b8:	2000      	movs	r0, #0
  4037ba:	4770      	bx	lr
  4037bc:	6820      	ldr	r0, [r4, #0]
  4037be:	6923      	ldr	r3, [r4, #16]
  4037c0:	4298      	cmp	r0, r3
  4037c2:	d803      	bhi.n	4037cc <__sfvwrite_r+0x108>
  4037c4:	6961      	ldr	r1, [r4, #20]
  4037c6:	428f      	cmp	r7, r1
  4037c8:	f080 80b7 	bcs.w	40393a <__sfvwrite_r+0x276>
  4037cc:	45b8      	cmp	r8, r7
  4037ce:	bf28      	it	cs
  4037d0:	46b8      	movcs	r8, r7
  4037d2:	4642      	mov	r2, r8
  4037d4:	4649      	mov	r1, r9
  4037d6:	f000 fdc5 	bl	404364 <memmove>
  4037da:	68a3      	ldr	r3, [r4, #8]
  4037dc:	6822      	ldr	r2, [r4, #0]
  4037de:	ebc8 0303 	rsb	r3, r8, r3
  4037e2:	4442      	add	r2, r8
  4037e4:	60a3      	str	r3, [r4, #8]
  4037e6:	6022      	str	r2, [r4, #0]
  4037e8:	2b00      	cmp	r3, #0
  4037ea:	d149      	bne.n	403880 <__sfvwrite_r+0x1bc>
  4037ec:	4621      	mov	r1, r4
  4037ee:	9801      	ldr	r0, [sp, #4]
  4037f0:	f7ff fc42 	bl	403078 <_fflush_r>
  4037f4:	2800      	cmp	r0, #0
  4037f6:	d043      	beq.n	403880 <__sfvwrite_r+0x1bc>
  4037f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4037fc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403800:	f04f 30ff 	mov.w	r0, #4294967295
  403804:	81a3      	strh	r3, [r4, #12]
  403806:	b005      	add	sp, #20
  403808:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40380c:	4680      	mov	r8, r0
  40380e:	9002      	str	r0, [sp, #8]
  403810:	4682      	mov	sl, r0
  403812:	4681      	mov	r9, r0
  403814:	f1b9 0f00 	cmp.w	r9, #0
  403818:	d02a      	beq.n	403870 <__sfvwrite_r+0x1ac>
  40381a:	9b02      	ldr	r3, [sp, #8]
  40381c:	2b00      	cmp	r3, #0
  40381e:	d04c      	beq.n	4038ba <__sfvwrite_r+0x1f6>
  403820:	6820      	ldr	r0, [r4, #0]
  403822:	6923      	ldr	r3, [r4, #16]
  403824:	6962      	ldr	r2, [r4, #20]
  403826:	45c8      	cmp	r8, r9
  403828:	46c3      	mov	fp, r8
  40382a:	bf28      	it	cs
  40382c:	46cb      	movcs	fp, r9
  40382e:	4298      	cmp	r0, r3
  403830:	465f      	mov	r7, fp
  403832:	d904      	bls.n	40383e <__sfvwrite_r+0x17a>
  403834:	68a3      	ldr	r3, [r4, #8]
  403836:	4413      	add	r3, r2
  403838:	459b      	cmp	fp, r3
  40383a:	f300 8090 	bgt.w	40395e <__sfvwrite_r+0x29a>
  40383e:	4593      	cmp	fp, r2
  403840:	db20      	blt.n	403884 <__sfvwrite_r+0x1c0>
  403842:	4613      	mov	r3, r2
  403844:	6a67      	ldr	r7, [r4, #36]	; 0x24
  403846:	69e1      	ldr	r1, [r4, #28]
  403848:	9801      	ldr	r0, [sp, #4]
  40384a:	4652      	mov	r2, sl
  40384c:	47b8      	blx	r7
  40384e:	1e07      	subs	r7, r0, #0
  403850:	ddd2      	ble.n	4037f8 <__sfvwrite_r+0x134>
  403852:	ebb8 0807 	subs.w	r8, r8, r7
  403856:	d023      	beq.n	4038a0 <__sfvwrite_r+0x1dc>
  403858:	68b3      	ldr	r3, [r6, #8]
  40385a:	1bdb      	subs	r3, r3, r7
  40385c:	44ba      	add	sl, r7
  40385e:	ebc7 0909 	rsb	r9, r7, r9
  403862:	60b3      	str	r3, [r6, #8]
  403864:	2b00      	cmp	r3, #0
  403866:	f43f af5f 	beq.w	403728 <__sfvwrite_r+0x64>
  40386a:	f1b9 0f00 	cmp.w	r9, #0
  40386e:	d1d4      	bne.n	40381a <__sfvwrite_r+0x156>
  403870:	2300      	movs	r3, #0
  403872:	f8d5 a000 	ldr.w	sl, [r5]
  403876:	f8d5 9004 	ldr.w	r9, [r5, #4]
  40387a:	9302      	str	r3, [sp, #8]
  40387c:	3508      	adds	r5, #8
  40387e:	e7c9      	b.n	403814 <__sfvwrite_r+0x150>
  403880:	4640      	mov	r0, r8
  403882:	e783      	b.n	40378c <__sfvwrite_r+0xc8>
  403884:	465a      	mov	r2, fp
  403886:	4651      	mov	r1, sl
  403888:	f000 fd6c 	bl	404364 <memmove>
  40388c:	68a2      	ldr	r2, [r4, #8]
  40388e:	6823      	ldr	r3, [r4, #0]
  403890:	ebcb 0202 	rsb	r2, fp, r2
  403894:	445b      	add	r3, fp
  403896:	ebb8 0807 	subs.w	r8, r8, r7
  40389a:	60a2      	str	r2, [r4, #8]
  40389c:	6023      	str	r3, [r4, #0]
  40389e:	d1db      	bne.n	403858 <__sfvwrite_r+0x194>
  4038a0:	4621      	mov	r1, r4
  4038a2:	9801      	ldr	r0, [sp, #4]
  4038a4:	f7ff fbe8 	bl	403078 <_fflush_r>
  4038a8:	2800      	cmp	r0, #0
  4038aa:	d1a5      	bne.n	4037f8 <__sfvwrite_r+0x134>
  4038ac:	f8cd 8008 	str.w	r8, [sp, #8]
  4038b0:	e7d2      	b.n	403858 <__sfvwrite_r+0x194>
  4038b2:	6820      	ldr	r0, [r4, #0]
  4038b4:	46b8      	mov	r8, r7
  4038b6:	46ba      	mov	sl, r7
  4038b8:	e75c      	b.n	403774 <__sfvwrite_r+0xb0>
  4038ba:	464a      	mov	r2, r9
  4038bc:	210a      	movs	r1, #10
  4038be:	4650      	mov	r0, sl
  4038c0:	f000 fc66 	bl	404190 <memchr>
  4038c4:	2800      	cmp	r0, #0
  4038c6:	d06f      	beq.n	4039a8 <__sfvwrite_r+0x2e4>
  4038c8:	3001      	adds	r0, #1
  4038ca:	2301      	movs	r3, #1
  4038cc:	ebca 0800 	rsb	r8, sl, r0
  4038d0:	9302      	str	r3, [sp, #8]
  4038d2:	e7a5      	b.n	403820 <__sfvwrite_r+0x15c>
  4038d4:	6962      	ldr	r2, [r4, #20]
  4038d6:	6820      	ldr	r0, [r4, #0]
  4038d8:	6921      	ldr	r1, [r4, #16]
  4038da:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  4038de:	ebc1 0a00 	rsb	sl, r1, r0
  4038e2:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  4038e6:	f10a 0001 	add.w	r0, sl, #1
  4038ea:	ea4f 0868 	mov.w	r8, r8, asr #1
  4038ee:	4438      	add	r0, r7
  4038f0:	4540      	cmp	r0, r8
  4038f2:	4642      	mov	r2, r8
  4038f4:	bf84      	itt	hi
  4038f6:	4680      	movhi	r8, r0
  4038f8:	4642      	movhi	r2, r8
  4038fa:	055b      	lsls	r3, r3, #21
  4038fc:	d542      	bpl.n	403984 <__sfvwrite_r+0x2c0>
  4038fe:	4611      	mov	r1, r2
  403900:	9801      	ldr	r0, [sp, #4]
  403902:	f000 f945 	bl	403b90 <_malloc_r>
  403906:	4683      	mov	fp, r0
  403908:	2800      	cmp	r0, #0
  40390a:	d055      	beq.n	4039b8 <__sfvwrite_r+0x2f4>
  40390c:	4652      	mov	r2, sl
  40390e:	6921      	ldr	r1, [r4, #16]
  403910:	f000 fc8e 	bl	404230 <memcpy>
  403914:	89a3      	ldrh	r3, [r4, #12]
  403916:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  40391a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40391e:	81a3      	strh	r3, [r4, #12]
  403920:	ebca 0308 	rsb	r3, sl, r8
  403924:	eb0b 000a 	add.w	r0, fp, sl
  403928:	f8c4 8014 	str.w	r8, [r4, #20]
  40392c:	f8c4 b010 	str.w	fp, [r4, #16]
  403930:	6020      	str	r0, [r4, #0]
  403932:	60a3      	str	r3, [r4, #8]
  403934:	46b8      	mov	r8, r7
  403936:	46ba      	mov	sl, r7
  403938:	e71c      	b.n	403774 <__sfvwrite_r+0xb0>
  40393a:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
  40393e:	42bb      	cmp	r3, r7
  403940:	bf28      	it	cs
  403942:	463b      	movcs	r3, r7
  403944:	464a      	mov	r2, r9
  403946:	fb93 f3f1 	sdiv	r3, r3, r1
  40394a:	9801      	ldr	r0, [sp, #4]
  40394c:	6a66      	ldr	r6, [r4, #36]	; 0x24
  40394e:	fb01 f303 	mul.w	r3, r1, r3
  403952:	69e1      	ldr	r1, [r4, #28]
  403954:	47b0      	blx	r6
  403956:	2800      	cmp	r0, #0
  403958:	f73f af18 	bgt.w	40378c <__sfvwrite_r+0xc8>
  40395c:	e74c      	b.n	4037f8 <__sfvwrite_r+0x134>
  40395e:	461a      	mov	r2, r3
  403960:	4651      	mov	r1, sl
  403962:	9303      	str	r3, [sp, #12]
  403964:	f000 fcfe 	bl	404364 <memmove>
  403968:	6822      	ldr	r2, [r4, #0]
  40396a:	9b03      	ldr	r3, [sp, #12]
  40396c:	9801      	ldr	r0, [sp, #4]
  40396e:	441a      	add	r2, r3
  403970:	6022      	str	r2, [r4, #0]
  403972:	4621      	mov	r1, r4
  403974:	f7ff fb80 	bl	403078 <_fflush_r>
  403978:	9b03      	ldr	r3, [sp, #12]
  40397a:	2800      	cmp	r0, #0
  40397c:	f47f af3c 	bne.w	4037f8 <__sfvwrite_r+0x134>
  403980:	461f      	mov	r7, r3
  403982:	e766      	b.n	403852 <__sfvwrite_r+0x18e>
  403984:	9801      	ldr	r0, [sp, #4]
  403986:	f000 fd55 	bl	404434 <_realloc_r>
  40398a:	4683      	mov	fp, r0
  40398c:	2800      	cmp	r0, #0
  40398e:	d1c7      	bne.n	403920 <__sfvwrite_r+0x25c>
  403990:	9d01      	ldr	r5, [sp, #4]
  403992:	6921      	ldr	r1, [r4, #16]
  403994:	4628      	mov	r0, r5
  403996:	f7ff fdad 	bl	4034f4 <_free_r>
  40399a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40399e:	220c      	movs	r2, #12
  4039a0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4039a4:	602a      	str	r2, [r5, #0]
  4039a6:	e729      	b.n	4037fc <__sfvwrite_r+0x138>
  4039a8:	2301      	movs	r3, #1
  4039aa:	f109 0801 	add.w	r8, r9, #1
  4039ae:	9302      	str	r3, [sp, #8]
  4039b0:	e736      	b.n	403820 <__sfvwrite_r+0x15c>
  4039b2:	f04f 30ff 	mov.w	r0, #4294967295
  4039b6:	e6b8      	b.n	40372a <__sfvwrite_r+0x66>
  4039b8:	9a01      	ldr	r2, [sp, #4]
  4039ba:	230c      	movs	r3, #12
  4039bc:	6013      	str	r3, [r2, #0]
  4039be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4039c2:	e71b      	b.n	4037fc <__sfvwrite_r+0x138>
  4039c4:	7ffffc00 	.word	0x7ffffc00

004039c8 <_fwalk>:
  4039c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4039cc:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  4039d0:	d01b      	beq.n	403a0a <_fwalk+0x42>
  4039d2:	4688      	mov	r8, r1
  4039d4:	2600      	movs	r6, #0
  4039d6:	687d      	ldr	r5, [r7, #4]
  4039d8:	68bc      	ldr	r4, [r7, #8]
  4039da:	3d01      	subs	r5, #1
  4039dc:	d40f      	bmi.n	4039fe <_fwalk+0x36>
  4039de:	89a3      	ldrh	r3, [r4, #12]
  4039e0:	2b01      	cmp	r3, #1
  4039e2:	f105 35ff 	add.w	r5, r5, #4294967295
  4039e6:	d906      	bls.n	4039f6 <_fwalk+0x2e>
  4039e8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  4039ec:	3301      	adds	r3, #1
  4039ee:	4620      	mov	r0, r4
  4039f0:	d001      	beq.n	4039f6 <_fwalk+0x2e>
  4039f2:	47c0      	blx	r8
  4039f4:	4306      	orrs	r6, r0
  4039f6:	1c6b      	adds	r3, r5, #1
  4039f8:	f104 0468 	add.w	r4, r4, #104	; 0x68
  4039fc:	d1ef      	bne.n	4039de <_fwalk+0x16>
  4039fe:	683f      	ldr	r7, [r7, #0]
  403a00:	2f00      	cmp	r7, #0
  403a02:	d1e8      	bne.n	4039d6 <_fwalk+0xe>
  403a04:	4630      	mov	r0, r6
  403a06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403a0a:	463e      	mov	r6, r7
  403a0c:	4630      	mov	r0, r6
  403a0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403a12:	bf00      	nop

00403a14 <_fwalk_reent>:
  403a14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  403a18:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  403a1c:	d01f      	beq.n	403a5e <_fwalk_reent+0x4a>
  403a1e:	4688      	mov	r8, r1
  403a20:	4606      	mov	r6, r0
  403a22:	f04f 0900 	mov.w	r9, #0
  403a26:	687d      	ldr	r5, [r7, #4]
  403a28:	68bc      	ldr	r4, [r7, #8]
  403a2a:	3d01      	subs	r5, #1
  403a2c:	d411      	bmi.n	403a52 <_fwalk_reent+0x3e>
  403a2e:	89a3      	ldrh	r3, [r4, #12]
  403a30:	2b01      	cmp	r3, #1
  403a32:	f105 35ff 	add.w	r5, r5, #4294967295
  403a36:	d908      	bls.n	403a4a <_fwalk_reent+0x36>
  403a38:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  403a3c:	3301      	adds	r3, #1
  403a3e:	4621      	mov	r1, r4
  403a40:	4630      	mov	r0, r6
  403a42:	d002      	beq.n	403a4a <_fwalk_reent+0x36>
  403a44:	47c0      	blx	r8
  403a46:	ea49 0900 	orr.w	r9, r9, r0
  403a4a:	1c6b      	adds	r3, r5, #1
  403a4c:	f104 0468 	add.w	r4, r4, #104	; 0x68
  403a50:	d1ed      	bne.n	403a2e <_fwalk_reent+0x1a>
  403a52:	683f      	ldr	r7, [r7, #0]
  403a54:	2f00      	cmp	r7, #0
  403a56:	d1e6      	bne.n	403a26 <_fwalk_reent+0x12>
  403a58:	4648      	mov	r0, r9
  403a5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403a5e:	46b9      	mov	r9, r7
  403a60:	4648      	mov	r0, r9
  403a62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403a66:	bf00      	nop

00403a68 <iswspace>:
  403a68:	28ff      	cmp	r0, #255	; 0xff
  403a6a:	d807      	bhi.n	403a7c <iswspace+0x14>
  403a6c:	4b04      	ldr	r3, [pc, #16]	; (403a80 <iswspace+0x18>)
  403a6e:	681b      	ldr	r3, [r3, #0]
  403a70:	4418      	add	r0, r3
  403a72:	7840      	ldrb	r0, [r0, #1]
  403a74:	f000 0008 	and.w	r0, r0, #8
  403a78:	b2c0      	uxtb	r0, r0
  403a7a:	4770      	bx	lr
  403a7c:	2000      	movs	r0, #0
  403a7e:	4770      	bx	lr
  403a80:	2000043c 	.word	0x2000043c

00403a84 <__locale_charset>:
  403a84:	4800      	ldr	r0, [pc, #0]	; (403a88 <__locale_charset+0x4>)
  403a86:	4770      	bx	lr
  403a88:	20000440 	.word	0x20000440

00403a8c <__locale_mb_cur_max>:
  403a8c:	4b01      	ldr	r3, [pc, #4]	; (403a94 <__locale_mb_cur_max+0x8>)
  403a8e:	6818      	ldr	r0, [r3, #0]
  403a90:	4770      	bx	lr
  403a92:	bf00      	nop
  403a94:	20000460 	.word	0x20000460

00403a98 <__swhatbuf_r>:
  403a98:	b570      	push	{r4, r5, r6, lr}
  403a9a:	460d      	mov	r5, r1
  403a9c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403aa0:	2900      	cmp	r1, #0
  403aa2:	b090      	sub	sp, #64	; 0x40
  403aa4:	4614      	mov	r4, r2
  403aa6:	461e      	mov	r6, r3
  403aa8:	db14      	blt.n	403ad4 <__swhatbuf_r+0x3c>
  403aaa:	aa01      	add	r2, sp, #4
  403aac:	f001 fcb6 	bl	40541c <_fstat_r>
  403ab0:	2800      	cmp	r0, #0
  403ab2:	db0f      	blt.n	403ad4 <__swhatbuf_r+0x3c>
  403ab4:	9a02      	ldr	r2, [sp, #8]
  403ab6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  403aba:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  403abe:	fab2 f282 	clz	r2, r2
  403ac2:	0952      	lsrs	r2, r2, #5
  403ac4:	f44f 6380 	mov.w	r3, #1024	; 0x400
  403ac8:	f44f 6000 	mov.w	r0, #2048	; 0x800
  403acc:	6032      	str	r2, [r6, #0]
  403ace:	6023      	str	r3, [r4, #0]
  403ad0:	b010      	add	sp, #64	; 0x40
  403ad2:	bd70      	pop	{r4, r5, r6, pc}
  403ad4:	89a8      	ldrh	r0, [r5, #12]
  403ad6:	f000 0080 	and.w	r0, r0, #128	; 0x80
  403ada:	b282      	uxth	r2, r0
  403adc:	2000      	movs	r0, #0
  403ade:	6030      	str	r0, [r6, #0]
  403ae0:	b11a      	cbz	r2, 403aea <__swhatbuf_r+0x52>
  403ae2:	2340      	movs	r3, #64	; 0x40
  403ae4:	6023      	str	r3, [r4, #0]
  403ae6:	b010      	add	sp, #64	; 0x40
  403ae8:	bd70      	pop	{r4, r5, r6, pc}
  403aea:	f44f 6380 	mov.w	r3, #1024	; 0x400
  403aee:	4610      	mov	r0, r2
  403af0:	6023      	str	r3, [r4, #0]
  403af2:	b010      	add	sp, #64	; 0x40
  403af4:	bd70      	pop	{r4, r5, r6, pc}
  403af6:	bf00      	nop

00403af8 <__smakebuf_r>:
  403af8:	898a      	ldrh	r2, [r1, #12]
  403afa:	0792      	lsls	r2, r2, #30
  403afc:	460b      	mov	r3, r1
  403afe:	d506      	bpl.n	403b0e <__smakebuf_r+0x16>
  403b00:	f101 0243 	add.w	r2, r1, #67	; 0x43
  403b04:	2101      	movs	r1, #1
  403b06:	601a      	str	r2, [r3, #0]
  403b08:	611a      	str	r2, [r3, #16]
  403b0a:	6159      	str	r1, [r3, #20]
  403b0c:	4770      	bx	lr
  403b0e:	b5f0      	push	{r4, r5, r6, r7, lr}
  403b10:	b083      	sub	sp, #12
  403b12:	ab01      	add	r3, sp, #4
  403b14:	466a      	mov	r2, sp
  403b16:	460c      	mov	r4, r1
  403b18:	4605      	mov	r5, r0
  403b1a:	f7ff ffbd 	bl	403a98 <__swhatbuf_r>
  403b1e:	9900      	ldr	r1, [sp, #0]
  403b20:	4606      	mov	r6, r0
  403b22:	4628      	mov	r0, r5
  403b24:	f000 f834 	bl	403b90 <_malloc_r>
  403b28:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403b2c:	b1d0      	cbz	r0, 403b64 <__smakebuf_r+0x6c>
  403b2e:	9a01      	ldr	r2, [sp, #4]
  403b30:	4f12      	ldr	r7, [pc, #72]	; (403b7c <__smakebuf_r+0x84>)
  403b32:	9900      	ldr	r1, [sp, #0]
  403b34:	63ef      	str	r7, [r5, #60]	; 0x3c
  403b36:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  403b3a:	81a3      	strh	r3, [r4, #12]
  403b3c:	6020      	str	r0, [r4, #0]
  403b3e:	6120      	str	r0, [r4, #16]
  403b40:	6161      	str	r1, [r4, #20]
  403b42:	b91a      	cbnz	r2, 403b4c <__smakebuf_r+0x54>
  403b44:	4333      	orrs	r3, r6
  403b46:	81a3      	strh	r3, [r4, #12]
  403b48:	b003      	add	sp, #12
  403b4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403b4c:	4628      	mov	r0, r5
  403b4e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403b52:	f001 fc77 	bl	405444 <_isatty_r>
  403b56:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403b5a:	2800      	cmp	r0, #0
  403b5c:	d0f2      	beq.n	403b44 <__smakebuf_r+0x4c>
  403b5e:	f043 0301 	orr.w	r3, r3, #1
  403b62:	e7ef      	b.n	403b44 <__smakebuf_r+0x4c>
  403b64:	059a      	lsls	r2, r3, #22
  403b66:	d4ef      	bmi.n	403b48 <__smakebuf_r+0x50>
  403b68:	f104 0243 	add.w	r2, r4, #67	; 0x43
  403b6c:	f043 0302 	orr.w	r3, r3, #2
  403b70:	2101      	movs	r1, #1
  403b72:	81a3      	strh	r3, [r4, #12]
  403b74:	6022      	str	r2, [r4, #0]
  403b76:	6122      	str	r2, [r4, #16]
  403b78:	6161      	str	r1, [r4, #20]
  403b7a:	e7e5      	b.n	403b48 <__smakebuf_r+0x50>
  403b7c:	004030c9 	.word	0x004030c9

00403b80 <malloc>:
  403b80:	4b02      	ldr	r3, [pc, #8]	; (403b8c <malloc+0xc>)
  403b82:	4601      	mov	r1, r0
  403b84:	6818      	ldr	r0, [r3, #0]
  403b86:	f000 b803 	b.w	403b90 <_malloc_r>
  403b8a:	bf00      	nop
  403b8c:	20000438 	.word	0x20000438

00403b90 <_malloc_r>:
  403b90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403b94:	f101 050b 	add.w	r5, r1, #11
  403b98:	2d16      	cmp	r5, #22
  403b9a:	b083      	sub	sp, #12
  403b9c:	4606      	mov	r6, r0
  403b9e:	f240 809f 	bls.w	403ce0 <_malloc_r+0x150>
  403ba2:	f035 0507 	bics.w	r5, r5, #7
  403ba6:	f100 80bf 	bmi.w	403d28 <_malloc_r+0x198>
  403baa:	42a9      	cmp	r1, r5
  403bac:	f200 80bc 	bhi.w	403d28 <_malloc_r+0x198>
  403bb0:	f000 fc3c 	bl	40442c <__malloc_lock>
  403bb4:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
  403bb8:	f0c0 829c 	bcc.w	4040f4 <_malloc_r+0x564>
  403bbc:	0a6b      	lsrs	r3, r5, #9
  403bbe:	f000 80ba 	beq.w	403d36 <_malloc_r+0x1a6>
  403bc2:	2b04      	cmp	r3, #4
  403bc4:	f200 8183 	bhi.w	403ece <_malloc_r+0x33e>
  403bc8:	09a8      	lsrs	r0, r5, #6
  403bca:	f100 0e39 	add.w	lr, r0, #57	; 0x39
  403bce:	ea4f 034e 	mov.w	r3, lr, lsl #1
  403bd2:	3038      	adds	r0, #56	; 0x38
  403bd4:	4fc4      	ldr	r7, [pc, #784]	; (403ee8 <_malloc_r+0x358>)
  403bd6:	eb07 0383 	add.w	r3, r7, r3, lsl #2
  403bda:	f1a3 0108 	sub.w	r1, r3, #8
  403bde:	685c      	ldr	r4, [r3, #4]
  403be0:	42a1      	cmp	r1, r4
  403be2:	d107      	bne.n	403bf4 <_malloc_r+0x64>
  403be4:	e0ac      	b.n	403d40 <_malloc_r+0x1b0>
  403be6:	2a00      	cmp	r2, #0
  403be8:	f280 80ac 	bge.w	403d44 <_malloc_r+0x1b4>
  403bec:	68e4      	ldr	r4, [r4, #12]
  403bee:	42a1      	cmp	r1, r4
  403bf0:	f000 80a6 	beq.w	403d40 <_malloc_r+0x1b0>
  403bf4:	6863      	ldr	r3, [r4, #4]
  403bf6:	f023 0303 	bic.w	r3, r3, #3
  403bfa:	1b5a      	subs	r2, r3, r5
  403bfc:	2a0f      	cmp	r2, #15
  403bfe:	ddf2      	ble.n	403be6 <_malloc_r+0x56>
  403c00:	49b9      	ldr	r1, [pc, #740]	; (403ee8 <_malloc_r+0x358>)
  403c02:	693c      	ldr	r4, [r7, #16]
  403c04:	f101 0e08 	add.w	lr, r1, #8
  403c08:	4574      	cmp	r4, lr
  403c0a:	f000 81b3 	beq.w	403f74 <_malloc_r+0x3e4>
  403c0e:	6863      	ldr	r3, [r4, #4]
  403c10:	f023 0303 	bic.w	r3, r3, #3
  403c14:	1b5a      	subs	r2, r3, r5
  403c16:	2a0f      	cmp	r2, #15
  403c18:	f300 8199 	bgt.w	403f4e <_malloc_r+0x3be>
  403c1c:	2a00      	cmp	r2, #0
  403c1e:	f8c1 e014 	str.w	lr, [r1, #20]
  403c22:	f8c1 e010 	str.w	lr, [r1, #16]
  403c26:	f280 809e 	bge.w	403d66 <_malloc_r+0x1d6>
  403c2a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  403c2e:	f080 8167 	bcs.w	403f00 <_malloc_r+0x370>
  403c32:	08db      	lsrs	r3, r3, #3
  403c34:	f103 0c01 	add.w	ip, r3, #1
  403c38:	2201      	movs	r2, #1
  403c3a:	109b      	asrs	r3, r3, #2
  403c3c:	fa02 f303 	lsl.w	r3, r2, r3
  403c40:	684a      	ldr	r2, [r1, #4]
  403c42:	f851 803c 	ldr.w	r8, [r1, ip, lsl #3]
  403c46:	f8c4 8008 	str.w	r8, [r4, #8]
  403c4a:	eb01 09cc 	add.w	r9, r1, ip, lsl #3
  403c4e:	431a      	orrs	r2, r3
  403c50:	f1a9 0308 	sub.w	r3, r9, #8
  403c54:	60e3      	str	r3, [r4, #12]
  403c56:	604a      	str	r2, [r1, #4]
  403c58:	f841 403c 	str.w	r4, [r1, ip, lsl #3]
  403c5c:	f8c8 400c 	str.w	r4, [r8, #12]
  403c60:	1083      	asrs	r3, r0, #2
  403c62:	2401      	movs	r4, #1
  403c64:	409c      	lsls	r4, r3
  403c66:	4294      	cmp	r4, r2
  403c68:	f200 808a 	bhi.w	403d80 <_malloc_r+0x1f0>
  403c6c:	4214      	tst	r4, r2
  403c6e:	d106      	bne.n	403c7e <_malloc_r+0xee>
  403c70:	f020 0003 	bic.w	r0, r0, #3
  403c74:	0064      	lsls	r4, r4, #1
  403c76:	4214      	tst	r4, r2
  403c78:	f100 0004 	add.w	r0, r0, #4
  403c7c:	d0fa      	beq.n	403c74 <_malloc_r+0xe4>
  403c7e:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  403c82:	46cc      	mov	ip, r9
  403c84:	4680      	mov	r8, r0
  403c86:	f8dc 100c 	ldr.w	r1, [ip, #12]
  403c8a:	458c      	cmp	ip, r1
  403c8c:	d107      	bne.n	403c9e <_malloc_r+0x10e>
  403c8e:	e173      	b.n	403f78 <_malloc_r+0x3e8>
  403c90:	2a00      	cmp	r2, #0
  403c92:	f280 8181 	bge.w	403f98 <_malloc_r+0x408>
  403c96:	68c9      	ldr	r1, [r1, #12]
  403c98:	458c      	cmp	ip, r1
  403c9a:	f000 816d 	beq.w	403f78 <_malloc_r+0x3e8>
  403c9e:	684b      	ldr	r3, [r1, #4]
  403ca0:	f023 0303 	bic.w	r3, r3, #3
  403ca4:	1b5a      	subs	r2, r3, r5
  403ca6:	2a0f      	cmp	r2, #15
  403ca8:	ddf2      	ble.n	403c90 <_malloc_r+0x100>
  403caa:	460c      	mov	r4, r1
  403cac:	f8d1 c00c 	ldr.w	ip, [r1, #12]
  403cb0:	f854 8f08 	ldr.w	r8, [r4, #8]!
  403cb4:	194b      	adds	r3, r1, r5
  403cb6:	f045 0501 	orr.w	r5, r5, #1
  403cba:	604d      	str	r5, [r1, #4]
  403cbc:	f042 0101 	orr.w	r1, r2, #1
  403cc0:	f8c8 c00c 	str.w	ip, [r8, #12]
  403cc4:	4630      	mov	r0, r6
  403cc6:	f8cc 8008 	str.w	r8, [ip, #8]
  403cca:	617b      	str	r3, [r7, #20]
  403ccc:	613b      	str	r3, [r7, #16]
  403cce:	f8c3 e00c 	str.w	lr, [r3, #12]
  403cd2:	f8c3 e008 	str.w	lr, [r3, #8]
  403cd6:	6059      	str	r1, [r3, #4]
  403cd8:	509a      	str	r2, [r3, r2]
  403cda:	f000 fba9 	bl	404430 <__malloc_unlock>
  403cde:	e01f      	b.n	403d20 <_malloc_r+0x190>
  403ce0:	2910      	cmp	r1, #16
  403ce2:	d821      	bhi.n	403d28 <_malloc_r+0x198>
  403ce4:	f000 fba2 	bl	40442c <__malloc_lock>
  403ce8:	2510      	movs	r5, #16
  403cea:	2306      	movs	r3, #6
  403cec:	2002      	movs	r0, #2
  403cee:	4f7e      	ldr	r7, [pc, #504]	; (403ee8 <_malloc_r+0x358>)
  403cf0:	eb07 0383 	add.w	r3, r7, r3, lsl #2
  403cf4:	f1a3 0208 	sub.w	r2, r3, #8
  403cf8:	685c      	ldr	r4, [r3, #4]
  403cfa:	4294      	cmp	r4, r2
  403cfc:	f000 8145 	beq.w	403f8a <_malloc_r+0x3fa>
  403d00:	6863      	ldr	r3, [r4, #4]
  403d02:	68e1      	ldr	r1, [r4, #12]
  403d04:	68a5      	ldr	r5, [r4, #8]
  403d06:	f023 0303 	bic.w	r3, r3, #3
  403d0a:	4423      	add	r3, r4
  403d0c:	4630      	mov	r0, r6
  403d0e:	685a      	ldr	r2, [r3, #4]
  403d10:	60e9      	str	r1, [r5, #12]
  403d12:	f042 0201 	orr.w	r2, r2, #1
  403d16:	608d      	str	r5, [r1, #8]
  403d18:	605a      	str	r2, [r3, #4]
  403d1a:	f000 fb89 	bl	404430 <__malloc_unlock>
  403d1e:	3408      	adds	r4, #8
  403d20:	4620      	mov	r0, r4
  403d22:	b003      	add	sp, #12
  403d24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d28:	2400      	movs	r4, #0
  403d2a:	230c      	movs	r3, #12
  403d2c:	4620      	mov	r0, r4
  403d2e:	6033      	str	r3, [r6, #0]
  403d30:	b003      	add	sp, #12
  403d32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d36:	2380      	movs	r3, #128	; 0x80
  403d38:	f04f 0e40 	mov.w	lr, #64	; 0x40
  403d3c:	203f      	movs	r0, #63	; 0x3f
  403d3e:	e749      	b.n	403bd4 <_malloc_r+0x44>
  403d40:	4670      	mov	r0, lr
  403d42:	e75d      	b.n	403c00 <_malloc_r+0x70>
  403d44:	4423      	add	r3, r4
  403d46:	68e1      	ldr	r1, [r4, #12]
  403d48:	685a      	ldr	r2, [r3, #4]
  403d4a:	68a5      	ldr	r5, [r4, #8]
  403d4c:	f042 0201 	orr.w	r2, r2, #1
  403d50:	60e9      	str	r1, [r5, #12]
  403d52:	4630      	mov	r0, r6
  403d54:	608d      	str	r5, [r1, #8]
  403d56:	605a      	str	r2, [r3, #4]
  403d58:	f000 fb6a 	bl	404430 <__malloc_unlock>
  403d5c:	3408      	adds	r4, #8
  403d5e:	4620      	mov	r0, r4
  403d60:	b003      	add	sp, #12
  403d62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d66:	4423      	add	r3, r4
  403d68:	4630      	mov	r0, r6
  403d6a:	685a      	ldr	r2, [r3, #4]
  403d6c:	f042 0201 	orr.w	r2, r2, #1
  403d70:	605a      	str	r2, [r3, #4]
  403d72:	f000 fb5d 	bl	404430 <__malloc_unlock>
  403d76:	3408      	adds	r4, #8
  403d78:	4620      	mov	r0, r4
  403d7a:	b003      	add	sp, #12
  403d7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d80:	68bc      	ldr	r4, [r7, #8]
  403d82:	6863      	ldr	r3, [r4, #4]
  403d84:	f023 0803 	bic.w	r8, r3, #3
  403d88:	45a8      	cmp	r8, r5
  403d8a:	d304      	bcc.n	403d96 <_malloc_r+0x206>
  403d8c:	ebc5 0308 	rsb	r3, r5, r8
  403d90:	2b0f      	cmp	r3, #15
  403d92:	f300 808c 	bgt.w	403eae <_malloc_r+0x31e>
  403d96:	4b55      	ldr	r3, [pc, #340]	; (403eec <_malloc_r+0x35c>)
  403d98:	f8df 9160 	ldr.w	r9, [pc, #352]	; 403efc <_malloc_r+0x36c>
  403d9c:	681a      	ldr	r2, [r3, #0]
  403d9e:	f8d9 3000 	ldr.w	r3, [r9]
  403da2:	3301      	adds	r3, #1
  403da4:	442a      	add	r2, r5
  403da6:	eb04 0a08 	add.w	sl, r4, r8
  403daa:	f000 8160 	beq.w	40406e <_malloc_r+0x4de>
  403dae:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
  403db2:	320f      	adds	r2, #15
  403db4:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
  403db8:	f022 020f 	bic.w	r2, r2, #15
  403dbc:	4611      	mov	r1, r2
  403dbe:	4630      	mov	r0, r6
  403dc0:	9201      	str	r2, [sp, #4]
  403dc2:	f000 fdbb 	bl	40493c <_sbrk_r>
  403dc6:	f1b0 3fff 	cmp.w	r0, #4294967295
  403dca:	4683      	mov	fp, r0
  403dcc:	9a01      	ldr	r2, [sp, #4]
  403dce:	f000 8158 	beq.w	404082 <_malloc_r+0x4f2>
  403dd2:	4582      	cmp	sl, r0
  403dd4:	f200 80fc 	bhi.w	403fd0 <_malloc_r+0x440>
  403dd8:	4b45      	ldr	r3, [pc, #276]	; (403ef0 <_malloc_r+0x360>)
  403dda:	6819      	ldr	r1, [r3, #0]
  403ddc:	45da      	cmp	sl, fp
  403dde:	4411      	add	r1, r2
  403de0:	6019      	str	r1, [r3, #0]
  403de2:	f000 8153 	beq.w	40408c <_malloc_r+0x4fc>
  403de6:	f8d9 0000 	ldr.w	r0, [r9]
  403dea:	f8df e110 	ldr.w	lr, [pc, #272]	; 403efc <_malloc_r+0x36c>
  403dee:	3001      	adds	r0, #1
  403df0:	bf1b      	ittet	ne
  403df2:	ebca 0a0b 	rsbne	sl, sl, fp
  403df6:	4451      	addne	r1, sl
  403df8:	f8ce b000 	streq.w	fp, [lr]
  403dfc:	6019      	strne	r1, [r3, #0]
  403dfe:	f01b 0107 	ands.w	r1, fp, #7
  403e02:	f000 8117 	beq.w	404034 <_malloc_r+0x4a4>
  403e06:	f1c1 0008 	rsb	r0, r1, #8
  403e0a:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  403e0e:	4483      	add	fp, r0
  403e10:	3108      	adds	r1, #8
  403e12:	445a      	add	r2, fp
  403e14:	f3c2 020b 	ubfx	r2, r2, #0, #12
  403e18:	ebc2 0901 	rsb	r9, r2, r1
  403e1c:	4649      	mov	r1, r9
  403e1e:	4630      	mov	r0, r6
  403e20:	9301      	str	r3, [sp, #4]
  403e22:	f000 fd8b 	bl	40493c <_sbrk_r>
  403e26:	1c43      	adds	r3, r0, #1
  403e28:	9b01      	ldr	r3, [sp, #4]
  403e2a:	f000 813f 	beq.w	4040ac <_malloc_r+0x51c>
  403e2e:	ebcb 0200 	rsb	r2, fp, r0
  403e32:	444a      	add	r2, r9
  403e34:	f042 0201 	orr.w	r2, r2, #1
  403e38:	6819      	ldr	r1, [r3, #0]
  403e3a:	f8c7 b008 	str.w	fp, [r7, #8]
  403e3e:	4449      	add	r1, r9
  403e40:	42bc      	cmp	r4, r7
  403e42:	f8cb 2004 	str.w	r2, [fp, #4]
  403e46:	6019      	str	r1, [r3, #0]
  403e48:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 403ef0 <_malloc_r+0x360>
  403e4c:	d016      	beq.n	403e7c <_malloc_r+0x2ec>
  403e4e:	f1b8 0f0f 	cmp.w	r8, #15
  403e52:	f240 80fd 	bls.w	404050 <_malloc_r+0x4c0>
  403e56:	6862      	ldr	r2, [r4, #4]
  403e58:	f1a8 030c 	sub.w	r3, r8, #12
  403e5c:	f023 0307 	bic.w	r3, r3, #7
  403e60:	18e0      	adds	r0, r4, r3
  403e62:	f002 0201 	and.w	r2, r2, #1
  403e66:	f04f 0e05 	mov.w	lr, #5
  403e6a:	431a      	orrs	r2, r3
  403e6c:	2b0f      	cmp	r3, #15
  403e6e:	6062      	str	r2, [r4, #4]
  403e70:	f8c0 e004 	str.w	lr, [r0, #4]
  403e74:	f8c0 e008 	str.w	lr, [r0, #8]
  403e78:	f200 811c 	bhi.w	4040b4 <_malloc_r+0x524>
  403e7c:	4b1d      	ldr	r3, [pc, #116]	; (403ef4 <_malloc_r+0x364>)
  403e7e:	68bc      	ldr	r4, [r7, #8]
  403e80:	681a      	ldr	r2, [r3, #0]
  403e82:	4291      	cmp	r1, r2
  403e84:	bf88      	it	hi
  403e86:	6019      	strhi	r1, [r3, #0]
  403e88:	4b1b      	ldr	r3, [pc, #108]	; (403ef8 <_malloc_r+0x368>)
  403e8a:	681a      	ldr	r2, [r3, #0]
  403e8c:	4291      	cmp	r1, r2
  403e8e:	6862      	ldr	r2, [r4, #4]
  403e90:	bf88      	it	hi
  403e92:	6019      	strhi	r1, [r3, #0]
  403e94:	f022 0203 	bic.w	r2, r2, #3
  403e98:	4295      	cmp	r5, r2
  403e9a:	eba2 0305 	sub.w	r3, r2, r5
  403e9e:	d801      	bhi.n	403ea4 <_malloc_r+0x314>
  403ea0:	2b0f      	cmp	r3, #15
  403ea2:	dc04      	bgt.n	403eae <_malloc_r+0x31e>
  403ea4:	4630      	mov	r0, r6
  403ea6:	f000 fac3 	bl	404430 <__malloc_unlock>
  403eaa:	2400      	movs	r4, #0
  403eac:	e738      	b.n	403d20 <_malloc_r+0x190>
  403eae:	1962      	adds	r2, r4, r5
  403eb0:	f043 0301 	orr.w	r3, r3, #1
  403eb4:	f045 0501 	orr.w	r5, r5, #1
  403eb8:	6065      	str	r5, [r4, #4]
  403eba:	4630      	mov	r0, r6
  403ebc:	60ba      	str	r2, [r7, #8]
  403ebe:	6053      	str	r3, [r2, #4]
  403ec0:	f000 fab6 	bl	404430 <__malloc_unlock>
  403ec4:	3408      	adds	r4, #8
  403ec6:	4620      	mov	r0, r4
  403ec8:	b003      	add	sp, #12
  403eca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403ece:	2b14      	cmp	r3, #20
  403ed0:	d971      	bls.n	403fb6 <_malloc_r+0x426>
  403ed2:	2b54      	cmp	r3, #84	; 0x54
  403ed4:	f200 80a4 	bhi.w	404020 <_malloc_r+0x490>
  403ed8:	0b28      	lsrs	r0, r5, #12
  403eda:	f100 0e6f 	add.w	lr, r0, #111	; 0x6f
  403ede:	ea4f 034e 	mov.w	r3, lr, lsl #1
  403ee2:	306e      	adds	r0, #110	; 0x6e
  403ee4:	e676      	b.n	403bd4 <_malloc_r+0x44>
  403ee6:	bf00      	nop
  403ee8:	20000464 	.word	0x20000464
  403eec:	20000958 	.word	0x20000958
  403ef0:	2000095c 	.word	0x2000095c
  403ef4:	20000954 	.word	0x20000954
  403ef8:	20000950 	.word	0x20000950
  403efc:	20000870 	.word	0x20000870
  403f00:	0a5a      	lsrs	r2, r3, #9
  403f02:	2a04      	cmp	r2, #4
  403f04:	d95e      	bls.n	403fc4 <_malloc_r+0x434>
  403f06:	2a14      	cmp	r2, #20
  403f08:	f200 80b3 	bhi.w	404072 <_malloc_r+0x4e2>
  403f0c:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  403f10:	0049      	lsls	r1, r1, #1
  403f12:	325b      	adds	r2, #91	; 0x5b
  403f14:	eb07 0c81 	add.w	ip, r7, r1, lsl #2
  403f18:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
  403f1c:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 4040fc <_malloc_r+0x56c>
  403f20:	f1ac 0c08 	sub.w	ip, ip, #8
  403f24:	458c      	cmp	ip, r1
  403f26:	f000 8088 	beq.w	40403a <_malloc_r+0x4aa>
  403f2a:	684a      	ldr	r2, [r1, #4]
  403f2c:	f022 0203 	bic.w	r2, r2, #3
  403f30:	4293      	cmp	r3, r2
  403f32:	d202      	bcs.n	403f3a <_malloc_r+0x3aa>
  403f34:	6889      	ldr	r1, [r1, #8]
  403f36:	458c      	cmp	ip, r1
  403f38:	d1f7      	bne.n	403f2a <_malloc_r+0x39a>
  403f3a:	f8d1 c00c 	ldr.w	ip, [r1, #12]
  403f3e:	687a      	ldr	r2, [r7, #4]
  403f40:	f8c4 c00c 	str.w	ip, [r4, #12]
  403f44:	60a1      	str	r1, [r4, #8]
  403f46:	f8cc 4008 	str.w	r4, [ip, #8]
  403f4a:	60cc      	str	r4, [r1, #12]
  403f4c:	e688      	b.n	403c60 <_malloc_r+0xd0>
  403f4e:	1963      	adds	r3, r4, r5
  403f50:	f042 0701 	orr.w	r7, r2, #1
  403f54:	f045 0501 	orr.w	r5, r5, #1
  403f58:	6065      	str	r5, [r4, #4]
  403f5a:	4630      	mov	r0, r6
  403f5c:	614b      	str	r3, [r1, #20]
  403f5e:	610b      	str	r3, [r1, #16]
  403f60:	f8c3 e00c 	str.w	lr, [r3, #12]
  403f64:	f8c3 e008 	str.w	lr, [r3, #8]
  403f68:	605f      	str	r7, [r3, #4]
  403f6a:	509a      	str	r2, [r3, r2]
  403f6c:	3408      	adds	r4, #8
  403f6e:	f000 fa5f 	bl	404430 <__malloc_unlock>
  403f72:	e6d5      	b.n	403d20 <_malloc_r+0x190>
  403f74:	684a      	ldr	r2, [r1, #4]
  403f76:	e673      	b.n	403c60 <_malloc_r+0xd0>
  403f78:	f108 0801 	add.w	r8, r8, #1
  403f7c:	f018 0f03 	tst.w	r8, #3
  403f80:	f10c 0c08 	add.w	ip, ip, #8
  403f84:	f47f ae7f 	bne.w	403c86 <_malloc_r+0xf6>
  403f88:	e030      	b.n	403fec <_malloc_r+0x45c>
  403f8a:	68dc      	ldr	r4, [r3, #12]
  403f8c:	42a3      	cmp	r3, r4
  403f8e:	bf08      	it	eq
  403f90:	3002      	addeq	r0, #2
  403f92:	f43f ae35 	beq.w	403c00 <_malloc_r+0x70>
  403f96:	e6b3      	b.n	403d00 <_malloc_r+0x170>
  403f98:	440b      	add	r3, r1
  403f9a:	460c      	mov	r4, r1
  403f9c:	685a      	ldr	r2, [r3, #4]
  403f9e:	68c9      	ldr	r1, [r1, #12]
  403fa0:	f854 5f08 	ldr.w	r5, [r4, #8]!
  403fa4:	f042 0201 	orr.w	r2, r2, #1
  403fa8:	605a      	str	r2, [r3, #4]
  403faa:	4630      	mov	r0, r6
  403fac:	60e9      	str	r1, [r5, #12]
  403fae:	608d      	str	r5, [r1, #8]
  403fb0:	f000 fa3e 	bl	404430 <__malloc_unlock>
  403fb4:	e6b4      	b.n	403d20 <_malloc_r+0x190>
  403fb6:	f103 0e5c 	add.w	lr, r3, #92	; 0x5c
  403fba:	f103 005b 	add.w	r0, r3, #91	; 0x5b
  403fbe:	ea4f 034e 	mov.w	r3, lr, lsl #1
  403fc2:	e607      	b.n	403bd4 <_malloc_r+0x44>
  403fc4:	099a      	lsrs	r2, r3, #6
  403fc6:	f102 0139 	add.w	r1, r2, #57	; 0x39
  403fca:	0049      	lsls	r1, r1, #1
  403fcc:	3238      	adds	r2, #56	; 0x38
  403fce:	e7a1      	b.n	403f14 <_malloc_r+0x384>
  403fd0:	42bc      	cmp	r4, r7
  403fd2:	4b4a      	ldr	r3, [pc, #296]	; (4040fc <_malloc_r+0x56c>)
  403fd4:	f43f af00 	beq.w	403dd8 <_malloc_r+0x248>
  403fd8:	689c      	ldr	r4, [r3, #8]
  403fda:	6862      	ldr	r2, [r4, #4]
  403fdc:	f022 0203 	bic.w	r2, r2, #3
  403fe0:	e75a      	b.n	403e98 <_malloc_r+0x308>
  403fe2:	f859 3908 	ldr.w	r3, [r9], #-8
  403fe6:	4599      	cmp	r9, r3
  403fe8:	f040 8082 	bne.w	4040f0 <_malloc_r+0x560>
  403fec:	f010 0f03 	tst.w	r0, #3
  403ff0:	f100 30ff 	add.w	r0, r0, #4294967295
  403ff4:	d1f5      	bne.n	403fe2 <_malloc_r+0x452>
  403ff6:	687b      	ldr	r3, [r7, #4]
  403ff8:	ea23 0304 	bic.w	r3, r3, r4
  403ffc:	607b      	str	r3, [r7, #4]
  403ffe:	0064      	lsls	r4, r4, #1
  404000:	429c      	cmp	r4, r3
  404002:	f63f aebd 	bhi.w	403d80 <_malloc_r+0x1f0>
  404006:	2c00      	cmp	r4, #0
  404008:	f43f aeba 	beq.w	403d80 <_malloc_r+0x1f0>
  40400c:	421c      	tst	r4, r3
  40400e:	4640      	mov	r0, r8
  404010:	f47f ae35 	bne.w	403c7e <_malloc_r+0xee>
  404014:	0064      	lsls	r4, r4, #1
  404016:	421c      	tst	r4, r3
  404018:	f100 0004 	add.w	r0, r0, #4
  40401c:	d0fa      	beq.n	404014 <_malloc_r+0x484>
  40401e:	e62e      	b.n	403c7e <_malloc_r+0xee>
  404020:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404024:	d818      	bhi.n	404058 <_malloc_r+0x4c8>
  404026:	0be8      	lsrs	r0, r5, #15
  404028:	f100 0e78 	add.w	lr, r0, #120	; 0x78
  40402c:	ea4f 034e 	mov.w	r3, lr, lsl #1
  404030:	3077      	adds	r0, #119	; 0x77
  404032:	e5cf      	b.n	403bd4 <_malloc_r+0x44>
  404034:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404038:	e6eb      	b.n	403e12 <_malloc_r+0x282>
  40403a:	2101      	movs	r1, #1
  40403c:	f8d8 3004 	ldr.w	r3, [r8, #4]
  404040:	1092      	asrs	r2, r2, #2
  404042:	fa01 f202 	lsl.w	r2, r1, r2
  404046:	431a      	orrs	r2, r3
  404048:	f8c8 2004 	str.w	r2, [r8, #4]
  40404c:	4661      	mov	r1, ip
  40404e:	e777      	b.n	403f40 <_malloc_r+0x3b0>
  404050:	2301      	movs	r3, #1
  404052:	f8cb 3004 	str.w	r3, [fp, #4]
  404056:	e725      	b.n	403ea4 <_malloc_r+0x314>
  404058:	f240 5254 	movw	r2, #1364	; 0x554
  40405c:	4293      	cmp	r3, r2
  40405e:	d820      	bhi.n	4040a2 <_malloc_r+0x512>
  404060:	0ca8      	lsrs	r0, r5, #18
  404062:	f100 0e7d 	add.w	lr, r0, #125	; 0x7d
  404066:	ea4f 034e 	mov.w	r3, lr, lsl #1
  40406a:	307c      	adds	r0, #124	; 0x7c
  40406c:	e5b2      	b.n	403bd4 <_malloc_r+0x44>
  40406e:	3210      	adds	r2, #16
  404070:	e6a4      	b.n	403dbc <_malloc_r+0x22c>
  404072:	2a54      	cmp	r2, #84	; 0x54
  404074:	d826      	bhi.n	4040c4 <_malloc_r+0x534>
  404076:	0b1a      	lsrs	r2, r3, #12
  404078:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  40407c:	0049      	lsls	r1, r1, #1
  40407e:	326e      	adds	r2, #110	; 0x6e
  404080:	e748      	b.n	403f14 <_malloc_r+0x384>
  404082:	68bc      	ldr	r4, [r7, #8]
  404084:	6862      	ldr	r2, [r4, #4]
  404086:	f022 0203 	bic.w	r2, r2, #3
  40408a:	e705      	b.n	403e98 <_malloc_r+0x308>
  40408c:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404090:	2800      	cmp	r0, #0
  404092:	f47f aea8 	bne.w	403de6 <_malloc_r+0x256>
  404096:	4442      	add	r2, r8
  404098:	68bb      	ldr	r3, [r7, #8]
  40409a:	f042 0201 	orr.w	r2, r2, #1
  40409e:	605a      	str	r2, [r3, #4]
  4040a0:	e6ec      	b.n	403e7c <_malloc_r+0x2ec>
  4040a2:	23fe      	movs	r3, #254	; 0xfe
  4040a4:	f04f 0e7f 	mov.w	lr, #127	; 0x7f
  4040a8:	207e      	movs	r0, #126	; 0x7e
  4040aa:	e593      	b.n	403bd4 <_malloc_r+0x44>
  4040ac:	2201      	movs	r2, #1
  4040ae:	f04f 0900 	mov.w	r9, #0
  4040b2:	e6c1      	b.n	403e38 <_malloc_r+0x2a8>
  4040b4:	f104 0108 	add.w	r1, r4, #8
  4040b8:	4630      	mov	r0, r6
  4040ba:	f7ff fa1b 	bl	4034f4 <_free_r>
  4040be:	f8d9 1000 	ldr.w	r1, [r9]
  4040c2:	e6db      	b.n	403e7c <_malloc_r+0x2ec>
  4040c4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4040c8:	d805      	bhi.n	4040d6 <_malloc_r+0x546>
  4040ca:	0bda      	lsrs	r2, r3, #15
  4040cc:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4040d0:	0049      	lsls	r1, r1, #1
  4040d2:	3277      	adds	r2, #119	; 0x77
  4040d4:	e71e      	b.n	403f14 <_malloc_r+0x384>
  4040d6:	f240 5154 	movw	r1, #1364	; 0x554
  4040da:	428a      	cmp	r2, r1
  4040dc:	d805      	bhi.n	4040ea <_malloc_r+0x55a>
  4040de:	0c9a      	lsrs	r2, r3, #18
  4040e0:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4040e4:	0049      	lsls	r1, r1, #1
  4040e6:	327c      	adds	r2, #124	; 0x7c
  4040e8:	e714      	b.n	403f14 <_malloc_r+0x384>
  4040ea:	21fe      	movs	r1, #254	; 0xfe
  4040ec:	227e      	movs	r2, #126	; 0x7e
  4040ee:	e711      	b.n	403f14 <_malloc_r+0x384>
  4040f0:	687b      	ldr	r3, [r7, #4]
  4040f2:	e784      	b.n	403ffe <_malloc_r+0x46e>
  4040f4:	08e8      	lsrs	r0, r5, #3
  4040f6:	1c43      	adds	r3, r0, #1
  4040f8:	005b      	lsls	r3, r3, #1
  4040fa:	e5f8      	b.n	403cee <_malloc_r+0x15e>
  4040fc:	20000464 	.word	0x20000464

00404100 <_mbrtowc_r>:
  404100:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  404104:	b083      	sub	sp, #12
  404106:	4605      	mov	r5, r0
  404108:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  40410a:	4614      	mov	r4, r2
  40410c:	b1b2      	cbz	r2, 40413c <_mbrtowc_r+0x3c>
  40410e:	4698      	mov	r8, r3
  404110:	4b10      	ldr	r3, [pc, #64]	; (404154 <_mbrtowc_r+0x54>)
  404112:	460f      	mov	r7, r1
  404114:	f8d3 9000 	ldr.w	r9, [r3]
  404118:	f7ff fcb4 	bl	403a84 <__locale_charset>
  40411c:	4643      	mov	r3, r8
  40411e:	e88d 0041 	stmia.w	sp, {r0, r6}
  404122:	4622      	mov	r2, r4
  404124:	4639      	mov	r1, r7
  404126:	4628      	mov	r0, r5
  404128:	47c8      	blx	r9
  40412a:	1c43      	adds	r3, r0, #1
  40412c:	d103      	bne.n	404136 <_mbrtowc_r+0x36>
  40412e:	2200      	movs	r2, #0
  404130:	238a      	movs	r3, #138	; 0x8a
  404132:	6032      	str	r2, [r6, #0]
  404134:	602b      	str	r3, [r5, #0]
  404136:	b003      	add	sp, #12
  404138:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40413c:	4b05      	ldr	r3, [pc, #20]	; (404154 <_mbrtowc_r+0x54>)
  40413e:	681f      	ldr	r7, [r3, #0]
  404140:	f7ff fca0 	bl	403a84 <__locale_charset>
  404144:	4621      	mov	r1, r4
  404146:	e88d 0041 	stmia.w	sp, {r0, r6}
  40414a:	2301      	movs	r3, #1
  40414c:	4a02      	ldr	r2, [pc, #8]	; (404158 <_mbrtowc_r+0x58>)
  40414e:	4628      	mov	r0, r5
  404150:	47b8      	blx	r7
  404152:	e7ea      	b.n	40412a <_mbrtowc_r+0x2a>
  404154:	20000874 	.word	0x20000874
  404158:	00405b88 	.word	0x00405b88

0040415c <__ascii_mbtowc>:
  40415c:	b082      	sub	sp, #8
  40415e:	b149      	cbz	r1, 404174 <__ascii_mbtowc+0x18>
  404160:	b15a      	cbz	r2, 40417a <__ascii_mbtowc+0x1e>
  404162:	b16b      	cbz	r3, 404180 <__ascii_mbtowc+0x24>
  404164:	7813      	ldrb	r3, [r2, #0]
  404166:	600b      	str	r3, [r1, #0]
  404168:	7812      	ldrb	r2, [r2, #0]
  40416a:	1c10      	adds	r0, r2, #0
  40416c:	bf18      	it	ne
  40416e:	2001      	movne	r0, #1
  404170:	b002      	add	sp, #8
  404172:	4770      	bx	lr
  404174:	a901      	add	r1, sp, #4
  404176:	2a00      	cmp	r2, #0
  404178:	d1f3      	bne.n	404162 <__ascii_mbtowc+0x6>
  40417a:	4610      	mov	r0, r2
  40417c:	b002      	add	sp, #8
  40417e:	4770      	bx	lr
  404180:	f06f 0001 	mvn.w	r0, #1
  404184:	e7f4      	b.n	404170 <__ascii_mbtowc+0x14>
  404186:	bf00      	nop
	...

00404190 <memchr>:
  404190:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404194:	2a10      	cmp	r2, #16
  404196:	db2b      	blt.n	4041f0 <memchr+0x60>
  404198:	f010 0f07 	tst.w	r0, #7
  40419c:	d008      	beq.n	4041b0 <memchr+0x20>
  40419e:	f810 3b01 	ldrb.w	r3, [r0], #1
  4041a2:	3a01      	subs	r2, #1
  4041a4:	428b      	cmp	r3, r1
  4041a6:	d02d      	beq.n	404204 <memchr+0x74>
  4041a8:	f010 0f07 	tst.w	r0, #7
  4041ac:	b342      	cbz	r2, 404200 <memchr+0x70>
  4041ae:	d1f6      	bne.n	40419e <memchr+0xe>
  4041b0:	b4f0      	push	{r4, r5, r6, r7}
  4041b2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  4041b6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  4041ba:	f022 0407 	bic.w	r4, r2, #7
  4041be:	f07f 0700 	mvns.w	r7, #0
  4041c2:	2300      	movs	r3, #0
  4041c4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  4041c8:	3c08      	subs	r4, #8
  4041ca:	ea85 0501 	eor.w	r5, r5, r1
  4041ce:	ea86 0601 	eor.w	r6, r6, r1
  4041d2:	fa85 f547 	uadd8	r5, r5, r7
  4041d6:	faa3 f587 	sel	r5, r3, r7
  4041da:	fa86 f647 	uadd8	r6, r6, r7
  4041de:	faa5 f687 	sel	r6, r5, r7
  4041e2:	b98e      	cbnz	r6, 404208 <memchr+0x78>
  4041e4:	d1ee      	bne.n	4041c4 <memchr+0x34>
  4041e6:	bcf0      	pop	{r4, r5, r6, r7}
  4041e8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4041ec:	f002 0207 	and.w	r2, r2, #7
  4041f0:	b132      	cbz	r2, 404200 <memchr+0x70>
  4041f2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4041f6:	3a01      	subs	r2, #1
  4041f8:	ea83 0301 	eor.w	r3, r3, r1
  4041fc:	b113      	cbz	r3, 404204 <memchr+0x74>
  4041fe:	d1f8      	bne.n	4041f2 <memchr+0x62>
  404200:	2000      	movs	r0, #0
  404202:	4770      	bx	lr
  404204:	3801      	subs	r0, #1
  404206:	4770      	bx	lr
  404208:	2d00      	cmp	r5, #0
  40420a:	bf06      	itte	eq
  40420c:	4635      	moveq	r5, r6
  40420e:	3803      	subeq	r0, #3
  404210:	3807      	subne	r0, #7
  404212:	f015 0f01 	tst.w	r5, #1
  404216:	d107      	bne.n	404228 <memchr+0x98>
  404218:	3001      	adds	r0, #1
  40421a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40421e:	bf02      	ittt	eq
  404220:	3001      	addeq	r0, #1
  404222:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404226:	3001      	addeq	r0, #1
  404228:	bcf0      	pop	{r4, r5, r6, r7}
  40422a:	3801      	subs	r0, #1
  40422c:	4770      	bx	lr
  40422e:	bf00      	nop

00404230 <memcpy>:
  404230:	4684      	mov	ip, r0
  404232:	ea41 0300 	orr.w	r3, r1, r0
  404236:	f013 0303 	ands.w	r3, r3, #3
  40423a:	d16d      	bne.n	404318 <memcpy+0xe8>
  40423c:	3a40      	subs	r2, #64	; 0x40
  40423e:	d341      	bcc.n	4042c4 <memcpy+0x94>
  404240:	f851 3b04 	ldr.w	r3, [r1], #4
  404244:	f840 3b04 	str.w	r3, [r0], #4
  404248:	f851 3b04 	ldr.w	r3, [r1], #4
  40424c:	f840 3b04 	str.w	r3, [r0], #4
  404250:	f851 3b04 	ldr.w	r3, [r1], #4
  404254:	f840 3b04 	str.w	r3, [r0], #4
  404258:	f851 3b04 	ldr.w	r3, [r1], #4
  40425c:	f840 3b04 	str.w	r3, [r0], #4
  404260:	f851 3b04 	ldr.w	r3, [r1], #4
  404264:	f840 3b04 	str.w	r3, [r0], #4
  404268:	f851 3b04 	ldr.w	r3, [r1], #4
  40426c:	f840 3b04 	str.w	r3, [r0], #4
  404270:	f851 3b04 	ldr.w	r3, [r1], #4
  404274:	f840 3b04 	str.w	r3, [r0], #4
  404278:	f851 3b04 	ldr.w	r3, [r1], #4
  40427c:	f840 3b04 	str.w	r3, [r0], #4
  404280:	f851 3b04 	ldr.w	r3, [r1], #4
  404284:	f840 3b04 	str.w	r3, [r0], #4
  404288:	f851 3b04 	ldr.w	r3, [r1], #4
  40428c:	f840 3b04 	str.w	r3, [r0], #4
  404290:	f851 3b04 	ldr.w	r3, [r1], #4
  404294:	f840 3b04 	str.w	r3, [r0], #4
  404298:	f851 3b04 	ldr.w	r3, [r1], #4
  40429c:	f840 3b04 	str.w	r3, [r0], #4
  4042a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4042a4:	f840 3b04 	str.w	r3, [r0], #4
  4042a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4042ac:	f840 3b04 	str.w	r3, [r0], #4
  4042b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4042b4:	f840 3b04 	str.w	r3, [r0], #4
  4042b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4042bc:	f840 3b04 	str.w	r3, [r0], #4
  4042c0:	3a40      	subs	r2, #64	; 0x40
  4042c2:	d2bd      	bcs.n	404240 <memcpy+0x10>
  4042c4:	3230      	adds	r2, #48	; 0x30
  4042c6:	d311      	bcc.n	4042ec <memcpy+0xbc>
  4042c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4042cc:	f840 3b04 	str.w	r3, [r0], #4
  4042d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4042d4:	f840 3b04 	str.w	r3, [r0], #4
  4042d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4042dc:	f840 3b04 	str.w	r3, [r0], #4
  4042e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4042e4:	f840 3b04 	str.w	r3, [r0], #4
  4042e8:	3a10      	subs	r2, #16
  4042ea:	d2ed      	bcs.n	4042c8 <memcpy+0x98>
  4042ec:	320c      	adds	r2, #12
  4042ee:	d305      	bcc.n	4042fc <memcpy+0xcc>
  4042f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4042f4:	f840 3b04 	str.w	r3, [r0], #4
  4042f8:	3a04      	subs	r2, #4
  4042fa:	d2f9      	bcs.n	4042f0 <memcpy+0xc0>
  4042fc:	3204      	adds	r2, #4
  4042fe:	d008      	beq.n	404312 <memcpy+0xe2>
  404300:	07d2      	lsls	r2, r2, #31
  404302:	bf1c      	itt	ne
  404304:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404308:	f800 3b01 	strbne.w	r3, [r0], #1
  40430c:	d301      	bcc.n	404312 <memcpy+0xe2>
  40430e:	880b      	ldrh	r3, [r1, #0]
  404310:	8003      	strh	r3, [r0, #0]
  404312:	4660      	mov	r0, ip
  404314:	4770      	bx	lr
  404316:	bf00      	nop
  404318:	2a08      	cmp	r2, #8
  40431a:	d313      	bcc.n	404344 <memcpy+0x114>
  40431c:	078b      	lsls	r3, r1, #30
  40431e:	d08d      	beq.n	40423c <memcpy+0xc>
  404320:	f010 0303 	ands.w	r3, r0, #3
  404324:	d08a      	beq.n	40423c <memcpy+0xc>
  404326:	f1c3 0304 	rsb	r3, r3, #4
  40432a:	1ad2      	subs	r2, r2, r3
  40432c:	07db      	lsls	r3, r3, #31
  40432e:	bf1c      	itt	ne
  404330:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404334:	f800 3b01 	strbne.w	r3, [r0], #1
  404338:	d380      	bcc.n	40423c <memcpy+0xc>
  40433a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40433e:	f820 3b02 	strh.w	r3, [r0], #2
  404342:	e77b      	b.n	40423c <memcpy+0xc>
  404344:	3a04      	subs	r2, #4
  404346:	d3d9      	bcc.n	4042fc <memcpy+0xcc>
  404348:	3a01      	subs	r2, #1
  40434a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40434e:	f800 3b01 	strb.w	r3, [r0], #1
  404352:	d2f9      	bcs.n	404348 <memcpy+0x118>
  404354:	780b      	ldrb	r3, [r1, #0]
  404356:	7003      	strb	r3, [r0, #0]
  404358:	784b      	ldrb	r3, [r1, #1]
  40435a:	7043      	strb	r3, [r0, #1]
  40435c:	788b      	ldrb	r3, [r1, #2]
  40435e:	7083      	strb	r3, [r0, #2]
  404360:	4660      	mov	r0, ip
  404362:	4770      	bx	lr

00404364 <memmove>:
  404364:	4288      	cmp	r0, r1
  404366:	b5f0      	push	{r4, r5, r6, r7, lr}
  404368:	d90d      	bls.n	404386 <memmove+0x22>
  40436a:	188b      	adds	r3, r1, r2
  40436c:	4298      	cmp	r0, r3
  40436e:	d20a      	bcs.n	404386 <memmove+0x22>
  404370:	1881      	adds	r1, r0, r2
  404372:	2a00      	cmp	r2, #0
  404374:	d051      	beq.n	40441a <memmove+0xb6>
  404376:	1a9a      	subs	r2, r3, r2
  404378:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40437c:	f801 4d01 	strb.w	r4, [r1, #-1]!
  404380:	4293      	cmp	r3, r2
  404382:	d1f9      	bne.n	404378 <memmove+0x14>
  404384:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404386:	2a0f      	cmp	r2, #15
  404388:	d948      	bls.n	40441c <memmove+0xb8>
  40438a:	ea41 0300 	orr.w	r3, r1, r0
  40438e:	079b      	lsls	r3, r3, #30
  404390:	d146      	bne.n	404420 <memmove+0xbc>
  404392:	f100 0410 	add.w	r4, r0, #16
  404396:	f101 0310 	add.w	r3, r1, #16
  40439a:	4615      	mov	r5, r2
  40439c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  4043a0:	f844 6c10 	str.w	r6, [r4, #-16]
  4043a4:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  4043a8:	f844 6c0c 	str.w	r6, [r4, #-12]
  4043ac:	f853 6c08 	ldr.w	r6, [r3, #-8]
  4043b0:	f844 6c08 	str.w	r6, [r4, #-8]
  4043b4:	3d10      	subs	r5, #16
  4043b6:	f853 6c04 	ldr.w	r6, [r3, #-4]
  4043ba:	f844 6c04 	str.w	r6, [r4, #-4]
  4043be:	2d0f      	cmp	r5, #15
  4043c0:	f103 0310 	add.w	r3, r3, #16
  4043c4:	f104 0410 	add.w	r4, r4, #16
  4043c8:	d8e8      	bhi.n	40439c <memmove+0x38>
  4043ca:	f1a2 0310 	sub.w	r3, r2, #16
  4043ce:	f023 030f 	bic.w	r3, r3, #15
  4043d2:	f002 0e0f 	and.w	lr, r2, #15
  4043d6:	3310      	adds	r3, #16
  4043d8:	f1be 0f03 	cmp.w	lr, #3
  4043dc:	4419      	add	r1, r3
  4043de:	4403      	add	r3, r0
  4043e0:	d921      	bls.n	404426 <memmove+0xc2>
  4043e2:	1f1e      	subs	r6, r3, #4
  4043e4:	460d      	mov	r5, r1
  4043e6:	4674      	mov	r4, lr
  4043e8:	3c04      	subs	r4, #4
  4043ea:	f855 7b04 	ldr.w	r7, [r5], #4
  4043ee:	f846 7f04 	str.w	r7, [r6, #4]!
  4043f2:	2c03      	cmp	r4, #3
  4043f4:	d8f8      	bhi.n	4043e8 <memmove+0x84>
  4043f6:	f1ae 0404 	sub.w	r4, lr, #4
  4043fa:	f024 0403 	bic.w	r4, r4, #3
  4043fe:	3404      	adds	r4, #4
  404400:	4423      	add	r3, r4
  404402:	4421      	add	r1, r4
  404404:	f002 0203 	and.w	r2, r2, #3
  404408:	b162      	cbz	r2, 404424 <memmove+0xc0>
  40440a:	3b01      	subs	r3, #1
  40440c:	440a      	add	r2, r1
  40440e:	f811 4b01 	ldrb.w	r4, [r1], #1
  404412:	f803 4f01 	strb.w	r4, [r3, #1]!
  404416:	428a      	cmp	r2, r1
  404418:	d1f9      	bne.n	40440e <memmove+0xaa>
  40441a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40441c:	4603      	mov	r3, r0
  40441e:	e7f3      	b.n	404408 <memmove+0xa4>
  404420:	4603      	mov	r3, r0
  404422:	e7f2      	b.n	40440a <memmove+0xa6>
  404424:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404426:	4672      	mov	r2, lr
  404428:	e7ee      	b.n	404408 <memmove+0xa4>
  40442a:	bf00      	nop

0040442c <__malloc_lock>:
  40442c:	4770      	bx	lr
  40442e:	bf00      	nop

00404430 <__malloc_unlock>:
  404430:	4770      	bx	lr
  404432:	bf00      	nop

00404434 <_realloc_r>:
  404434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404438:	4617      	mov	r7, r2
  40443a:	b083      	sub	sp, #12
  40443c:	2900      	cmp	r1, #0
  40443e:	f000 80c1 	beq.w	4045c4 <_realloc_r+0x190>
  404442:	460e      	mov	r6, r1
  404444:	4681      	mov	r9, r0
  404446:	f107 050b 	add.w	r5, r7, #11
  40444a:	f7ff ffef 	bl	40442c <__malloc_lock>
  40444e:	f856 ec04 	ldr.w	lr, [r6, #-4]
  404452:	2d16      	cmp	r5, #22
  404454:	f02e 0403 	bic.w	r4, lr, #3
  404458:	f1a6 0808 	sub.w	r8, r6, #8
  40445c:	d840      	bhi.n	4044e0 <_realloc_r+0xac>
  40445e:	2210      	movs	r2, #16
  404460:	4615      	mov	r5, r2
  404462:	42af      	cmp	r7, r5
  404464:	d841      	bhi.n	4044ea <_realloc_r+0xb6>
  404466:	4294      	cmp	r4, r2
  404468:	da75      	bge.n	404556 <_realloc_r+0x122>
  40446a:	4bc9      	ldr	r3, [pc, #804]	; (404790 <_realloc_r+0x35c>)
  40446c:	6899      	ldr	r1, [r3, #8]
  40446e:	eb08 0004 	add.w	r0, r8, r4
  404472:	4288      	cmp	r0, r1
  404474:	6841      	ldr	r1, [r0, #4]
  404476:	f000 80d9 	beq.w	40462c <_realloc_r+0x1f8>
  40447a:	f021 0301 	bic.w	r3, r1, #1
  40447e:	4403      	add	r3, r0
  404480:	685b      	ldr	r3, [r3, #4]
  404482:	07db      	lsls	r3, r3, #31
  404484:	d57d      	bpl.n	404582 <_realloc_r+0x14e>
  404486:	f01e 0f01 	tst.w	lr, #1
  40448a:	d035      	beq.n	4044f8 <_realloc_r+0xc4>
  40448c:	4639      	mov	r1, r7
  40448e:	4648      	mov	r0, r9
  404490:	f7ff fb7e 	bl	403b90 <_malloc_r>
  404494:	4607      	mov	r7, r0
  404496:	b1e0      	cbz	r0, 4044d2 <_realloc_r+0x9e>
  404498:	f856 3c04 	ldr.w	r3, [r6, #-4]
  40449c:	f023 0301 	bic.w	r3, r3, #1
  4044a0:	4443      	add	r3, r8
  4044a2:	f1a0 0208 	sub.w	r2, r0, #8
  4044a6:	429a      	cmp	r2, r3
  4044a8:	f000 8144 	beq.w	404734 <_realloc_r+0x300>
  4044ac:	1f22      	subs	r2, r4, #4
  4044ae:	2a24      	cmp	r2, #36	; 0x24
  4044b0:	f200 8131 	bhi.w	404716 <_realloc_r+0x2e2>
  4044b4:	2a13      	cmp	r2, #19
  4044b6:	f200 8104 	bhi.w	4046c2 <_realloc_r+0x28e>
  4044ba:	4603      	mov	r3, r0
  4044bc:	4632      	mov	r2, r6
  4044be:	6811      	ldr	r1, [r2, #0]
  4044c0:	6019      	str	r1, [r3, #0]
  4044c2:	6851      	ldr	r1, [r2, #4]
  4044c4:	6059      	str	r1, [r3, #4]
  4044c6:	6892      	ldr	r2, [r2, #8]
  4044c8:	609a      	str	r2, [r3, #8]
  4044ca:	4631      	mov	r1, r6
  4044cc:	4648      	mov	r0, r9
  4044ce:	f7ff f811 	bl	4034f4 <_free_r>
  4044d2:	4648      	mov	r0, r9
  4044d4:	f7ff ffac 	bl	404430 <__malloc_unlock>
  4044d8:	4638      	mov	r0, r7
  4044da:	b003      	add	sp, #12
  4044dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4044e0:	f025 0507 	bic.w	r5, r5, #7
  4044e4:	2d00      	cmp	r5, #0
  4044e6:	462a      	mov	r2, r5
  4044e8:	dabb      	bge.n	404462 <_realloc_r+0x2e>
  4044ea:	230c      	movs	r3, #12
  4044ec:	2000      	movs	r0, #0
  4044ee:	f8c9 3000 	str.w	r3, [r9]
  4044f2:	b003      	add	sp, #12
  4044f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4044f8:	f856 3c08 	ldr.w	r3, [r6, #-8]
  4044fc:	ebc3 0a08 	rsb	sl, r3, r8
  404500:	f8da 3004 	ldr.w	r3, [sl, #4]
  404504:	f023 0c03 	bic.w	ip, r3, #3
  404508:	eb04 030c 	add.w	r3, r4, ip
  40450c:	4293      	cmp	r3, r2
  40450e:	dbbd      	blt.n	40448c <_realloc_r+0x58>
  404510:	4657      	mov	r7, sl
  404512:	f8da 100c 	ldr.w	r1, [sl, #12]
  404516:	f857 0f08 	ldr.w	r0, [r7, #8]!
  40451a:	1f22      	subs	r2, r4, #4
  40451c:	2a24      	cmp	r2, #36	; 0x24
  40451e:	60c1      	str	r1, [r0, #12]
  404520:	6088      	str	r0, [r1, #8]
  404522:	f200 8117 	bhi.w	404754 <_realloc_r+0x320>
  404526:	2a13      	cmp	r2, #19
  404528:	f240 8112 	bls.w	404750 <_realloc_r+0x31c>
  40452c:	6831      	ldr	r1, [r6, #0]
  40452e:	f8ca 1008 	str.w	r1, [sl, #8]
  404532:	6871      	ldr	r1, [r6, #4]
  404534:	f8ca 100c 	str.w	r1, [sl, #12]
  404538:	2a1b      	cmp	r2, #27
  40453a:	f200 812b 	bhi.w	404794 <_realloc_r+0x360>
  40453e:	3608      	adds	r6, #8
  404540:	f10a 0210 	add.w	r2, sl, #16
  404544:	6831      	ldr	r1, [r6, #0]
  404546:	6011      	str	r1, [r2, #0]
  404548:	6871      	ldr	r1, [r6, #4]
  40454a:	6051      	str	r1, [r2, #4]
  40454c:	68b1      	ldr	r1, [r6, #8]
  40454e:	6091      	str	r1, [r2, #8]
  404550:	463e      	mov	r6, r7
  404552:	461c      	mov	r4, r3
  404554:	46d0      	mov	r8, sl
  404556:	1b63      	subs	r3, r4, r5
  404558:	2b0f      	cmp	r3, #15
  40455a:	d81d      	bhi.n	404598 <_realloc_r+0x164>
  40455c:	f8d8 3004 	ldr.w	r3, [r8, #4]
  404560:	f003 0301 	and.w	r3, r3, #1
  404564:	4323      	orrs	r3, r4
  404566:	4444      	add	r4, r8
  404568:	f8c8 3004 	str.w	r3, [r8, #4]
  40456c:	6863      	ldr	r3, [r4, #4]
  40456e:	f043 0301 	orr.w	r3, r3, #1
  404572:	6063      	str	r3, [r4, #4]
  404574:	4648      	mov	r0, r9
  404576:	f7ff ff5b 	bl	404430 <__malloc_unlock>
  40457a:	4630      	mov	r0, r6
  40457c:	b003      	add	sp, #12
  40457e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404582:	f021 0103 	bic.w	r1, r1, #3
  404586:	4421      	add	r1, r4
  404588:	4291      	cmp	r1, r2
  40458a:	db21      	blt.n	4045d0 <_realloc_r+0x19c>
  40458c:	68c3      	ldr	r3, [r0, #12]
  40458e:	6882      	ldr	r2, [r0, #8]
  404590:	460c      	mov	r4, r1
  404592:	60d3      	str	r3, [r2, #12]
  404594:	609a      	str	r2, [r3, #8]
  404596:	e7de      	b.n	404556 <_realloc_r+0x122>
  404598:	f8d8 2004 	ldr.w	r2, [r8, #4]
  40459c:	eb08 0105 	add.w	r1, r8, r5
  4045a0:	f002 0201 	and.w	r2, r2, #1
  4045a4:	4315      	orrs	r5, r2
  4045a6:	f043 0201 	orr.w	r2, r3, #1
  4045aa:	440b      	add	r3, r1
  4045ac:	f8c8 5004 	str.w	r5, [r8, #4]
  4045b0:	604a      	str	r2, [r1, #4]
  4045b2:	685a      	ldr	r2, [r3, #4]
  4045b4:	f042 0201 	orr.w	r2, r2, #1
  4045b8:	3108      	adds	r1, #8
  4045ba:	605a      	str	r2, [r3, #4]
  4045bc:	4648      	mov	r0, r9
  4045be:	f7fe ff99 	bl	4034f4 <_free_r>
  4045c2:	e7d7      	b.n	404574 <_realloc_r+0x140>
  4045c4:	4611      	mov	r1, r2
  4045c6:	b003      	add	sp, #12
  4045c8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4045cc:	f7ff bae0 	b.w	403b90 <_malloc_r>
  4045d0:	f01e 0f01 	tst.w	lr, #1
  4045d4:	f47f af5a 	bne.w	40448c <_realloc_r+0x58>
  4045d8:	f856 3c08 	ldr.w	r3, [r6, #-8]
  4045dc:	ebc3 0a08 	rsb	sl, r3, r8
  4045e0:	f8da 3004 	ldr.w	r3, [sl, #4]
  4045e4:	f023 0c03 	bic.w	ip, r3, #3
  4045e8:	eb01 0e0c 	add.w	lr, r1, ip
  4045ec:	4596      	cmp	lr, r2
  4045ee:	db8b      	blt.n	404508 <_realloc_r+0xd4>
  4045f0:	68c3      	ldr	r3, [r0, #12]
  4045f2:	6882      	ldr	r2, [r0, #8]
  4045f4:	4657      	mov	r7, sl
  4045f6:	60d3      	str	r3, [r2, #12]
  4045f8:	609a      	str	r2, [r3, #8]
  4045fa:	f857 1f08 	ldr.w	r1, [r7, #8]!
  4045fe:	f8da 300c 	ldr.w	r3, [sl, #12]
  404602:	60cb      	str	r3, [r1, #12]
  404604:	1f22      	subs	r2, r4, #4
  404606:	2a24      	cmp	r2, #36	; 0x24
  404608:	6099      	str	r1, [r3, #8]
  40460a:	f200 8099 	bhi.w	404740 <_realloc_r+0x30c>
  40460e:	2a13      	cmp	r2, #19
  404610:	d962      	bls.n	4046d8 <_realloc_r+0x2a4>
  404612:	6833      	ldr	r3, [r6, #0]
  404614:	f8ca 3008 	str.w	r3, [sl, #8]
  404618:	6873      	ldr	r3, [r6, #4]
  40461a:	f8ca 300c 	str.w	r3, [sl, #12]
  40461e:	2a1b      	cmp	r2, #27
  404620:	f200 80a0 	bhi.w	404764 <_realloc_r+0x330>
  404624:	3608      	adds	r6, #8
  404626:	f10a 0310 	add.w	r3, sl, #16
  40462a:	e056      	b.n	4046da <_realloc_r+0x2a6>
  40462c:	f021 0b03 	bic.w	fp, r1, #3
  404630:	44a3      	add	fp, r4
  404632:	f105 0010 	add.w	r0, r5, #16
  404636:	4583      	cmp	fp, r0
  404638:	da59      	bge.n	4046ee <_realloc_r+0x2ba>
  40463a:	f01e 0f01 	tst.w	lr, #1
  40463e:	f47f af25 	bne.w	40448c <_realloc_r+0x58>
  404642:	f856 1c08 	ldr.w	r1, [r6, #-8]
  404646:	ebc1 0a08 	rsb	sl, r1, r8
  40464a:	f8da 1004 	ldr.w	r1, [sl, #4]
  40464e:	f021 0c03 	bic.w	ip, r1, #3
  404652:	44e3      	add	fp, ip
  404654:	4558      	cmp	r0, fp
  404656:	f73f af57 	bgt.w	404508 <_realloc_r+0xd4>
  40465a:	4657      	mov	r7, sl
  40465c:	f8da 100c 	ldr.w	r1, [sl, #12]
  404660:	f857 0f08 	ldr.w	r0, [r7, #8]!
  404664:	1f22      	subs	r2, r4, #4
  404666:	2a24      	cmp	r2, #36	; 0x24
  404668:	60c1      	str	r1, [r0, #12]
  40466a:	6088      	str	r0, [r1, #8]
  40466c:	f200 80b4 	bhi.w	4047d8 <_realloc_r+0x3a4>
  404670:	2a13      	cmp	r2, #19
  404672:	f240 80a5 	bls.w	4047c0 <_realloc_r+0x38c>
  404676:	6831      	ldr	r1, [r6, #0]
  404678:	f8ca 1008 	str.w	r1, [sl, #8]
  40467c:	6871      	ldr	r1, [r6, #4]
  40467e:	f8ca 100c 	str.w	r1, [sl, #12]
  404682:	2a1b      	cmp	r2, #27
  404684:	f200 80af 	bhi.w	4047e6 <_realloc_r+0x3b2>
  404688:	3608      	adds	r6, #8
  40468a:	f10a 0210 	add.w	r2, sl, #16
  40468e:	6831      	ldr	r1, [r6, #0]
  404690:	6011      	str	r1, [r2, #0]
  404692:	6871      	ldr	r1, [r6, #4]
  404694:	6051      	str	r1, [r2, #4]
  404696:	68b1      	ldr	r1, [r6, #8]
  404698:	6091      	str	r1, [r2, #8]
  40469a:	eb0a 0105 	add.w	r1, sl, r5
  40469e:	ebc5 020b 	rsb	r2, r5, fp
  4046a2:	f042 0201 	orr.w	r2, r2, #1
  4046a6:	6099      	str	r1, [r3, #8]
  4046a8:	604a      	str	r2, [r1, #4]
  4046aa:	f8da 3004 	ldr.w	r3, [sl, #4]
  4046ae:	f003 0301 	and.w	r3, r3, #1
  4046b2:	431d      	orrs	r5, r3
  4046b4:	4648      	mov	r0, r9
  4046b6:	f8ca 5004 	str.w	r5, [sl, #4]
  4046ba:	f7ff feb9 	bl	404430 <__malloc_unlock>
  4046be:	4638      	mov	r0, r7
  4046c0:	e75c      	b.n	40457c <_realloc_r+0x148>
  4046c2:	6833      	ldr	r3, [r6, #0]
  4046c4:	6003      	str	r3, [r0, #0]
  4046c6:	6873      	ldr	r3, [r6, #4]
  4046c8:	6043      	str	r3, [r0, #4]
  4046ca:	2a1b      	cmp	r2, #27
  4046cc:	d827      	bhi.n	40471e <_realloc_r+0x2ea>
  4046ce:	f100 0308 	add.w	r3, r0, #8
  4046d2:	f106 0208 	add.w	r2, r6, #8
  4046d6:	e6f2      	b.n	4044be <_realloc_r+0x8a>
  4046d8:	463b      	mov	r3, r7
  4046da:	6832      	ldr	r2, [r6, #0]
  4046dc:	601a      	str	r2, [r3, #0]
  4046de:	6872      	ldr	r2, [r6, #4]
  4046e0:	605a      	str	r2, [r3, #4]
  4046e2:	68b2      	ldr	r2, [r6, #8]
  4046e4:	609a      	str	r2, [r3, #8]
  4046e6:	463e      	mov	r6, r7
  4046e8:	4674      	mov	r4, lr
  4046ea:	46d0      	mov	r8, sl
  4046ec:	e733      	b.n	404556 <_realloc_r+0x122>
  4046ee:	eb08 0105 	add.w	r1, r8, r5
  4046f2:	ebc5 0b0b 	rsb	fp, r5, fp
  4046f6:	f04b 0201 	orr.w	r2, fp, #1
  4046fa:	6099      	str	r1, [r3, #8]
  4046fc:	604a      	str	r2, [r1, #4]
  4046fe:	f856 3c04 	ldr.w	r3, [r6, #-4]
  404702:	f003 0301 	and.w	r3, r3, #1
  404706:	431d      	orrs	r5, r3
  404708:	4648      	mov	r0, r9
  40470a:	f846 5c04 	str.w	r5, [r6, #-4]
  40470e:	f7ff fe8f 	bl	404430 <__malloc_unlock>
  404712:	4630      	mov	r0, r6
  404714:	e732      	b.n	40457c <_realloc_r+0x148>
  404716:	4631      	mov	r1, r6
  404718:	f7ff fe24 	bl	404364 <memmove>
  40471c:	e6d5      	b.n	4044ca <_realloc_r+0x96>
  40471e:	68b3      	ldr	r3, [r6, #8]
  404720:	6083      	str	r3, [r0, #8]
  404722:	68f3      	ldr	r3, [r6, #12]
  404724:	60c3      	str	r3, [r0, #12]
  404726:	2a24      	cmp	r2, #36	; 0x24
  404728:	d028      	beq.n	40477c <_realloc_r+0x348>
  40472a:	f100 0310 	add.w	r3, r0, #16
  40472e:	f106 0210 	add.w	r2, r6, #16
  404732:	e6c4      	b.n	4044be <_realloc_r+0x8a>
  404734:	f850 3c04 	ldr.w	r3, [r0, #-4]
  404738:	f023 0303 	bic.w	r3, r3, #3
  40473c:	441c      	add	r4, r3
  40473e:	e70a      	b.n	404556 <_realloc_r+0x122>
  404740:	4631      	mov	r1, r6
  404742:	4638      	mov	r0, r7
  404744:	4674      	mov	r4, lr
  404746:	46d0      	mov	r8, sl
  404748:	f7ff fe0c 	bl	404364 <memmove>
  40474c:	463e      	mov	r6, r7
  40474e:	e702      	b.n	404556 <_realloc_r+0x122>
  404750:	463a      	mov	r2, r7
  404752:	e6f7      	b.n	404544 <_realloc_r+0x110>
  404754:	4631      	mov	r1, r6
  404756:	4638      	mov	r0, r7
  404758:	461c      	mov	r4, r3
  40475a:	46d0      	mov	r8, sl
  40475c:	f7ff fe02 	bl	404364 <memmove>
  404760:	463e      	mov	r6, r7
  404762:	e6f8      	b.n	404556 <_realloc_r+0x122>
  404764:	68b3      	ldr	r3, [r6, #8]
  404766:	f8ca 3010 	str.w	r3, [sl, #16]
  40476a:	68f3      	ldr	r3, [r6, #12]
  40476c:	f8ca 3014 	str.w	r3, [sl, #20]
  404770:	2a24      	cmp	r2, #36	; 0x24
  404772:	d01b      	beq.n	4047ac <_realloc_r+0x378>
  404774:	3610      	adds	r6, #16
  404776:	f10a 0318 	add.w	r3, sl, #24
  40477a:	e7ae      	b.n	4046da <_realloc_r+0x2a6>
  40477c:	6933      	ldr	r3, [r6, #16]
  40477e:	6103      	str	r3, [r0, #16]
  404780:	6973      	ldr	r3, [r6, #20]
  404782:	6143      	str	r3, [r0, #20]
  404784:	f106 0218 	add.w	r2, r6, #24
  404788:	f100 0318 	add.w	r3, r0, #24
  40478c:	e697      	b.n	4044be <_realloc_r+0x8a>
  40478e:	bf00      	nop
  404790:	20000464 	.word	0x20000464
  404794:	68b1      	ldr	r1, [r6, #8]
  404796:	f8ca 1010 	str.w	r1, [sl, #16]
  40479a:	68f1      	ldr	r1, [r6, #12]
  40479c:	f8ca 1014 	str.w	r1, [sl, #20]
  4047a0:	2a24      	cmp	r2, #36	; 0x24
  4047a2:	d00f      	beq.n	4047c4 <_realloc_r+0x390>
  4047a4:	3610      	adds	r6, #16
  4047a6:	f10a 0218 	add.w	r2, sl, #24
  4047aa:	e6cb      	b.n	404544 <_realloc_r+0x110>
  4047ac:	6933      	ldr	r3, [r6, #16]
  4047ae:	f8ca 3018 	str.w	r3, [sl, #24]
  4047b2:	6973      	ldr	r3, [r6, #20]
  4047b4:	f8ca 301c 	str.w	r3, [sl, #28]
  4047b8:	3618      	adds	r6, #24
  4047ba:	f10a 0320 	add.w	r3, sl, #32
  4047be:	e78c      	b.n	4046da <_realloc_r+0x2a6>
  4047c0:	463a      	mov	r2, r7
  4047c2:	e764      	b.n	40468e <_realloc_r+0x25a>
  4047c4:	6932      	ldr	r2, [r6, #16]
  4047c6:	f8ca 2018 	str.w	r2, [sl, #24]
  4047ca:	6972      	ldr	r2, [r6, #20]
  4047cc:	f8ca 201c 	str.w	r2, [sl, #28]
  4047d0:	3618      	adds	r6, #24
  4047d2:	f10a 0220 	add.w	r2, sl, #32
  4047d6:	e6b5      	b.n	404544 <_realloc_r+0x110>
  4047d8:	4631      	mov	r1, r6
  4047da:	4638      	mov	r0, r7
  4047dc:	9301      	str	r3, [sp, #4]
  4047de:	f7ff fdc1 	bl	404364 <memmove>
  4047e2:	9b01      	ldr	r3, [sp, #4]
  4047e4:	e759      	b.n	40469a <_realloc_r+0x266>
  4047e6:	68b1      	ldr	r1, [r6, #8]
  4047e8:	f8ca 1010 	str.w	r1, [sl, #16]
  4047ec:	68f1      	ldr	r1, [r6, #12]
  4047ee:	f8ca 1014 	str.w	r1, [sl, #20]
  4047f2:	2a24      	cmp	r2, #36	; 0x24
  4047f4:	d003      	beq.n	4047fe <_realloc_r+0x3ca>
  4047f6:	3610      	adds	r6, #16
  4047f8:	f10a 0218 	add.w	r2, sl, #24
  4047fc:	e747      	b.n	40468e <_realloc_r+0x25a>
  4047fe:	6932      	ldr	r2, [r6, #16]
  404800:	f8ca 2018 	str.w	r2, [sl, #24]
  404804:	6972      	ldr	r2, [r6, #20]
  404806:	f8ca 201c 	str.w	r2, [sl, #28]
  40480a:	3618      	adds	r6, #24
  40480c:	f10a 0220 	add.w	r2, sl, #32
  404810:	e73d      	b.n	40468e <_realloc_r+0x25a>
  404812:	bf00      	nop

00404814 <lflush>:
  404814:	8983      	ldrh	r3, [r0, #12]
  404816:	f003 0309 	and.w	r3, r3, #9
  40481a:	2b09      	cmp	r3, #9
  40481c:	d001      	beq.n	404822 <lflush+0xe>
  40481e:	2000      	movs	r0, #0
  404820:	4770      	bx	lr
  404822:	f7fe bc3f 	b.w	4030a4 <fflush>
  404826:	bf00      	nop

00404828 <__srefill_r>:
  404828:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40482a:	460c      	mov	r4, r1
  40482c:	4605      	mov	r5, r0
  40482e:	b110      	cbz	r0, 404836 <__srefill_r+0xe>
  404830:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404832:	2b00      	cmp	r3, #0
  404834:	d045      	beq.n	4048c2 <__srefill_r+0x9a>
  404836:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40483a:	b29a      	uxth	r2, r3
  40483c:	0497      	lsls	r7, r2, #18
  40483e:	d407      	bmi.n	404850 <__srefill_r+0x28>
  404840:	6e62      	ldr	r2, [r4, #100]	; 0x64
  404842:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  404846:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  40484a:	6662      	str	r2, [r4, #100]	; 0x64
  40484c:	81a3      	strh	r3, [r4, #12]
  40484e:	b29a      	uxth	r2, r3
  404850:	2100      	movs	r1, #0
  404852:	0696      	lsls	r6, r2, #26
  404854:	6061      	str	r1, [r4, #4]
  404856:	d431      	bmi.n	4048bc <__srefill_r+0x94>
  404858:	0750      	lsls	r0, r2, #29
  40485a:	d522      	bpl.n	4048a2 <__srefill_r+0x7a>
  40485c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40485e:	b161      	cbz	r1, 40487a <__srefill_r+0x52>
  404860:	f104 0340 	add.w	r3, r4, #64	; 0x40
  404864:	4299      	cmp	r1, r3
  404866:	d002      	beq.n	40486e <__srefill_r+0x46>
  404868:	4628      	mov	r0, r5
  40486a:	f7fe fe43 	bl	4034f4 <_free_r>
  40486e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  404870:	6063      	str	r3, [r4, #4]
  404872:	2000      	movs	r0, #0
  404874:	6320      	str	r0, [r4, #48]	; 0x30
  404876:	2b00      	cmp	r3, #0
  404878:	d13f      	bne.n	4048fa <__srefill_r+0xd2>
  40487a:	6923      	ldr	r3, [r4, #16]
  40487c:	2b00      	cmp	r3, #0
  40487e:	d04c      	beq.n	40491a <__srefill_r+0xf2>
  404880:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
  404884:	b2be      	uxth	r6, r7
  404886:	07b3      	lsls	r3, r6, #30
  404888:	d11e      	bne.n	4048c8 <__srefill_r+0xa0>
  40488a:	6922      	ldr	r2, [r4, #16]
  40488c:	6022      	str	r2, [r4, #0]
  40488e:	4628      	mov	r0, r5
  404890:	6963      	ldr	r3, [r4, #20]
  404892:	6a25      	ldr	r5, [r4, #32]
  404894:	69e1      	ldr	r1, [r4, #28]
  404896:	47a8      	blx	r5
  404898:	2800      	cmp	r0, #0
  40489a:	6060      	str	r0, [r4, #4]
  40489c:	dd09      	ble.n	4048b2 <__srefill_r+0x8a>
  40489e:	2000      	movs	r0, #0
  4048a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4048a2:	06d1      	lsls	r1, r2, #27
  4048a4:	d53e      	bpl.n	404924 <__srefill_r+0xfc>
  4048a6:	0712      	lsls	r2, r2, #28
  4048a8:	d42a      	bmi.n	404900 <__srefill_r+0xd8>
  4048aa:	f043 0304 	orr.w	r3, r3, #4
  4048ae:	81a3      	strh	r3, [r4, #12]
  4048b0:	e7e3      	b.n	40487a <__srefill_r+0x52>
  4048b2:	89a3      	ldrh	r3, [r4, #12]
  4048b4:	d119      	bne.n	4048ea <__srefill_r+0xc2>
  4048b6:	f043 0320 	orr.w	r3, r3, #32
  4048ba:	81a3      	strh	r3, [r4, #12]
  4048bc:	f04f 30ff 	mov.w	r0, #4294967295
  4048c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4048c2:	f7fe fc7f 	bl	4031c4 <__sinit>
  4048c6:	e7b6      	b.n	404836 <__srefill_r+0xe>
  4048c8:	4b1a      	ldr	r3, [pc, #104]	; (404934 <__srefill_r+0x10c>)
  4048ca:	491b      	ldr	r1, [pc, #108]	; (404938 <__srefill_r+0x110>)
  4048cc:	6818      	ldr	r0, [r3, #0]
  4048ce:	2301      	movs	r3, #1
  4048d0:	81a3      	strh	r3, [r4, #12]
  4048d2:	f006 0609 	and.w	r6, r6, #9
  4048d6:	f7ff f877 	bl	4039c8 <_fwalk>
  4048da:	2e09      	cmp	r6, #9
  4048dc:	81a7      	strh	r7, [r4, #12]
  4048de:	d1d4      	bne.n	40488a <__srefill_r+0x62>
  4048e0:	4621      	mov	r1, r4
  4048e2:	4628      	mov	r0, r5
  4048e4:	f7fe fb24 	bl	402f30 <__sflush_r>
  4048e8:	e7cf      	b.n	40488a <__srefill_r+0x62>
  4048ea:	2200      	movs	r2, #0
  4048ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4048f0:	81a3      	strh	r3, [r4, #12]
  4048f2:	6062      	str	r2, [r4, #4]
  4048f4:	f04f 30ff 	mov.w	r0, #4294967295
  4048f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4048fa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  4048fc:	6023      	str	r3, [r4, #0]
  4048fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404900:	4621      	mov	r1, r4
  404902:	4628      	mov	r0, r5
  404904:	f7fe fbb8 	bl	403078 <_fflush_r>
  404908:	2800      	cmp	r0, #0
  40490a:	d1d7      	bne.n	4048bc <__srefill_r+0x94>
  40490c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404910:	60a0      	str	r0, [r4, #8]
  404912:	61a0      	str	r0, [r4, #24]
  404914:	f023 0308 	bic.w	r3, r3, #8
  404918:	e7c7      	b.n	4048aa <__srefill_r+0x82>
  40491a:	4621      	mov	r1, r4
  40491c:	4628      	mov	r0, r5
  40491e:	f7ff f8eb 	bl	403af8 <__smakebuf_r>
  404922:	e7ad      	b.n	404880 <__srefill_r+0x58>
  404924:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404928:	2209      	movs	r2, #9
  40492a:	602a      	str	r2, [r5, #0]
  40492c:	f04f 30ff 	mov.w	r0, #4294967295
  404930:	81a3      	strh	r3, [r4, #12]
  404932:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404934:	00405ba0 	.word	0x00405ba0
  404938:	00404815 	.word	0x00404815

0040493c <_sbrk_r>:
  40493c:	b538      	push	{r3, r4, r5, lr}
  40493e:	4c07      	ldr	r4, [pc, #28]	; (40495c <_sbrk_r+0x20>)
  404940:	2300      	movs	r3, #0
  404942:	4605      	mov	r5, r0
  404944:	4608      	mov	r0, r1
  404946:	6023      	str	r3, [r4, #0]
  404948:	f7fb ff62 	bl	400810 <_sbrk>
  40494c:	1c43      	adds	r3, r0, #1
  40494e:	d000      	beq.n	404952 <_sbrk_r+0x16>
  404950:	bd38      	pop	{r3, r4, r5, pc}
  404952:	6823      	ldr	r3, [r4, #0]
  404954:	2b00      	cmp	r3, #0
  404956:	d0fb      	beq.n	404950 <_sbrk_r+0x14>
  404958:	602b      	str	r3, [r5, #0]
  40495a:	bd38      	pop	{r3, r4, r5, pc}
  40495c:	20000990 	.word	0x20000990

00404960 <__sccl>:
  404960:	b470      	push	{r4, r5, r6}
  404962:	780d      	ldrb	r5, [r1, #0]
  404964:	2d5e      	cmp	r5, #94	; 0x5e
  404966:	d02f      	beq.n	4049c8 <__sccl+0x68>
  404968:	2200      	movs	r2, #0
  40496a:	3101      	adds	r1, #1
  40496c:	4616      	mov	r6, r2
  40496e:	1e43      	subs	r3, r0, #1
  404970:	f100 04ff 	add.w	r4, r0, #255	; 0xff
  404974:	f803 2f01 	strb.w	r2, [r3, #1]!
  404978:	42a3      	cmp	r3, r4
  40497a:	d1fb      	bne.n	404974 <__sccl+0x14>
  40497c:	b185      	cbz	r5, 4049a0 <__sccl+0x40>
  40497e:	f086 0201 	eor.w	r2, r6, #1
  404982:	5542      	strb	r2, [r0, r5]
  404984:	1c4c      	adds	r4, r1, #1
  404986:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  40498a:	2b2d      	cmp	r3, #45	; 0x2d
  40498c:	d00e      	beq.n	4049ac <__sccl+0x4c>
  40498e:	2b5d      	cmp	r3, #93	; 0x5d
  404990:	d009      	beq.n	4049a6 <__sccl+0x46>
  404992:	b113      	cbz	r3, 40499a <__sccl+0x3a>
  404994:	461d      	mov	r5, r3
  404996:	4621      	mov	r1, r4
  404998:	e7f3      	b.n	404982 <__sccl+0x22>
  40499a:	4608      	mov	r0, r1
  40499c:	bc70      	pop	{r4, r5, r6}
  40499e:	4770      	bx	lr
  4049a0:	1e48      	subs	r0, r1, #1
  4049a2:	bc70      	pop	{r4, r5, r6}
  4049a4:	4770      	bx	lr
  4049a6:	4620      	mov	r0, r4
  4049a8:	bc70      	pop	{r4, r5, r6}
  4049aa:	4770      	bx	lr
  4049ac:	784e      	ldrb	r6, [r1, #1]
  4049ae:	2e5d      	cmp	r6, #93	; 0x5d
  4049b0:	d0f0      	beq.n	404994 <__sccl+0x34>
  4049b2:	42b5      	cmp	r5, r6
  4049b4:	dcee      	bgt.n	404994 <__sccl+0x34>
  4049b6:	3102      	adds	r1, #2
  4049b8:	1943      	adds	r3, r0, r5
  4049ba:	3501      	adds	r5, #1
  4049bc:	42ae      	cmp	r6, r5
  4049be:	f803 2f01 	strb.w	r2, [r3, #1]!
  4049c2:	dcfa      	bgt.n	4049ba <__sccl+0x5a>
  4049c4:	3402      	adds	r4, #2
  4049c6:	e7de      	b.n	404986 <__sccl+0x26>
  4049c8:	2201      	movs	r2, #1
  4049ca:	784d      	ldrb	r5, [r1, #1]
  4049cc:	4616      	mov	r6, r2
  4049ce:	3102      	adds	r1, #2
  4049d0:	e7cd      	b.n	40496e <__sccl+0xe>
  4049d2:	bf00      	nop

004049d4 <__sread>:
  4049d4:	b510      	push	{r4, lr}
  4049d6:	460c      	mov	r4, r1
  4049d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4049dc:	f000 fd5a 	bl	405494 <_read_r>
  4049e0:	2800      	cmp	r0, #0
  4049e2:	db03      	blt.n	4049ec <__sread+0x18>
  4049e4:	6d23      	ldr	r3, [r4, #80]	; 0x50
  4049e6:	4403      	add	r3, r0
  4049e8:	6523      	str	r3, [r4, #80]	; 0x50
  4049ea:	bd10      	pop	{r4, pc}
  4049ec:	89a3      	ldrh	r3, [r4, #12]
  4049ee:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  4049f2:	81a3      	strh	r3, [r4, #12]
  4049f4:	bd10      	pop	{r4, pc}
  4049f6:	bf00      	nop

004049f8 <__swrite>:
  4049f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4049fc:	4616      	mov	r6, r2
  4049fe:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  404a02:	461f      	mov	r7, r3
  404a04:	05d3      	lsls	r3, r2, #23
  404a06:	460c      	mov	r4, r1
  404a08:	4605      	mov	r5, r0
  404a0a:	d507      	bpl.n	404a1c <__swrite+0x24>
  404a0c:	2200      	movs	r2, #0
  404a0e:	2302      	movs	r3, #2
  404a10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404a14:	f000 fd28 	bl	405468 <_lseek_r>
  404a18:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  404a1c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  404a20:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  404a24:	81a2      	strh	r2, [r4, #12]
  404a26:	463b      	mov	r3, r7
  404a28:	4632      	mov	r2, r6
  404a2a:	4628      	mov	r0, r5
  404a2c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404a30:	f000 bc38 	b.w	4052a4 <_write_r>

00404a34 <__sseek>:
  404a34:	b510      	push	{r4, lr}
  404a36:	460c      	mov	r4, r1
  404a38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404a3c:	f000 fd14 	bl	405468 <_lseek_r>
  404a40:	89a3      	ldrh	r3, [r4, #12]
  404a42:	1c42      	adds	r2, r0, #1
  404a44:	bf0e      	itee	eq
  404a46:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  404a4a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  404a4e:	6520      	strne	r0, [r4, #80]	; 0x50
  404a50:	81a3      	strh	r3, [r4, #12]
  404a52:	bd10      	pop	{r4, pc}

00404a54 <__sclose>:
  404a54:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404a58:	f000 bc8c 	b.w	405374 <_close_r>

00404a5c <_strtol_r>:
  404a5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404a60:	4c47      	ldr	r4, [pc, #284]	; (404b80 <_strtol_r+0x124>)
  404a62:	4683      	mov	fp, r0
  404a64:	460e      	mov	r6, r1
  404a66:	f8d4 e000 	ldr.w	lr, [r4]
  404a6a:	e000      	b.n	404a6e <_strtol_r+0x12>
  404a6c:	4626      	mov	r6, r4
  404a6e:	4634      	mov	r4, r6
  404a70:	f814 5b01 	ldrb.w	r5, [r4], #1
  404a74:	eb0e 0005 	add.w	r0, lr, r5
  404a78:	7840      	ldrb	r0, [r0, #1]
  404a7a:	f000 0008 	and.w	r0, r0, #8
  404a7e:	f000 08ff 	and.w	r8, r0, #255	; 0xff
  404a82:	2800      	cmp	r0, #0
  404a84:	d1f2      	bne.n	404a6c <_strtol_r+0x10>
  404a86:	2d2d      	cmp	r5, #45	; 0x2d
  404a88:	d05c      	beq.n	404b44 <_strtol_r+0xe8>
  404a8a:	2d2b      	cmp	r5, #43	; 0x2b
  404a8c:	bf04      	itt	eq
  404a8e:	7875      	ldrbeq	r5, [r6, #1]
  404a90:	1cb4      	addeq	r4, r6, #2
  404a92:	2b00      	cmp	r3, #0
  404a94:	d03e      	beq.n	404b14 <_strtol_r+0xb8>
  404a96:	2b10      	cmp	r3, #16
  404a98:	d060      	beq.n	404b5c <_strtol_r+0x100>
  404a9a:	469a      	mov	sl, r3
  404a9c:	f1b8 0f00 	cmp.w	r8, #0
  404aa0:	bf0c      	ite	eq
  404aa2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  404aa6:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
  404aaa:	2700      	movs	r7, #0
  404aac:	fbb0 f9fa 	udiv	r9, r0, sl
  404ab0:	46bc      	mov	ip, r7
  404ab2:	fb0a 0019 	mls	r0, sl, r9, r0
  404ab6:	e00c      	b.n	404ad2 <_strtol_r+0x76>
  404ab8:	3d30      	subs	r5, #48	; 0x30
  404aba:	42ab      	cmp	r3, r5
  404abc:	dd19      	ble.n	404af2 <_strtol_r+0x96>
  404abe:	1c7e      	adds	r6, r7, #1
  404ac0:	d005      	beq.n	404ace <_strtol_r+0x72>
  404ac2:	45cc      	cmp	ip, r9
  404ac4:	d823      	bhi.n	404b0e <_strtol_r+0xb2>
  404ac6:	d020      	beq.n	404b0a <_strtol_r+0xae>
  404ac8:	fb0a 5c0c 	mla	ip, sl, ip, r5
  404acc:	2701      	movs	r7, #1
  404ace:	f814 5b01 	ldrb.w	r5, [r4], #1
  404ad2:	eb0e 0605 	add.w	r6, lr, r5
  404ad6:	7876      	ldrb	r6, [r6, #1]
  404ad8:	f016 0f04 	tst.w	r6, #4
  404adc:	d1ec      	bne.n	404ab8 <_strtol_r+0x5c>
  404ade:	f016 0603 	ands.w	r6, r6, #3
  404ae2:	d006      	beq.n	404af2 <_strtol_r+0x96>
  404ae4:	2e01      	cmp	r6, #1
  404ae6:	bf14      	ite	ne
  404ae8:	2657      	movne	r6, #87	; 0x57
  404aea:	2637      	moveq	r6, #55	; 0x37
  404aec:	1bad      	subs	r5, r5, r6
  404aee:	42ab      	cmp	r3, r5
  404af0:	dce5      	bgt.n	404abe <_strtol_r+0x62>
  404af2:	1c7b      	adds	r3, r7, #1
  404af4:	d016      	beq.n	404b24 <_strtol_r+0xc8>
  404af6:	f1b8 0f00 	cmp.w	r8, #0
  404afa:	d110      	bne.n	404b1e <_strtol_r+0xc2>
  404afc:	4660      	mov	r0, ip
  404afe:	2a00      	cmp	r2, #0
  404b00:	d039      	beq.n	404b76 <_strtol_r+0x11a>
  404b02:	b9df      	cbnz	r7, 404b3c <_strtol_r+0xe0>
  404b04:	6011      	str	r1, [r2, #0]
  404b06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404b0a:	4285      	cmp	r5, r0
  404b0c:	dddc      	ble.n	404ac8 <_strtol_r+0x6c>
  404b0e:	f04f 37ff 	mov.w	r7, #4294967295
  404b12:	e7dc      	b.n	404ace <_strtol_r+0x72>
  404b14:	2d30      	cmp	r5, #48	; 0x30
  404b16:	d01a      	beq.n	404b4e <_strtol_r+0xf2>
  404b18:	230a      	movs	r3, #10
  404b1a:	469a      	mov	sl, r3
  404b1c:	e7be      	b.n	404a9c <_strtol_r+0x40>
  404b1e:	f1cc 0c00 	rsb	ip, ip, #0
  404b22:	e7eb      	b.n	404afc <_strtol_r+0xa0>
  404b24:	f1b8 0f00 	cmp.w	r8, #0
  404b28:	f04f 0322 	mov.w	r3, #34	; 0x22
  404b2c:	bf0c      	ite	eq
  404b2e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  404b32:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
  404b36:	f8cb 3000 	str.w	r3, [fp]
  404b3a:	b1f2      	cbz	r2, 404b7a <_strtol_r+0x11e>
  404b3c:	1e61      	subs	r1, r4, #1
  404b3e:	6011      	str	r1, [r2, #0]
  404b40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404b44:	1cb4      	adds	r4, r6, #2
  404b46:	7875      	ldrb	r5, [r6, #1]
  404b48:	f04f 0801 	mov.w	r8, #1
  404b4c:	e7a1      	b.n	404a92 <_strtol_r+0x36>
  404b4e:	7823      	ldrb	r3, [r4, #0]
  404b50:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404b54:	2b58      	cmp	r3, #88	; 0x58
  404b56:	d008      	beq.n	404b6a <_strtol_r+0x10e>
  404b58:	2308      	movs	r3, #8
  404b5a:	e79e      	b.n	404a9a <_strtol_r+0x3e>
  404b5c:	2d30      	cmp	r5, #48	; 0x30
  404b5e:	d19c      	bne.n	404a9a <_strtol_r+0x3e>
  404b60:	7820      	ldrb	r0, [r4, #0]
  404b62:	f000 00df 	and.w	r0, r0, #223	; 0xdf
  404b66:	2858      	cmp	r0, #88	; 0x58
  404b68:	d197      	bne.n	404a9a <_strtol_r+0x3e>
  404b6a:	f04f 0a10 	mov.w	sl, #16
  404b6e:	7865      	ldrb	r5, [r4, #1]
  404b70:	4653      	mov	r3, sl
  404b72:	3402      	adds	r4, #2
  404b74:	e792      	b.n	404a9c <_strtol_r+0x40>
  404b76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404b7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404b7e:	bf00      	nop
  404b80:	2000043c 	.word	0x2000043c

00404b84 <_strtoll_r>:
  404b84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404b88:	4c69      	ldr	r4, [pc, #420]	; (404d30 <_strtoll_r+0x1ac>)
  404b8a:	b087      	sub	sp, #28
  404b8c:	469b      	mov	fp, r3
  404b8e:	9202      	str	r2, [sp, #8]
  404b90:	9104      	str	r1, [sp, #16]
  404b92:	9005      	str	r0, [sp, #20]
  404b94:	460a      	mov	r2, r1
  404b96:	f8d4 a000 	ldr.w	sl, [r4]
  404b9a:	e000      	b.n	404b9e <_strtoll_r+0x1a>
  404b9c:	462a      	mov	r2, r5
  404b9e:	4615      	mov	r5, r2
  404ba0:	f815 4b01 	ldrb.w	r4, [r5], #1
  404ba4:	eb0a 0304 	add.w	r3, sl, r4
  404ba8:	785b      	ldrb	r3, [r3, #1]
  404baa:	f003 0308 	and.w	r3, r3, #8
  404bae:	f003 01ff 	and.w	r1, r3, #255	; 0xff
  404bb2:	2b00      	cmp	r3, #0
  404bb4:	d1f2      	bne.n	404b9c <_strtoll_r+0x18>
  404bb6:	2c2d      	cmp	r4, #45	; 0x2d
  404bb8:	f000 8083 	beq.w	404cc2 <_strtoll_r+0x13e>
  404bbc:	2c2b      	cmp	r4, #43	; 0x2b
  404bbe:	bf08      	it	eq
  404bc0:	7854      	ldrbeq	r4, [r2, #1]
  404bc2:	9101      	str	r1, [sp, #4]
  404bc4:	bf08      	it	eq
  404bc6:	1c95      	addeq	r5, r2, #2
  404bc8:	f1bb 0f00 	cmp.w	fp, #0
  404bcc:	d00c      	beq.n	404be8 <_strtoll_r+0x64>
  404bce:	f1bb 0f10 	cmp.w	fp, #16
  404bd2:	f000 8095 	beq.w	404d00 <_strtoll_r+0x17c>
  404bd6:	9b01      	ldr	r3, [sp, #4]
  404bd8:	465e      	mov	r6, fp
  404bda:	17f7      	asrs	r7, r6, #31
  404bdc:	b96b      	cbnz	r3, 404bfa <_strtoll_r+0x76>
  404bde:	f04f 38ff 	mov.w	r8, #4294967295
  404be2:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
  404be6:	e00c      	b.n	404c02 <_strtoll_r+0x7e>
  404be8:	2c30      	cmp	r4, #48	; 0x30
  404bea:	d07f      	beq.n	404cec <_strtoll_r+0x168>
  404bec:	260a      	movs	r6, #10
  404bee:	2700      	movs	r7, #0
  404bf0:	f04f 0b0a 	mov.w	fp, #10
  404bf4:	9b01      	ldr	r3, [sp, #4]
  404bf6:	2b00      	cmp	r3, #0
  404bf8:	d0f1      	beq.n	404bde <_strtoll_r+0x5a>
  404bfa:	f04f 0800 	mov.w	r8, #0
  404bfe:	f04f 4900 	mov.w	r9, #2147483648	; 0x80000000
  404c02:	4640      	mov	r0, r8
  404c04:	4632      	mov	r2, r6
  404c06:	463b      	mov	r3, r7
  404c08:	4649      	mov	r1, r9
  404c0a:	f000 fc59 	bl	4054c0 <__aeabi_uldivmod>
  404c0e:	463b      	mov	r3, r7
  404c10:	9203      	str	r2, [sp, #12]
  404c12:	4640      	mov	r0, r8
  404c14:	4632      	mov	r2, r6
  404c16:	4649      	mov	r1, r9
  404c18:	f000 fc52 	bl	4054c0 <__aeabi_uldivmod>
  404c1c:	f04f 0e00 	mov.w	lr, #0
  404c20:	2200      	movs	r2, #0
  404c22:	2300      	movs	r3, #0
  404c24:	f8dd 800c 	ldr.w	r8, [sp, #12]
  404c28:	e01b      	b.n	404c62 <_strtoll_r+0xde>
  404c2a:	3c30      	subs	r4, #48	; 0x30
  404c2c:	45a3      	cmp	fp, r4
  404c2e:	dd2d      	ble.n	404c8c <_strtoll_r+0x108>
  404c30:	f1be 3fff 	cmp.w	lr, #4294967295
  404c34:	d013      	beq.n	404c5e <_strtoll_r+0xda>
  404c36:	4299      	cmp	r1, r3
  404c38:	bf08      	it	eq
  404c3a:	4290      	cmpeq	r0, r2
  404c3c:	d33e      	bcc.n	404cbc <_strtoll_r+0x138>
  404c3e:	428b      	cmp	r3, r1
  404c40:	bf08      	it	eq
  404c42:	4282      	cmpeq	r2, r0
  404c44:	d038      	beq.n	404cb8 <_strtoll_r+0x134>
  404c46:	fb02 fe07 	mul.w	lr, r2, r7
  404c4a:	fb06 ee03 	mla	lr, r6, r3, lr
  404c4e:	fba2 2306 	umull	r2, r3, r2, r6
  404c52:	4473      	add	r3, lr
  404c54:	1912      	adds	r2, r2, r4
  404c56:	eb43 73e4 	adc.w	r3, r3, r4, asr #31
  404c5a:	f04f 0e01 	mov.w	lr, #1
  404c5e:	f815 4b01 	ldrb.w	r4, [r5], #1
  404c62:	eb0a 0c04 	add.w	ip, sl, r4
  404c66:	f89c c001 	ldrb.w	ip, [ip, #1]
  404c6a:	f01c 0f04 	tst.w	ip, #4
  404c6e:	d1dc      	bne.n	404c2a <_strtoll_r+0xa6>
  404c70:	f01c 0c03 	ands.w	ip, ip, #3
  404c74:	d00a      	beq.n	404c8c <_strtoll_r+0x108>
  404c76:	f1bc 0f01 	cmp.w	ip, #1
  404c7a:	bf14      	ite	ne
  404c7c:	f04f 0c57 	movne.w	ip, #87	; 0x57
  404c80:	f04f 0c37 	moveq.w	ip, #55	; 0x37
  404c84:	ebcc 0404 	rsb	r4, ip, r4
  404c88:	45a3      	cmp	fp, r4
  404c8a:	dcd1      	bgt.n	404c30 <_strtoll_r+0xac>
  404c8c:	f1be 3fff 	cmp.w	lr, #4294967295
  404c90:	d01c      	beq.n	404ccc <_strtoll_r+0x148>
  404c92:	9901      	ldr	r1, [sp, #4]
  404c94:	b111      	cbz	r1, 404c9c <_strtoll_r+0x118>
  404c96:	4252      	negs	r2, r2
  404c98:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  404c9c:	9902      	ldr	r1, [sp, #8]
  404c9e:	2900      	cmp	r1, #0
  404ca0:	d040      	beq.n	404d24 <_strtoll_r+0x1a0>
  404ca2:	f1be 0f00 	cmp.w	lr, #0
  404ca6:	d11d      	bne.n	404ce4 <_strtoll_r+0x160>
  404ca8:	9d04      	ldr	r5, [sp, #16]
  404caa:	4610      	mov	r0, r2
  404cac:	4619      	mov	r1, r3
  404cae:	9b02      	ldr	r3, [sp, #8]
  404cb0:	601d      	str	r5, [r3, #0]
  404cb2:	b007      	add	sp, #28
  404cb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404cb8:	4544      	cmp	r4, r8
  404cba:	ddc4      	ble.n	404c46 <_strtoll_r+0xc2>
  404cbc:	f04f 3eff 	mov.w	lr, #4294967295
  404cc0:	e7cd      	b.n	404c5e <_strtoll_r+0xda>
  404cc2:	2301      	movs	r3, #1
  404cc4:	1c95      	adds	r5, r2, #2
  404cc6:	7854      	ldrb	r4, [r2, #1]
  404cc8:	9301      	str	r3, [sp, #4]
  404cca:	e77d      	b.n	404bc8 <_strtoll_r+0x44>
  404ccc:	9b01      	ldr	r3, [sp, #4]
  404cce:	bb2b      	cbnz	r3, 404d1c <_strtoll_r+0x198>
  404cd0:	f04f 30ff 	mov.w	r0, #4294967295
  404cd4:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  404cd8:	9a05      	ldr	r2, [sp, #20]
  404cda:	2322      	movs	r3, #34	; 0x22
  404cdc:	6013      	str	r3, [r2, #0]
  404cde:	9b02      	ldr	r3, [sp, #8]
  404ce0:	b913      	cbnz	r3, 404ce8 <_strtoll_r+0x164>
  404ce2:	e7e6      	b.n	404cb2 <_strtoll_r+0x12e>
  404ce4:	4610      	mov	r0, r2
  404ce6:	4619      	mov	r1, r3
  404ce8:	3d01      	subs	r5, #1
  404cea:	e7e0      	b.n	404cae <_strtoll_r+0x12a>
  404cec:	782b      	ldrb	r3, [r5, #0]
  404cee:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404cf2:	2b58      	cmp	r3, #88	; 0x58
  404cf4:	d00b      	beq.n	404d0e <_strtoll_r+0x18a>
  404cf6:	2608      	movs	r6, #8
  404cf8:	2700      	movs	r7, #0
  404cfa:	f04f 0b08 	mov.w	fp, #8
  404cfe:	e779      	b.n	404bf4 <_strtoll_r+0x70>
  404d00:	2c30      	cmp	r4, #48	; 0x30
  404d02:	d112      	bne.n	404d2a <_strtoll_r+0x1a6>
  404d04:	782b      	ldrb	r3, [r5, #0]
  404d06:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404d0a:	2b58      	cmp	r3, #88	; 0x58
  404d0c:	d10d      	bne.n	404d2a <_strtoll_r+0x1a6>
  404d0e:	786c      	ldrb	r4, [r5, #1]
  404d10:	2610      	movs	r6, #16
  404d12:	2700      	movs	r7, #0
  404d14:	3502      	adds	r5, #2
  404d16:	f04f 0b10 	mov.w	fp, #16
  404d1a:	e76b      	b.n	404bf4 <_strtoll_r+0x70>
  404d1c:	2000      	movs	r0, #0
  404d1e:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  404d22:	e7d9      	b.n	404cd8 <_strtoll_r+0x154>
  404d24:	4610      	mov	r0, r2
  404d26:	4619      	mov	r1, r3
  404d28:	e7c3      	b.n	404cb2 <_strtoll_r+0x12e>
  404d2a:	2610      	movs	r6, #16
  404d2c:	2700      	movs	r7, #0
  404d2e:	e761      	b.n	404bf4 <_strtoll_r+0x70>
  404d30:	2000043c 	.word	0x2000043c

00404d34 <_strtoul_r>:
  404d34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404d38:	4c49      	ldr	r4, [pc, #292]	; (404e60 <_strtoul_r+0x12c>)
  404d3a:	4682      	mov	sl, r0
  404d3c:	460e      	mov	r6, r1
  404d3e:	f8d4 e000 	ldr.w	lr, [r4]
  404d42:	e000      	b.n	404d46 <_strtoul_r+0x12>
  404d44:	4626      	mov	r6, r4
  404d46:	4634      	mov	r4, r6
  404d48:	f814 5b01 	ldrb.w	r5, [r4], #1
  404d4c:	eb0e 0005 	add.w	r0, lr, r5
  404d50:	7840      	ldrb	r0, [r0, #1]
  404d52:	f000 0008 	and.w	r0, r0, #8
  404d56:	f000 0cff 	and.w	ip, r0, #255	; 0xff
  404d5a:	2800      	cmp	r0, #0
  404d5c:	d1f2      	bne.n	404d44 <_strtoul_r+0x10>
  404d5e:	2d2d      	cmp	r5, #45	; 0x2d
  404d60:	d054      	beq.n	404e0c <_strtoul_r+0xd8>
  404d62:	2d2b      	cmp	r5, #43	; 0x2b
  404d64:	bf04      	itt	eq
  404d66:	7875      	ldrbeq	r5, [r6, #1]
  404d68:	1cb4      	addeq	r4, r6, #2
  404d6a:	b15b      	cbz	r3, 404d84 <_strtoul_r+0x50>
  404d6c:	2b10      	cmp	r3, #16
  404d6e:	d05e      	beq.n	404e2e <_strtoul_r+0xfa>
  404d70:	f04f 38ff 	mov.w	r8, #4294967295
  404d74:	fbb8 f8f3 	udiv	r8, r8, r3
  404d78:	fb03 fb08 	mul.w	fp, r3, r8
  404d7c:	ea6f 0b0b 	mvn.w	fp, fp
  404d80:	4699      	mov	r9, r3
  404d82:	e007      	b.n	404d94 <_strtoul_r+0x60>
  404d84:	2d30      	cmp	r5, #48	; 0x30
  404d86:	d046      	beq.n	404e16 <_strtoul_r+0xe2>
  404d88:	230a      	movs	r3, #10
  404d8a:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 404e64 <_strtoul_r+0x130>
  404d8e:	4699      	mov	r9, r3
  404d90:	f04f 0b05 	mov.w	fp, #5
  404d94:	2700      	movs	r7, #0
  404d96:	4638      	mov	r0, r7
  404d98:	e00c      	b.n	404db4 <_strtoul_r+0x80>
  404d9a:	3d30      	subs	r5, #48	; 0x30
  404d9c:	42ab      	cmp	r3, r5
  404d9e:	dd19      	ble.n	404dd4 <_strtoul_r+0xa0>
  404da0:	1c7e      	adds	r6, r7, #1
  404da2:	d005      	beq.n	404db0 <_strtoul_r+0x7c>
  404da4:	4540      	cmp	r0, r8
  404da6:	d822      	bhi.n	404dee <_strtoul_r+0xba>
  404da8:	d01f      	beq.n	404dea <_strtoul_r+0xb6>
  404daa:	fb09 5000 	mla	r0, r9, r0, r5
  404dae:	2701      	movs	r7, #1
  404db0:	f814 5b01 	ldrb.w	r5, [r4], #1
  404db4:	eb0e 0605 	add.w	r6, lr, r5
  404db8:	7876      	ldrb	r6, [r6, #1]
  404dba:	f016 0f04 	tst.w	r6, #4
  404dbe:	d1ec      	bne.n	404d9a <_strtoul_r+0x66>
  404dc0:	f016 0603 	ands.w	r6, r6, #3
  404dc4:	d006      	beq.n	404dd4 <_strtoul_r+0xa0>
  404dc6:	2e01      	cmp	r6, #1
  404dc8:	bf14      	ite	ne
  404dca:	2657      	movne	r6, #87	; 0x57
  404dcc:	2637      	moveq	r6, #55	; 0x37
  404dce:	1bad      	subs	r5, r5, r6
  404dd0:	42ab      	cmp	r3, r5
  404dd2:	dce5      	bgt.n	404da0 <_strtoul_r+0x6c>
  404dd4:	2f00      	cmp	r7, #0
  404dd6:	db0f      	blt.n	404df8 <_strtoul_r+0xc4>
  404dd8:	f1bc 0f00 	cmp.w	ip, #0
  404ddc:	d000      	beq.n	404de0 <_strtoul_r+0xac>
  404dde:	4240      	negs	r0, r0
  404de0:	b142      	cbz	r2, 404df4 <_strtoul_r+0xc0>
  404de2:	b97f      	cbnz	r7, 404e04 <_strtoul_r+0xd0>
  404de4:	6011      	str	r1, [r2, #0]
  404de6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404dea:	455d      	cmp	r5, fp
  404dec:	dddd      	ble.n	404daa <_strtoul_r+0x76>
  404dee:	f04f 37ff 	mov.w	r7, #4294967295
  404df2:	e7dd      	b.n	404db0 <_strtoul_r+0x7c>
  404df4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404df8:	2322      	movs	r3, #34	; 0x22
  404dfa:	f8ca 3000 	str.w	r3, [sl]
  404dfe:	f04f 30ff 	mov.w	r0, #4294967295
  404e02:	b35a      	cbz	r2, 404e5c <_strtoul_r+0x128>
  404e04:	1e61      	subs	r1, r4, #1
  404e06:	6011      	str	r1, [r2, #0]
  404e08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404e0c:	1cb4      	adds	r4, r6, #2
  404e0e:	7875      	ldrb	r5, [r6, #1]
  404e10:	f04f 0c01 	mov.w	ip, #1
  404e14:	e7a9      	b.n	404d6a <_strtoul_r+0x36>
  404e16:	7823      	ldrb	r3, [r4, #0]
  404e18:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404e1c:	2b58      	cmp	r3, #88	; 0x58
  404e1e:	d00d      	beq.n	404e3c <_strtoul_r+0x108>
  404e20:	2308      	movs	r3, #8
  404e22:	4699      	mov	r9, r3
  404e24:	f04f 0b07 	mov.w	fp, #7
  404e28:	f06f 4860 	mvn.w	r8, #3758096384	; 0xe0000000
  404e2c:	e7b2      	b.n	404d94 <_strtoul_r+0x60>
  404e2e:	2d30      	cmp	r5, #48	; 0x30
  404e30:	d10e      	bne.n	404e50 <_strtoul_r+0x11c>
  404e32:	7820      	ldrb	r0, [r4, #0]
  404e34:	f000 00df 	and.w	r0, r0, #223	; 0xdf
  404e38:	2858      	cmp	r0, #88	; 0x58
  404e3a:	d109      	bne.n	404e50 <_strtoul_r+0x11c>
  404e3c:	f04f 0910 	mov.w	r9, #16
  404e40:	7865      	ldrb	r5, [r4, #1]
  404e42:	464b      	mov	r3, r9
  404e44:	f04f 0b0f 	mov.w	fp, #15
  404e48:	3402      	adds	r4, #2
  404e4a:	f06f 4870 	mvn.w	r8, #4026531840	; 0xf0000000
  404e4e:	e7a1      	b.n	404d94 <_strtoul_r+0x60>
  404e50:	f04f 0b0f 	mov.w	fp, #15
  404e54:	f06f 4870 	mvn.w	r8, #4026531840	; 0xf0000000
  404e58:	4699      	mov	r9, r3
  404e5a:	e79b      	b.n	404d94 <_strtoul_r+0x60>
  404e5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404e60:	2000043c 	.word	0x2000043c
  404e64:	19999999 	.word	0x19999999

00404e68 <_strtoull_r>:
  404e68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404e6c:	4c6e      	ldr	r4, [pc, #440]	; (405028 <_strtoull_r+0x1c0>)
  404e6e:	b087      	sub	sp, #28
  404e70:	4692      	mov	sl, r2
  404e72:	468b      	mov	fp, r1
  404e74:	9004      	str	r0, [sp, #16]
  404e76:	461f      	mov	r7, r3
  404e78:	460a      	mov	r2, r1
  404e7a:	6826      	ldr	r6, [r4, #0]
  404e7c:	e000      	b.n	404e80 <_strtoull_r+0x18>
  404e7e:	462a      	mov	r2, r5
  404e80:	4615      	mov	r5, r2
  404e82:	f815 4b01 	ldrb.w	r4, [r5], #1
  404e86:	1933      	adds	r3, r6, r4
  404e88:	785b      	ldrb	r3, [r3, #1]
  404e8a:	f003 0308 	and.w	r3, r3, #8
  404e8e:	f003 01ff 	and.w	r1, r3, #255	; 0xff
  404e92:	2b00      	cmp	r3, #0
  404e94:	d1f3      	bne.n	404e7e <_strtoull_r+0x16>
  404e96:	2c2d      	cmp	r4, #45	; 0x2d
  404e98:	f000 808e 	beq.w	404fb8 <_strtoull_r+0x150>
  404e9c:	2c2b      	cmp	r4, #43	; 0x2b
  404e9e:	bf08      	it	eq
  404ea0:	7854      	ldrbeq	r4, [r2, #1]
  404ea2:	9103      	str	r1, [sp, #12]
  404ea4:	bf08      	it	eq
  404ea6:	1c95      	addeq	r5, r2, #2
  404ea8:	b1df      	cbz	r7, 404ee2 <_strtoull_r+0x7a>
  404eaa:	2f10      	cmp	r7, #16
  404eac:	f000 809a 	beq.w	404fe4 <_strtoull_r+0x17c>
  404eb0:	ea4f 79e7 	mov.w	r9, r7, asr #31
  404eb4:	463a      	mov	r2, r7
  404eb6:	464b      	mov	r3, r9
  404eb8:	f04f 30ff 	mov.w	r0, #4294967295
  404ebc:	f04f 31ff 	mov.w	r1, #4294967295
  404ec0:	f000 fafe 	bl	4054c0 <__aeabi_uldivmod>
  404ec4:	463a      	mov	r2, r7
  404ec6:	9001      	str	r0, [sp, #4]
  404ec8:	9105      	str	r1, [sp, #20]
  404eca:	464b      	mov	r3, r9
  404ecc:	f04f 30ff 	mov.w	r0, #4294967295
  404ed0:	f04f 31ff 	mov.w	r1, #4294967295
  404ed4:	f000 faf4 	bl	4054c0 <__aeabi_uldivmod>
  404ed8:	46b8      	mov	r8, r7
  404eda:	9202      	str	r2, [sp, #8]
  404edc:	9a01      	ldr	r2, [sp, #4]
  404ede:	9b05      	ldr	r3, [sp, #20]
  404ee0:	e00b      	b.n	404efa <_strtoull_r+0x92>
  404ee2:	2c30      	cmp	r4, #48	; 0x30
  404ee4:	d06d      	beq.n	404fc2 <_strtoull_r+0x15a>
  404ee6:	2305      	movs	r3, #5
  404ee8:	9302      	str	r3, [sp, #8]
  404eea:	4b50      	ldr	r3, [pc, #320]	; (40502c <_strtoull_r+0x1c4>)
  404eec:	f04f 3299 	mov.w	r2, #2576980377	; 0x99999999
  404ef0:	f04f 080a 	mov.w	r8, #10
  404ef4:	f04f 0900 	mov.w	r9, #0
  404ef8:	270a      	movs	r7, #10
  404efa:	f04f 0e00 	mov.w	lr, #0
  404efe:	2000      	movs	r0, #0
  404f00:	2100      	movs	r1, #0
  404f02:	9701      	str	r7, [sp, #4]
  404f04:	e01c      	b.n	404f40 <_strtoull_r+0xd8>
  404f06:	9f01      	ldr	r7, [sp, #4]
  404f08:	3c30      	subs	r4, #48	; 0x30
  404f0a:	42a7      	cmp	r7, r4
  404f0c:	dd2e      	ble.n	404f6c <_strtoull_r+0x104>
  404f0e:	f1be 3fff 	cmp.w	lr, #4294967295
  404f12:	d013      	beq.n	404f3c <_strtoull_r+0xd4>
  404f14:	428b      	cmp	r3, r1
  404f16:	bf08      	it	eq
  404f18:	4282      	cmpeq	r2, r0
  404f1a:	d33e      	bcc.n	404f9a <_strtoull_r+0x132>
  404f1c:	4299      	cmp	r1, r3
  404f1e:	bf08      	it	eq
  404f20:	4290      	cmpeq	r0, r2
  404f22:	d037      	beq.n	404f94 <_strtoull_r+0x12c>
  404f24:	fb00 fc09 	mul.w	ip, r0, r9
  404f28:	fb08 cc01 	mla	ip, r8, r1, ip
  404f2c:	fba0 0108 	umull	r0, r1, r0, r8
  404f30:	4461      	add	r1, ip
  404f32:	1900      	adds	r0, r0, r4
  404f34:	eb41 71e4 	adc.w	r1, r1, r4, asr #31
  404f38:	f04f 0e01 	mov.w	lr, #1
  404f3c:	f815 4b01 	ldrb.w	r4, [r5], #1
  404f40:	eb06 0c04 	add.w	ip, r6, r4
  404f44:	f89c c001 	ldrb.w	ip, [ip, #1]
  404f48:	f01c 0f04 	tst.w	ip, #4
  404f4c:	d1db      	bne.n	404f06 <_strtoull_r+0x9e>
  404f4e:	f01c 0c03 	ands.w	ip, ip, #3
  404f52:	d00b      	beq.n	404f6c <_strtoull_r+0x104>
  404f54:	f1bc 0f01 	cmp.w	ip, #1
  404f58:	bf14      	ite	ne
  404f5a:	f04f 0c57 	movne.w	ip, #87	; 0x57
  404f5e:	f04f 0c37 	moveq.w	ip, #55	; 0x37
  404f62:	9f01      	ldr	r7, [sp, #4]
  404f64:	ebcc 0404 	rsb	r4, ip, r4
  404f68:	42a7      	cmp	r7, r4
  404f6a:	dcd0      	bgt.n	404f0e <_strtoull_r+0xa6>
  404f6c:	f1be 0f00 	cmp.w	lr, #0
  404f70:	db16      	blt.n	404fa0 <_strtoull_r+0x138>
  404f72:	9b03      	ldr	r3, [sp, #12]
  404f74:	b113      	cbz	r3, 404f7c <_strtoull_r+0x114>
  404f76:	4240      	negs	r0, r0
  404f78:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  404f7c:	f1ba 0f00 	cmp.w	sl, #0
  404f80:	d005      	beq.n	404f8e <_strtoull_r+0x126>
  404f82:	f1be 0f00 	cmp.w	lr, #0
  404f86:	d115      	bne.n	404fb4 <_strtoull_r+0x14c>
  404f88:	465d      	mov	r5, fp
  404f8a:	f8ca 5000 	str.w	r5, [sl]
  404f8e:	b007      	add	sp, #28
  404f90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404f94:	9f02      	ldr	r7, [sp, #8]
  404f96:	42bc      	cmp	r4, r7
  404f98:	ddc4      	ble.n	404f24 <_strtoull_r+0xbc>
  404f9a:	f04f 3eff 	mov.w	lr, #4294967295
  404f9e:	e7cd      	b.n	404f3c <_strtoull_r+0xd4>
  404fa0:	9a04      	ldr	r2, [sp, #16]
  404fa2:	2322      	movs	r3, #34	; 0x22
  404fa4:	6013      	str	r3, [r2, #0]
  404fa6:	f04f 30ff 	mov.w	r0, #4294967295
  404faa:	f04f 31ff 	mov.w	r1, #4294967295
  404fae:	f1ba 0f00 	cmp.w	sl, #0
  404fb2:	d0ec      	beq.n	404f8e <_strtoull_r+0x126>
  404fb4:	3d01      	subs	r5, #1
  404fb6:	e7e8      	b.n	404f8a <_strtoull_r+0x122>
  404fb8:	2301      	movs	r3, #1
  404fba:	1c95      	adds	r5, r2, #2
  404fbc:	7854      	ldrb	r4, [r2, #1]
  404fbe:	9303      	str	r3, [sp, #12]
  404fc0:	e772      	b.n	404ea8 <_strtoull_r+0x40>
  404fc2:	782b      	ldrb	r3, [r5, #0]
  404fc4:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404fc8:	2b58      	cmp	r3, #88	; 0x58
  404fca:	d012      	beq.n	404ff2 <_strtoull_r+0x18a>
  404fcc:	2307      	movs	r3, #7
  404fce:	9302      	str	r3, [sp, #8]
  404fd0:	f04f 32ff 	mov.w	r2, #4294967295
  404fd4:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
  404fd8:	f04f 0808 	mov.w	r8, #8
  404fdc:	f04f 0900 	mov.w	r9, #0
  404fe0:	2708      	movs	r7, #8
  404fe2:	e78a      	b.n	404efa <_strtoull_r+0x92>
  404fe4:	2c30      	cmp	r4, #48	; 0x30
  404fe6:	d114      	bne.n	405012 <_strtoull_r+0x1aa>
  404fe8:	782b      	ldrb	r3, [r5, #0]
  404fea:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404fee:	2b58      	cmp	r3, #88	; 0x58
  404ff0:	d10f      	bne.n	405012 <_strtoull_r+0x1aa>
  404ff2:	230f      	movs	r3, #15
  404ff4:	9302      	str	r3, [sp, #8]
  404ff6:	f04f 33ff 	mov.w	r3, #4294967295
  404ffa:	9301      	str	r3, [sp, #4]
  404ffc:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
  405000:	786c      	ldrb	r4, [r5, #1]
  405002:	9305      	str	r3, [sp, #20]
  405004:	3502      	adds	r5, #2
  405006:	f04f 0810 	mov.w	r8, #16
  40500a:	f04f 0900 	mov.w	r9, #0
  40500e:	2710      	movs	r7, #16
  405010:	e764      	b.n	404edc <_strtoull_r+0x74>
  405012:	230f      	movs	r3, #15
  405014:	9302      	str	r3, [sp, #8]
  405016:	f04f 32ff 	mov.w	r2, #4294967295
  40501a:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
  40501e:	f04f 0810 	mov.w	r8, #16
  405022:	f04f 0900 	mov.w	r9, #0
  405026:	e768      	b.n	404efa <_strtoull_r+0x92>
  405028:	2000043c 	.word	0x2000043c
  40502c:	19999999 	.word	0x19999999

00405030 <__submore>:
  405030:	f101 0340 	add.w	r3, r1, #64	; 0x40
  405034:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405038:	460c      	mov	r4, r1
  40503a:	6b09      	ldr	r1, [r1, #48]	; 0x30
  40503c:	4299      	cmp	r1, r3
  40503e:	d014      	beq.n	40506a <__submore+0x3a>
  405040:	6b66      	ldr	r6, [r4, #52]	; 0x34
  405042:	0077      	lsls	r7, r6, #1
  405044:	463a      	mov	r2, r7
  405046:	f7ff f9f5 	bl	404434 <_realloc_r>
  40504a:	4605      	mov	r5, r0
  40504c:	b340      	cbz	r0, 4050a0 <__submore+0x70>
  40504e:	eb00 0806 	add.w	r8, r0, r6
  405052:	4632      	mov	r2, r6
  405054:	4640      	mov	r0, r8
  405056:	4629      	mov	r1, r5
  405058:	f7ff f8ea 	bl	404230 <memcpy>
  40505c:	f8c4 8000 	str.w	r8, [r4]
  405060:	6325      	str	r5, [r4, #48]	; 0x30
  405062:	6367      	str	r7, [r4, #52]	; 0x34
  405064:	2000      	movs	r0, #0
  405066:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40506a:	f44f 6180 	mov.w	r1, #1024	; 0x400
  40506e:	f7fe fd8f 	bl	403b90 <_malloc_r>
  405072:	b1a8      	cbz	r0, 4050a0 <__submore+0x70>
  405074:	f894 3042 	ldrb.w	r3, [r4, #66]	; 0x42
  405078:	6320      	str	r0, [r4, #48]	; 0x30
  40507a:	f44f 6280 	mov.w	r2, #1024	; 0x400
  40507e:	6362      	str	r2, [r4, #52]	; 0x34
  405080:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
  405084:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
  405088:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
  40508c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
  405090:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
  405094:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
  405098:	6020      	str	r0, [r4, #0]
  40509a:	2000      	movs	r0, #0
  40509c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4050a0:	f04f 30ff 	mov.w	r0, #4294967295
  4050a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

004050a8 <_ungetc_r>:
  4050a8:	f1b1 3fff 	cmp.w	r1, #4294967295
  4050ac:	d068      	beq.n	405180 <_ungetc_r+0xd8>
  4050ae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4050b0:	4607      	mov	r7, r0
  4050b2:	4614      	mov	r4, r2
  4050b4:	460e      	mov	r6, r1
  4050b6:	b110      	cbz	r0, 4050be <_ungetc_r+0x16>
  4050b8:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4050ba:	2b00      	cmp	r3, #0
  4050bc:	d030      	beq.n	405120 <_ungetc_r+0x78>
  4050be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4050c2:	049d      	lsls	r5, r3, #18
  4050c4:	d405      	bmi.n	4050d2 <_ungetc_r+0x2a>
  4050c6:	6e62      	ldr	r2, [r4, #100]	; 0x64
  4050c8:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  4050cc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  4050d0:	6662      	str	r2, [r4, #100]	; 0x64
  4050d2:	f023 0320 	bic.w	r3, r3, #32
  4050d6:	b29a      	uxth	r2, r3
  4050d8:	0750      	lsls	r0, r2, #29
  4050da:	81a3      	strh	r3, [r4, #12]
  4050dc:	d406      	bmi.n	4050ec <_ungetc_r+0x44>
  4050de:	06d1      	lsls	r1, r2, #27
  4050e0:	d51b      	bpl.n	40511a <_ungetc_r+0x72>
  4050e2:	0712      	lsls	r2, r2, #28
  4050e4:	d438      	bmi.n	405158 <_ungetc_r+0xb0>
  4050e6:	f043 0304 	orr.w	r3, r3, #4
  4050ea:	81a3      	strh	r3, [r4, #12]
  4050ec:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4050ee:	b2f5      	uxtb	r5, r6
  4050f0:	b1cb      	cbz	r3, 405126 <_ungetc_r+0x7e>
  4050f2:	6862      	ldr	r2, [r4, #4]
  4050f4:	6b63      	ldr	r3, [r4, #52]	; 0x34
  4050f6:	429a      	cmp	r2, r3
  4050f8:	da09      	bge.n	40510e <_ungetc_r+0x66>
  4050fa:	6823      	ldr	r3, [r4, #0]
  4050fc:	1e5a      	subs	r2, r3, #1
  4050fe:	6022      	str	r2, [r4, #0]
  405100:	f803 6c01 	strb.w	r6, [r3, #-1]
  405104:	6863      	ldr	r3, [r4, #4]
  405106:	3301      	adds	r3, #1
  405108:	4628      	mov	r0, r5
  40510a:	6063      	str	r3, [r4, #4]
  40510c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40510e:	4638      	mov	r0, r7
  405110:	4621      	mov	r1, r4
  405112:	f7ff ff8d 	bl	405030 <__submore>
  405116:	2800      	cmp	r0, #0
  405118:	d0ef      	beq.n	4050fa <_ungetc_r+0x52>
  40511a:	f04f 30ff 	mov.w	r0, #4294967295
  40511e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405120:	f7fe f850 	bl	4031c4 <__sinit>
  405124:	e7cb      	b.n	4050be <_ungetc_r+0x16>
  405126:	6922      	ldr	r2, [r4, #16]
  405128:	6823      	ldr	r3, [r4, #0]
  40512a:	b12a      	cbz	r2, 405138 <_ungetc_r+0x90>
  40512c:	429a      	cmp	r2, r3
  40512e:	d203      	bcs.n	405138 <_ungetc_r+0x90>
  405130:	f813 2c01 	ldrb.w	r2, [r3, #-1]
  405134:	4295      	cmp	r5, r2
  405136:	d01c      	beq.n	405172 <_ungetc_r+0xca>
  405138:	63a3      	str	r3, [r4, #56]	; 0x38
  40513a:	4623      	mov	r3, r4
  40513c:	6860      	ldr	r0, [r4, #4]
  40513e:	63e0      	str	r0, [r4, #60]	; 0x3c
  405140:	f104 0140 	add.w	r1, r4, #64	; 0x40
  405144:	2203      	movs	r2, #3
  405146:	6362      	str	r2, [r4, #52]	; 0x34
  405148:	6321      	str	r1, [r4, #48]	; 0x30
  40514a:	f803 6f42 	strb.w	r6, [r3, #66]!
  40514e:	2201      	movs	r2, #1
  405150:	4628      	mov	r0, r5
  405152:	6023      	str	r3, [r4, #0]
  405154:	6062      	str	r2, [r4, #4]
  405156:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405158:	4621      	mov	r1, r4
  40515a:	4638      	mov	r0, r7
  40515c:	f7fd ff8c 	bl	403078 <_fflush_r>
  405160:	2800      	cmp	r0, #0
  405162:	d1da      	bne.n	40511a <_ungetc_r+0x72>
  405164:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405168:	60a0      	str	r0, [r4, #8]
  40516a:	61a0      	str	r0, [r4, #24]
  40516c:	f023 0308 	bic.w	r3, r3, #8
  405170:	e7b9      	b.n	4050e6 <_ungetc_r+0x3e>
  405172:	6862      	ldr	r2, [r4, #4]
  405174:	3b01      	subs	r3, #1
  405176:	3201      	adds	r2, #1
  405178:	6023      	str	r3, [r4, #0]
  40517a:	4628      	mov	r0, r5
  40517c:	6062      	str	r2, [r4, #4]
  40517e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405180:	f04f 30ff 	mov.w	r0, #4294967295
  405184:	4770      	bx	lr
  405186:	bf00      	nop

00405188 <__swbuf_r>:
  405188:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40518a:	460e      	mov	r6, r1
  40518c:	4614      	mov	r4, r2
  40518e:	4607      	mov	r7, r0
  405190:	b110      	cbz	r0, 405198 <__swbuf_r+0x10>
  405192:	6b83      	ldr	r3, [r0, #56]	; 0x38
  405194:	2b00      	cmp	r3, #0
  405196:	d04a      	beq.n	40522e <__swbuf_r+0xa6>
  405198:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40519c:	69a3      	ldr	r3, [r4, #24]
  40519e:	60a3      	str	r3, [r4, #8]
  4051a0:	b291      	uxth	r1, r2
  4051a2:	0708      	lsls	r0, r1, #28
  4051a4:	d538      	bpl.n	405218 <__swbuf_r+0x90>
  4051a6:	6923      	ldr	r3, [r4, #16]
  4051a8:	2b00      	cmp	r3, #0
  4051aa:	d035      	beq.n	405218 <__swbuf_r+0x90>
  4051ac:	0489      	lsls	r1, r1, #18
  4051ae:	b2f5      	uxtb	r5, r6
  4051b0:	d515      	bpl.n	4051de <__swbuf_r+0x56>
  4051b2:	6822      	ldr	r2, [r4, #0]
  4051b4:	6961      	ldr	r1, [r4, #20]
  4051b6:	1ad3      	subs	r3, r2, r3
  4051b8:	428b      	cmp	r3, r1
  4051ba:	da1c      	bge.n	4051f6 <__swbuf_r+0x6e>
  4051bc:	3301      	adds	r3, #1
  4051be:	68a1      	ldr	r1, [r4, #8]
  4051c0:	1c50      	adds	r0, r2, #1
  4051c2:	3901      	subs	r1, #1
  4051c4:	60a1      	str	r1, [r4, #8]
  4051c6:	6020      	str	r0, [r4, #0]
  4051c8:	7016      	strb	r6, [r2, #0]
  4051ca:	6962      	ldr	r2, [r4, #20]
  4051cc:	429a      	cmp	r2, r3
  4051ce:	d01a      	beq.n	405206 <__swbuf_r+0x7e>
  4051d0:	89a3      	ldrh	r3, [r4, #12]
  4051d2:	07db      	lsls	r3, r3, #31
  4051d4:	d501      	bpl.n	4051da <__swbuf_r+0x52>
  4051d6:	2d0a      	cmp	r5, #10
  4051d8:	d015      	beq.n	405206 <__swbuf_r+0x7e>
  4051da:	4628      	mov	r0, r5
  4051dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4051de:	6e61      	ldr	r1, [r4, #100]	; 0x64
  4051e0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4051e4:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  4051e8:	81a2      	strh	r2, [r4, #12]
  4051ea:	6822      	ldr	r2, [r4, #0]
  4051ec:	6661      	str	r1, [r4, #100]	; 0x64
  4051ee:	6961      	ldr	r1, [r4, #20]
  4051f0:	1ad3      	subs	r3, r2, r3
  4051f2:	428b      	cmp	r3, r1
  4051f4:	dbe2      	blt.n	4051bc <__swbuf_r+0x34>
  4051f6:	4621      	mov	r1, r4
  4051f8:	4638      	mov	r0, r7
  4051fa:	f7fd ff3d 	bl	403078 <_fflush_r>
  4051fe:	b940      	cbnz	r0, 405212 <__swbuf_r+0x8a>
  405200:	6822      	ldr	r2, [r4, #0]
  405202:	2301      	movs	r3, #1
  405204:	e7db      	b.n	4051be <__swbuf_r+0x36>
  405206:	4621      	mov	r1, r4
  405208:	4638      	mov	r0, r7
  40520a:	f7fd ff35 	bl	403078 <_fflush_r>
  40520e:	2800      	cmp	r0, #0
  405210:	d0e3      	beq.n	4051da <__swbuf_r+0x52>
  405212:	f04f 30ff 	mov.w	r0, #4294967295
  405216:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405218:	4621      	mov	r1, r4
  40521a:	4638      	mov	r0, r7
  40521c:	f7fd fe14 	bl	402e48 <__swsetup_r>
  405220:	2800      	cmp	r0, #0
  405222:	d1f6      	bne.n	405212 <__swbuf_r+0x8a>
  405224:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  405228:	6923      	ldr	r3, [r4, #16]
  40522a:	b291      	uxth	r1, r2
  40522c:	e7be      	b.n	4051ac <__swbuf_r+0x24>
  40522e:	f7fd ffc9 	bl	4031c4 <__sinit>
  405232:	e7b1      	b.n	405198 <__swbuf_r+0x10>

00405234 <_wcrtomb_r>:
  405234:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405238:	4605      	mov	r5, r0
  40523a:	b086      	sub	sp, #24
  40523c:	461e      	mov	r6, r3
  40523e:	460c      	mov	r4, r1
  405240:	b1a1      	cbz	r1, 40526c <_wcrtomb_r+0x38>
  405242:	4b10      	ldr	r3, [pc, #64]	; (405284 <_wcrtomb_r+0x50>)
  405244:	4617      	mov	r7, r2
  405246:	f8d3 8000 	ldr.w	r8, [r3]
  40524a:	f7fe fc1b 	bl	403a84 <__locale_charset>
  40524e:	9600      	str	r6, [sp, #0]
  405250:	4603      	mov	r3, r0
  405252:	463a      	mov	r2, r7
  405254:	4621      	mov	r1, r4
  405256:	4628      	mov	r0, r5
  405258:	47c0      	blx	r8
  40525a:	1c43      	adds	r3, r0, #1
  40525c:	d103      	bne.n	405266 <_wcrtomb_r+0x32>
  40525e:	2200      	movs	r2, #0
  405260:	238a      	movs	r3, #138	; 0x8a
  405262:	6032      	str	r2, [r6, #0]
  405264:	602b      	str	r3, [r5, #0]
  405266:	b006      	add	sp, #24
  405268:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40526c:	4b05      	ldr	r3, [pc, #20]	; (405284 <_wcrtomb_r+0x50>)
  40526e:	681f      	ldr	r7, [r3, #0]
  405270:	f7fe fc08 	bl	403a84 <__locale_charset>
  405274:	9600      	str	r6, [sp, #0]
  405276:	4603      	mov	r3, r0
  405278:	4622      	mov	r2, r4
  40527a:	a903      	add	r1, sp, #12
  40527c:	4628      	mov	r0, r5
  40527e:	47b8      	blx	r7
  405280:	e7eb      	b.n	40525a <_wcrtomb_r+0x26>
  405282:	bf00      	nop
  405284:	20000878 	.word	0x20000878

00405288 <__ascii_wctomb>:
  405288:	b121      	cbz	r1, 405294 <__ascii_wctomb+0xc>
  40528a:	2aff      	cmp	r2, #255	; 0xff
  40528c:	d804      	bhi.n	405298 <__ascii_wctomb+0x10>
  40528e:	700a      	strb	r2, [r1, #0]
  405290:	2001      	movs	r0, #1
  405292:	4770      	bx	lr
  405294:	4608      	mov	r0, r1
  405296:	4770      	bx	lr
  405298:	238a      	movs	r3, #138	; 0x8a
  40529a:	6003      	str	r3, [r0, #0]
  40529c:	f04f 30ff 	mov.w	r0, #4294967295
  4052a0:	4770      	bx	lr
  4052a2:	bf00      	nop

004052a4 <_write_r>:
  4052a4:	b570      	push	{r4, r5, r6, lr}
  4052a6:	460d      	mov	r5, r1
  4052a8:	4c08      	ldr	r4, [pc, #32]	; (4052cc <_write_r+0x28>)
  4052aa:	4611      	mov	r1, r2
  4052ac:	4606      	mov	r6, r0
  4052ae:	461a      	mov	r2, r3
  4052b0:	4628      	mov	r0, r5
  4052b2:	2300      	movs	r3, #0
  4052b4:	6023      	str	r3, [r4, #0]
  4052b6:	f7fa ff81 	bl	4001bc <_write>
  4052ba:	1c43      	adds	r3, r0, #1
  4052bc:	d000      	beq.n	4052c0 <_write_r+0x1c>
  4052be:	bd70      	pop	{r4, r5, r6, pc}
  4052c0:	6823      	ldr	r3, [r4, #0]
  4052c2:	2b00      	cmp	r3, #0
  4052c4:	d0fb      	beq.n	4052be <_write_r+0x1a>
  4052c6:	6033      	str	r3, [r6, #0]
  4052c8:	bd70      	pop	{r4, r5, r6, pc}
  4052ca:	bf00      	nop
  4052cc:	20000990 	.word	0x20000990

004052d0 <__register_exitproc>:
  4052d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4052d4:	4c25      	ldr	r4, [pc, #148]	; (40536c <__register_exitproc+0x9c>)
  4052d6:	6825      	ldr	r5, [r4, #0]
  4052d8:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
  4052dc:	4606      	mov	r6, r0
  4052de:	4688      	mov	r8, r1
  4052e0:	4692      	mov	sl, r2
  4052e2:	4699      	mov	r9, r3
  4052e4:	b3c4      	cbz	r4, 405358 <__register_exitproc+0x88>
  4052e6:	6860      	ldr	r0, [r4, #4]
  4052e8:	281f      	cmp	r0, #31
  4052ea:	dc17      	bgt.n	40531c <__register_exitproc+0x4c>
  4052ec:	1c43      	adds	r3, r0, #1
  4052ee:	b176      	cbz	r6, 40530e <__register_exitproc+0x3e>
  4052f0:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  4052f4:	2201      	movs	r2, #1
  4052f6:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  4052fa:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  4052fe:	4082      	lsls	r2, r0
  405300:	4311      	orrs	r1, r2
  405302:	2e02      	cmp	r6, #2
  405304:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  405308:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  40530c:	d01e      	beq.n	40534c <__register_exitproc+0x7c>
  40530e:	3002      	adds	r0, #2
  405310:	6063      	str	r3, [r4, #4]
  405312:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  405316:	2000      	movs	r0, #0
  405318:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40531c:	4b14      	ldr	r3, [pc, #80]	; (405370 <__register_exitproc+0xa0>)
  40531e:	b303      	cbz	r3, 405362 <__register_exitproc+0x92>
  405320:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405324:	f7fe fc2c 	bl	403b80 <malloc>
  405328:	4604      	mov	r4, r0
  40532a:	b1d0      	cbz	r0, 405362 <__register_exitproc+0x92>
  40532c:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  405330:	2700      	movs	r7, #0
  405332:	e880 0088 	stmia.w	r0, {r3, r7}
  405336:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  40533a:	4638      	mov	r0, r7
  40533c:	2301      	movs	r3, #1
  40533e:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  405342:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  405346:	2e00      	cmp	r6, #0
  405348:	d0e1      	beq.n	40530e <__register_exitproc+0x3e>
  40534a:	e7d1      	b.n	4052f0 <__register_exitproc+0x20>
  40534c:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  405350:	430a      	orrs	r2, r1
  405352:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  405356:	e7da      	b.n	40530e <__register_exitproc+0x3e>
  405358:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  40535c:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  405360:	e7c1      	b.n	4052e6 <__register_exitproc+0x16>
  405362:	f04f 30ff 	mov.w	r0, #4294967295
  405366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40536a:	bf00      	nop
  40536c:	00405ba0 	.word	0x00405ba0
  405370:	00403b81 	.word	0x00403b81

00405374 <_close_r>:
  405374:	b538      	push	{r3, r4, r5, lr}
  405376:	4c07      	ldr	r4, [pc, #28]	; (405394 <_close_r+0x20>)
  405378:	2300      	movs	r3, #0
  40537a:	4605      	mov	r5, r0
  40537c:	4608      	mov	r0, r1
  40537e:	6023      	str	r3, [r4, #0]
  405380:	f7fb fa60 	bl	400844 <_close>
  405384:	1c43      	adds	r3, r0, #1
  405386:	d000      	beq.n	40538a <_close_r+0x16>
  405388:	bd38      	pop	{r3, r4, r5, pc}
  40538a:	6823      	ldr	r3, [r4, #0]
  40538c:	2b00      	cmp	r3, #0
  40538e:	d0fb      	beq.n	405388 <_close_r+0x14>
  405390:	602b      	str	r3, [r5, #0]
  405392:	bd38      	pop	{r3, r4, r5, pc}
  405394:	20000990 	.word	0x20000990

00405398 <_fclose_r>:
  405398:	2900      	cmp	r1, #0
  40539a:	d03d      	beq.n	405418 <_fclose_r+0x80>
  40539c:	b570      	push	{r4, r5, r6, lr}
  40539e:	4605      	mov	r5, r0
  4053a0:	460c      	mov	r4, r1
  4053a2:	b108      	cbz	r0, 4053a8 <_fclose_r+0x10>
  4053a4:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4053a6:	b37b      	cbz	r3, 405408 <_fclose_r+0x70>
  4053a8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4053ac:	b90b      	cbnz	r3, 4053b2 <_fclose_r+0x1a>
  4053ae:	2000      	movs	r0, #0
  4053b0:	bd70      	pop	{r4, r5, r6, pc}
  4053b2:	4621      	mov	r1, r4
  4053b4:	4628      	mov	r0, r5
  4053b6:	f7fd fdbb 	bl	402f30 <__sflush_r>
  4053ba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  4053bc:	4606      	mov	r6, r0
  4053be:	b133      	cbz	r3, 4053ce <_fclose_r+0x36>
  4053c0:	69e1      	ldr	r1, [r4, #28]
  4053c2:	4628      	mov	r0, r5
  4053c4:	4798      	blx	r3
  4053c6:	2800      	cmp	r0, #0
  4053c8:	bfb8      	it	lt
  4053ca:	f04f 36ff 	movlt.w	r6, #4294967295
  4053ce:	89a3      	ldrh	r3, [r4, #12]
  4053d0:	061b      	lsls	r3, r3, #24
  4053d2:	d41c      	bmi.n	40540e <_fclose_r+0x76>
  4053d4:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4053d6:	b141      	cbz	r1, 4053ea <_fclose_r+0x52>
  4053d8:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4053dc:	4299      	cmp	r1, r3
  4053de:	d002      	beq.n	4053e6 <_fclose_r+0x4e>
  4053e0:	4628      	mov	r0, r5
  4053e2:	f7fe f887 	bl	4034f4 <_free_r>
  4053e6:	2300      	movs	r3, #0
  4053e8:	6323      	str	r3, [r4, #48]	; 0x30
  4053ea:	6c61      	ldr	r1, [r4, #68]	; 0x44
  4053ec:	b121      	cbz	r1, 4053f8 <_fclose_r+0x60>
  4053ee:	4628      	mov	r0, r5
  4053f0:	f7fe f880 	bl	4034f4 <_free_r>
  4053f4:	2300      	movs	r3, #0
  4053f6:	6463      	str	r3, [r4, #68]	; 0x44
  4053f8:	f7fd feea 	bl	4031d0 <__sfp_lock_acquire>
  4053fc:	2300      	movs	r3, #0
  4053fe:	81a3      	strh	r3, [r4, #12]
  405400:	f7fd fee8 	bl	4031d4 <__sfp_lock_release>
  405404:	4630      	mov	r0, r6
  405406:	bd70      	pop	{r4, r5, r6, pc}
  405408:	f7fd fedc 	bl	4031c4 <__sinit>
  40540c:	e7cc      	b.n	4053a8 <_fclose_r+0x10>
  40540e:	6921      	ldr	r1, [r4, #16]
  405410:	4628      	mov	r0, r5
  405412:	f7fe f86f 	bl	4034f4 <_free_r>
  405416:	e7dd      	b.n	4053d4 <_fclose_r+0x3c>
  405418:	2000      	movs	r0, #0
  40541a:	4770      	bx	lr

0040541c <_fstat_r>:
  40541c:	b538      	push	{r3, r4, r5, lr}
  40541e:	460b      	mov	r3, r1
  405420:	4c07      	ldr	r4, [pc, #28]	; (405440 <_fstat_r+0x24>)
  405422:	4605      	mov	r5, r0
  405424:	4611      	mov	r1, r2
  405426:	4618      	mov	r0, r3
  405428:	2300      	movs	r3, #0
  40542a:	6023      	str	r3, [r4, #0]
  40542c:	f7fb fa0e 	bl	40084c <_fstat>
  405430:	1c43      	adds	r3, r0, #1
  405432:	d000      	beq.n	405436 <_fstat_r+0x1a>
  405434:	bd38      	pop	{r3, r4, r5, pc}
  405436:	6823      	ldr	r3, [r4, #0]
  405438:	2b00      	cmp	r3, #0
  40543a:	d0fb      	beq.n	405434 <_fstat_r+0x18>
  40543c:	602b      	str	r3, [r5, #0]
  40543e:	bd38      	pop	{r3, r4, r5, pc}
  405440:	20000990 	.word	0x20000990

00405444 <_isatty_r>:
  405444:	b538      	push	{r3, r4, r5, lr}
  405446:	4c07      	ldr	r4, [pc, #28]	; (405464 <_isatty_r+0x20>)
  405448:	2300      	movs	r3, #0
  40544a:	4605      	mov	r5, r0
  40544c:	4608      	mov	r0, r1
  40544e:	6023      	str	r3, [r4, #0]
  405450:	f7fb fa02 	bl	400858 <_isatty>
  405454:	1c43      	adds	r3, r0, #1
  405456:	d000      	beq.n	40545a <_isatty_r+0x16>
  405458:	bd38      	pop	{r3, r4, r5, pc}
  40545a:	6823      	ldr	r3, [r4, #0]
  40545c:	2b00      	cmp	r3, #0
  40545e:	d0fb      	beq.n	405458 <_isatty_r+0x14>
  405460:	602b      	str	r3, [r5, #0]
  405462:	bd38      	pop	{r3, r4, r5, pc}
  405464:	20000990 	.word	0x20000990

00405468 <_lseek_r>:
  405468:	b570      	push	{r4, r5, r6, lr}
  40546a:	460d      	mov	r5, r1
  40546c:	4c08      	ldr	r4, [pc, #32]	; (405490 <_lseek_r+0x28>)
  40546e:	4611      	mov	r1, r2
  405470:	4606      	mov	r6, r0
  405472:	461a      	mov	r2, r3
  405474:	4628      	mov	r0, r5
  405476:	2300      	movs	r3, #0
  405478:	6023      	str	r3, [r4, #0]
  40547a:	f7fb f9ef 	bl	40085c <_lseek>
  40547e:	1c43      	adds	r3, r0, #1
  405480:	d000      	beq.n	405484 <_lseek_r+0x1c>
  405482:	bd70      	pop	{r4, r5, r6, pc}
  405484:	6823      	ldr	r3, [r4, #0]
  405486:	2b00      	cmp	r3, #0
  405488:	d0fb      	beq.n	405482 <_lseek_r+0x1a>
  40548a:	6033      	str	r3, [r6, #0]
  40548c:	bd70      	pop	{r4, r5, r6, pc}
  40548e:	bf00      	nop
  405490:	20000990 	.word	0x20000990

00405494 <_read_r>:
  405494:	b570      	push	{r4, r5, r6, lr}
  405496:	460d      	mov	r5, r1
  405498:	4c08      	ldr	r4, [pc, #32]	; (4054bc <_read_r+0x28>)
  40549a:	4611      	mov	r1, r2
  40549c:	4606      	mov	r6, r0
  40549e:	461a      	mov	r2, r3
  4054a0:	4628      	mov	r0, r5
  4054a2:	2300      	movs	r3, #0
  4054a4:	6023      	str	r3, [r4, #0]
  4054a6:	f7fa fe6b 	bl	400180 <_read>
  4054aa:	1c43      	adds	r3, r0, #1
  4054ac:	d000      	beq.n	4054b0 <_read_r+0x1c>
  4054ae:	bd70      	pop	{r4, r5, r6, pc}
  4054b0:	6823      	ldr	r3, [r4, #0]
  4054b2:	2b00      	cmp	r3, #0
  4054b4:	d0fb      	beq.n	4054ae <_read_r+0x1a>
  4054b6:	6033      	str	r3, [r6, #0]
  4054b8:	bd70      	pop	{r4, r5, r6, pc}
  4054ba:	bf00      	nop
  4054bc:	20000990 	.word	0x20000990

004054c0 <__aeabi_uldivmod>:
  4054c0:	b953      	cbnz	r3, 4054d8 <__aeabi_uldivmod+0x18>
  4054c2:	b94a      	cbnz	r2, 4054d8 <__aeabi_uldivmod+0x18>
  4054c4:	2900      	cmp	r1, #0
  4054c6:	bf08      	it	eq
  4054c8:	2800      	cmpeq	r0, #0
  4054ca:	bf1c      	itt	ne
  4054cc:	f04f 31ff 	movne.w	r1, #4294967295
  4054d0:	f04f 30ff 	movne.w	r0, #4294967295
  4054d4:	f000 b97e 	b.w	4057d4 <__aeabi_idiv0>
  4054d8:	f1ad 0c08 	sub.w	ip, sp, #8
  4054dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  4054e0:	f000 f806 	bl	4054f0 <__udivmoddi4>
  4054e4:	f8dd e004 	ldr.w	lr, [sp, #4]
  4054e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4054ec:	b004      	add	sp, #16
  4054ee:	4770      	bx	lr

004054f0 <__udivmoddi4>:
  4054f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4054f4:	468c      	mov	ip, r1
  4054f6:	460e      	mov	r6, r1
  4054f8:	4604      	mov	r4, r0
  4054fa:	9d08      	ldr	r5, [sp, #32]
  4054fc:	2b00      	cmp	r3, #0
  4054fe:	d150      	bne.n	4055a2 <__udivmoddi4+0xb2>
  405500:	428a      	cmp	r2, r1
  405502:	4617      	mov	r7, r2
  405504:	d96c      	bls.n	4055e0 <__udivmoddi4+0xf0>
  405506:	fab2 fe82 	clz	lr, r2
  40550a:	f1be 0f00 	cmp.w	lr, #0
  40550e:	d00b      	beq.n	405528 <__udivmoddi4+0x38>
  405510:	f1ce 0420 	rsb	r4, lr, #32
  405514:	fa20 f404 	lsr.w	r4, r0, r4
  405518:	fa01 f60e 	lsl.w	r6, r1, lr
  40551c:	ea44 0c06 	orr.w	ip, r4, r6
  405520:	fa02 f70e 	lsl.w	r7, r2, lr
  405524:	fa00 f40e 	lsl.w	r4, r0, lr
  405528:	ea4f 4917 	mov.w	r9, r7, lsr #16
  40552c:	0c22      	lsrs	r2, r4, #16
  40552e:	fbbc f0f9 	udiv	r0, ip, r9
  405532:	fa1f f887 	uxth.w	r8, r7
  405536:	fb09 c610 	mls	r6, r9, r0, ip
  40553a:	ea42 4606 	orr.w	r6, r2, r6, lsl #16
  40553e:	fb00 f308 	mul.w	r3, r0, r8
  405542:	42b3      	cmp	r3, r6
  405544:	d909      	bls.n	40555a <__udivmoddi4+0x6a>
  405546:	19f6      	adds	r6, r6, r7
  405548:	f100 32ff 	add.w	r2, r0, #4294967295
  40554c:	f080 8122 	bcs.w	405794 <__udivmoddi4+0x2a4>
  405550:	42b3      	cmp	r3, r6
  405552:	f240 811f 	bls.w	405794 <__udivmoddi4+0x2a4>
  405556:	3802      	subs	r0, #2
  405558:	443e      	add	r6, r7
  40555a:	1af6      	subs	r6, r6, r3
  40555c:	b2a2      	uxth	r2, r4
  40555e:	fbb6 f3f9 	udiv	r3, r6, r9
  405562:	fb09 6613 	mls	r6, r9, r3, r6
  405566:	ea42 4406 	orr.w	r4, r2, r6, lsl #16
  40556a:	fb03 f808 	mul.w	r8, r3, r8
  40556e:	45a0      	cmp	r8, r4
  405570:	d909      	bls.n	405586 <__udivmoddi4+0x96>
  405572:	19e4      	adds	r4, r4, r7
  405574:	f103 32ff 	add.w	r2, r3, #4294967295
  405578:	f080 810a 	bcs.w	405790 <__udivmoddi4+0x2a0>
  40557c:	45a0      	cmp	r8, r4
  40557e:	f240 8107 	bls.w	405790 <__udivmoddi4+0x2a0>
  405582:	3b02      	subs	r3, #2
  405584:	443c      	add	r4, r7
  405586:	ebc8 0404 	rsb	r4, r8, r4
  40558a:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  40558e:	2100      	movs	r1, #0
  405590:	2d00      	cmp	r5, #0
  405592:	d062      	beq.n	40565a <__udivmoddi4+0x16a>
  405594:	fa24 f40e 	lsr.w	r4, r4, lr
  405598:	2300      	movs	r3, #0
  40559a:	602c      	str	r4, [r5, #0]
  40559c:	606b      	str	r3, [r5, #4]
  40559e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4055a2:	428b      	cmp	r3, r1
  4055a4:	d907      	bls.n	4055b6 <__udivmoddi4+0xc6>
  4055a6:	2d00      	cmp	r5, #0
  4055a8:	d055      	beq.n	405656 <__udivmoddi4+0x166>
  4055aa:	2100      	movs	r1, #0
  4055ac:	e885 0041 	stmia.w	r5, {r0, r6}
  4055b0:	4608      	mov	r0, r1
  4055b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4055b6:	fab3 f183 	clz	r1, r3
  4055ba:	2900      	cmp	r1, #0
  4055bc:	f040 8090 	bne.w	4056e0 <__udivmoddi4+0x1f0>
  4055c0:	42b3      	cmp	r3, r6
  4055c2:	d302      	bcc.n	4055ca <__udivmoddi4+0xda>
  4055c4:	4282      	cmp	r2, r0
  4055c6:	f200 80f8 	bhi.w	4057ba <__udivmoddi4+0x2ca>
  4055ca:	1a84      	subs	r4, r0, r2
  4055cc:	eb66 0603 	sbc.w	r6, r6, r3
  4055d0:	2001      	movs	r0, #1
  4055d2:	46b4      	mov	ip, r6
  4055d4:	2d00      	cmp	r5, #0
  4055d6:	d040      	beq.n	40565a <__udivmoddi4+0x16a>
  4055d8:	e885 1010 	stmia.w	r5, {r4, ip}
  4055dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4055e0:	b912      	cbnz	r2, 4055e8 <__udivmoddi4+0xf8>
  4055e2:	2701      	movs	r7, #1
  4055e4:	fbb7 f7f2 	udiv	r7, r7, r2
  4055e8:	fab7 fe87 	clz	lr, r7
  4055ec:	f1be 0f00 	cmp.w	lr, #0
  4055f0:	d135      	bne.n	40565e <__udivmoddi4+0x16e>
  4055f2:	1bf3      	subs	r3, r6, r7
  4055f4:	ea4f 4817 	mov.w	r8, r7, lsr #16
  4055f8:	fa1f fc87 	uxth.w	ip, r7
  4055fc:	2101      	movs	r1, #1
  4055fe:	fbb3 f0f8 	udiv	r0, r3, r8
  405602:	0c22      	lsrs	r2, r4, #16
  405604:	fb08 3610 	mls	r6, r8, r0, r3
  405608:	ea42 4606 	orr.w	r6, r2, r6, lsl #16
  40560c:	fb0c f300 	mul.w	r3, ip, r0
  405610:	42b3      	cmp	r3, r6
  405612:	d907      	bls.n	405624 <__udivmoddi4+0x134>
  405614:	19f6      	adds	r6, r6, r7
  405616:	f100 32ff 	add.w	r2, r0, #4294967295
  40561a:	d202      	bcs.n	405622 <__udivmoddi4+0x132>
  40561c:	42b3      	cmp	r3, r6
  40561e:	f200 80ce 	bhi.w	4057be <__udivmoddi4+0x2ce>
  405622:	4610      	mov	r0, r2
  405624:	1af6      	subs	r6, r6, r3
  405626:	b2a2      	uxth	r2, r4
  405628:	fbb6 f3f8 	udiv	r3, r6, r8
  40562c:	fb08 6613 	mls	r6, r8, r3, r6
  405630:	ea42 4406 	orr.w	r4, r2, r6, lsl #16
  405634:	fb0c fc03 	mul.w	ip, ip, r3
  405638:	45a4      	cmp	ip, r4
  40563a:	d907      	bls.n	40564c <__udivmoddi4+0x15c>
  40563c:	19e4      	adds	r4, r4, r7
  40563e:	f103 32ff 	add.w	r2, r3, #4294967295
  405642:	d202      	bcs.n	40564a <__udivmoddi4+0x15a>
  405644:	45a4      	cmp	ip, r4
  405646:	f200 80b5 	bhi.w	4057b4 <__udivmoddi4+0x2c4>
  40564a:	4613      	mov	r3, r2
  40564c:	ebcc 0404 	rsb	r4, ip, r4
  405650:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  405654:	e79c      	b.n	405590 <__udivmoddi4+0xa0>
  405656:	4629      	mov	r1, r5
  405658:	4628      	mov	r0, r5
  40565a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40565e:	f1ce 0120 	rsb	r1, lr, #32
  405662:	fa06 f30e 	lsl.w	r3, r6, lr
  405666:	fa07 f70e 	lsl.w	r7, r7, lr
  40566a:	fa20 f901 	lsr.w	r9, r0, r1
  40566e:	ea4f 4817 	mov.w	r8, r7, lsr #16
  405672:	40ce      	lsrs	r6, r1
  405674:	ea49 0903 	orr.w	r9, r9, r3
  405678:	fbb6 faf8 	udiv	sl, r6, r8
  40567c:	ea4f 4419 	mov.w	r4, r9, lsr #16
  405680:	fb08 661a 	mls	r6, r8, sl, r6
  405684:	fa1f fc87 	uxth.w	ip, r7
  405688:	ea44 4306 	orr.w	r3, r4, r6, lsl #16
  40568c:	fb0a f20c 	mul.w	r2, sl, ip
  405690:	429a      	cmp	r2, r3
  405692:	fa00 f40e 	lsl.w	r4, r0, lr
  405696:	d90a      	bls.n	4056ae <__udivmoddi4+0x1be>
  405698:	19db      	adds	r3, r3, r7
  40569a:	f10a 31ff 	add.w	r1, sl, #4294967295
  40569e:	f080 8087 	bcs.w	4057b0 <__udivmoddi4+0x2c0>
  4056a2:	429a      	cmp	r2, r3
  4056a4:	f240 8084 	bls.w	4057b0 <__udivmoddi4+0x2c0>
  4056a8:	f1aa 0a02 	sub.w	sl, sl, #2
  4056ac:	443b      	add	r3, r7
  4056ae:	1a9b      	subs	r3, r3, r2
  4056b0:	fa1f f989 	uxth.w	r9, r9
  4056b4:	fbb3 f1f8 	udiv	r1, r3, r8
  4056b8:	fb08 3311 	mls	r3, r8, r1, r3
  4056bc:	ea49 4303 	orr.w	r3, r9, r3, lsl #16
  4056c0:	fb01 f60c 	mul.w	r6, r1, ip
  4056c4:	429e      	cmp	r6, r3
  4056c6:	d907      	bls.n	4056d8 <__udivmoddi4+0x1e8>
  4056c8:	19db      	adds	r3, r3, r7
  4056ca:	f101 32ff 	add.w	r2, r1, #4294967295
  4056ce:	d26b      	bcs.n	4057a8 <__udivmoddi4+0x2b8>
  4056d0:	429e      	cmp	r6, r3
  4056d2:	d969      	bls.n	4057a8 <__udivmoddi4+0x2b8>
  4056d4:	3902      	subs	r1, #2
  4056d6:	443b      	add	r3, r7
  4056d8:	1b9b      	subs	r3, r3, r6
  4056da:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
  4056de:	e78e      	b.n	4055fe <__udivmoddi4+0x10e>
  4056e0:	f1c1 0e20 	rsb	lr, r1, #32
  4056e4:	fa22 f40e 	lsr.w	r4, r2, lr
  4056e8:	408b      	lsls	r3, r1
  4056ea:	4323      	orrs	r3, r4
  4056ec:	fa20 f70e 	lsr.w	r7, r0, lr
  4056f0:	fa06 f401 	lsl.w	r4, r6, r1
  4056f4:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  4056f8:	fa26 f60e 	lsr.w	r6, r6, lr
  4056fc:	433c      	orrs	r4, r7
  4056fe:	fbb6 f9fc 	udiv	r9, r6, ip
  405702:	0c27      	lsrs	r7, r4, #16
  405704:	fb0c 6619 	mls	r6, ip, r9, r6
  405708:	fa1f f883 	uxth.w	r8, r3
  40570c:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
  405710:	fb09 f708 	mul.w	r7, r9, r8
  405714:	42b7      	cmp	r7, r6
  405716:	fa02 f201 	lsl.w	r2, r2, r1
  40571a:	fa00 fa01 	lsl.w	sl, r0, r1
  40571e:	d908      	bls.n	405732 <__udivmoddi4+0x242>
  405720:	18f6      	adds	r6, r6, r3
  405722:	f109 30ff 	add.w	r0, r9, #4294967295
  405726:	d241      	bcs.n	4057ac <__udivmoddi4+0x2bc>
  405728:	42b7      	cmp	r7, r6
  40572a:	d93f      	bls.n	4057ac <__udivmoddi4+0x2bc>
  40572c:	f1a9 0902 	sub.w	r9, r9, #2
  405730:	441e      	add	r6, r3
  405732:	1bf6      	subs	r6, r6, r7
  405734:	b2a0      	uxth	r0, r4
  405736:	fbb6 f4fc 	udiv	r4, r6, ip
  40573a:	fb0c 6614 	mls	r6, ip, r4, r6
  40573e:	ea40 4706 	orr.w	r7, r0, r6, lsl #16
  405742:	fb04 f808 	mul.w	r8, r4, r8
  405746:	45b8      	cmp	r8, r7
  405748:	d907      	bls.n	40575a <__udivmoddi4+0x26a>
  40574a:	18ff      	adds	r7, r7, r3
  40574c:	f104 30ff 	add.w	r0, r4, #4294967295
  405750:	d228      	bcs.n	4057a4 <__udivmoddi4+0x2b4>
  405752:	45b8      	cmp	r8, r7
  405754:	d926      	bls.n	4057a4 <__udivmoddi4+0x2b4>
  405756:	3c02      	subs	r4, #2
  405758:	441f      	add	r7, r3
  40575a:	ea44 4009 	orr.w	r0, r4, r9, lsl #16
  40575e:	ebc8 0707 	rsb	r7, r8, r7
  405762:	fba0 8902 	umull	r8, r9, r0, r2
  405766:	454f      	cmp	r7, r9
  405768:	4644      	mov	r4, r8
  40576a:	464e      	mov	r6, r9
  40576c:	d314      	bcc.n	405798 <__udivmoddi4+0x2a8>
  40576e:	d029      	beq.n	4057c4 <__udivmoddi4+0x2d4>
  405770:	b365      	cbz	r5, 4057cc <__udivmoddi4+0x2dc>
  405772:	ebba 0304 	subs.w	r3, sl, r4
  405776:	eb67 0706 	sbc.w	r7, r7, r6
  40577a:	fa07 fe0e 	lsl.w	lr, r7, lr
  40577e:	40cb      	lsrs	r3, r1
  405780:	40cf      	lsrs	r7, r1
  405782:	ea4e 0303 	orr.w	r3, lr, r3
  405786:	e885 0088 	stmia.w	r5, {r3, r7}
  40578a:	2100      	movs	r1, #0
  40578c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405790:	4613      	mov	r3, r2
  405792:	e6f8      	b.n	405586 <__udivmoddi4+0x96>
  405794:	4610      	mov	r0, r2
  405796:	e6e0      	b.n	40555a <__udivmoddi4+0x6a>
  405798:	ebb8 0402 	subs.w	r4, r8, r2
  40579c:	eb69 0603 	sbc.w	r6, r9, r3
  4057a0:	3801      	subs	r0, #1
  4057a2:	e7e5      	b.n	405770 <__udivmoddi4+0x280>
  4057a4:	4604      	mov	r4, r0
  4057a6:	e7d8      	b.n	40575a <__udivmoddi4+0x26a>
  4057a8:	4611      	mov	r1, r2
  4057aa:	e795      	b.n	4056d8 <__udivmoddi4+0x1e8>
  4057ac:	4681      	mov	r9, r0
  4057ae:	e7c0      	b.n	405732 <__udivmoddi4+0x242>
  4057b0:	468a      	mov	sl, r1
  4057b2:	e77c      	b.n	4056ae <__udivmoddi4+0x1be>
  4057b4:	3b02      	subs	r3, #2
  4057b6:	443c      	add	r4, r7
  4057b8:	e748      	b.n	40564c <__udivmoddi4+0x15c>
  4057ba:	4608      	mov	r0, r1
  4057bc:	e70a      	b.n	4055d4 <__udivmoddi4+0xe4>
  4057be:	3802      	subs	r0, #2
  4057c0:	443e      	add	r6, r7
  4057c2:	e72f      	b.n	405624 <__udivmoddi4+0x134>
  4057c4:	45c2      	cmp	sl, r8
  4057c6:	d3e7      	bcc.n	405798 <__udivmoddi4+0x2a8>
  4057c8:	463e      	mov	r6, r7
  4057ca:	e7d1      	b.n	405770 <__udivmoddi4+0x280>
  4057cc:	4629      	mov	r1, r5
  4057ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4057d2:	bf00      	nop

004057d4 <__aeabi_idiv0>:
  4057d4:	4770      	bx	lr
  4057d6:	bf00      	nop
  4057d8:	654d0d0a 	.word	0x654d0d0a
  4057dc:	3a20756e 	.word	0x3a20756e
  4057e0:	2d2d0d0a 	.word	0x2d2d0d0a
  4057e4:	2d2d2d2d 	.word	0x2d2d2d2d
  4057e8:	0000000d 	.word	0x0000000d
  4057ec:	75252020 	.word	0x75252020
  4057f0:	6553203a 	.word	0x6553203a
  4057f4:	50532074 	.word	0x50532074
  4057f8:	3d204b43 	.word	0x3d204b43
  4057fc:	6c372520 	.word	0x6c372520
  405800:	7a482075 	.word	0x7a482075
  405804:	00000d0a 	.word	0x00000d0a
  405808:	3a742020 	.word	0x3a742020
  40580c:	72655020 	.word	0x72655020
  405810:	6d726f66 	.word	0x6d726f66
  405814:	49505320 	.word	0x49505320
  405818:	73616d20 	.word	0x73616d20
  40581c:	0a726574 	.word	0x0a726574
  405820:	6820200d 	.word	0x6820200d
  405824:	6944203a 	.word	0x6944203a
  405828:	616c7073 	.word	0x616c7073
  40582c:	68742079 	.word	0x68742079
  405830:	6d207369 	.word	0x6d207369
  405834:	20756e65 	.word	0x20756e65
  405838:	69616761 	.word	0x69616761
  40583c:	0d0d0a6e 	.word	0x0d0d0a6e
  405840:	00000000 	.word	0x00000000
  405844:	202d492d 	.word	0x202d492d
  405848:	74696e49 	.word	0x74696e49
  40584c:	696c6169 	.word	0x696c6169
  405850:	5320657a 	.word	0x5320657a
  405854:	61204950 	.word	0x61204950
  405858:	616d2073 	.word	0x616d2073
  40585c:	72657473 	.word	0x72657473
  405860:	0000000d 	.word	0x0000000d
  405864:	70532d2d 	.word	0x70532d2d
  405868:	78452069 	.word	0x78452069
  40586c:	6c706d61 	.word	0x6c706d61
  405870:	2d2d2065 	.word	0x2d2d2065
  405874:	2d2d0a0d 	.word	0x2d2d0a0d
  405878:	4d415320 	.word	0x4d415320
  40587c:	585f4e34 	.word	0x585f4e34
  405880:	49414c50 	.word	0x49414c50
  405884:	5f44454e 	.word	0x5f44454e
  405888:	204f5250 	.word	0x204f5250
  40588c:	0a0d2d2d 	.word	0x0a0d2d2d
  405890:	43202d2d 	.word	0x43202d2d
  405894:	69706d6f 	.word	0x69706d6f
  405898:	3a64656c 	.word	0x3a64656c
  40589c:	74634f20 	.word	0x74634f20
  4058a0:	20312020 	.word	0x20312020
  4058a4:	37313032 	.word	0x37313032
  4058a8:	3a313020 	.word	0x3a313020
  4058ac:	343a3634 	.word	0x343a3634
  4058b0:	2d2d2039 	.word	0x2d2d2039
  4058b4:	0000000d 	.word	0x0000000d
  4058b8:	202d492d 	.word	0x202d492d
  4058bc:	74696e49 	.word	0x74696e49
  4058c0:	696c6169 	.word	0x696c6169
  4058c4:	5320657a 	.word	0x5320657a
  4058c8:	61204950 	.word	0x61204950
  4058cc:	6c732073 	.word	0x6c732073
  4058d0:	20657661 	.word	0x20657661
  4058d4:	0000000d 	.word	0x0000000d
  4058d8:	00006325 	.word	0x00006325
  4058dc:	4d203e2d 	.word	0x4d203e2d
  4058e0:	65747361 	.word	0x65747361
  4058e4:	65732072 	.word	0x65732072
  4058e8:	6e69646e 	.word	0x6e69646e
  4058ec:	4d432067 	.word	0x4d432067
  4058f0:	45545f44 	.word	0x45545f44
  4058f4:	2e2e5453 	.word	0x2e2e5453
  4058f8:	000d202e 	.word	0x000d202e
  4058fc:	3c202020 	.word	0x3c202020
  405900:	6c53202d 	.word	0x6c53202d
  405904:	20657661 	.word	0x20657661
  405908:	70736572 	.word	0x70736572
  40590c:	65736e6f 	.word	0x65736e6f
  405910:	5f435220 	.word	0x5f435220
  405914:	2c4e5953 	.word	0x2c4e5953
  405918:	5f435220 	.word	0x5f435220
  40591c:	20594452 	.word	0x20594452
  405920:	0000000d 	.word	0x0000000d
  405924:	4d203e2d 	.word	0x4d203e2d
  405928:	65747361 	.word	0x65747361
  40592c:	65732072 	.word	0x65732072
  405930:	6e69646e 	.word	0x6e69646e
  405934:	4d432067 	.word	0x4d432067
  405938:	41445f44 	.word	0x41445f44
  40593c:	2e2e4154 	.word	0x2e2e4154
  405940:	000d202e 	.word	0x000d202e
  405944:	20202020 	.word	0x20202020
  405948:	20202020 	.word	0x20202020
  40594c:	20202020 	.word	0x20202020
  405950:	20202020 	.word	0x20202020
  405954:	20202020 	.word	0x20202020
  405958:	20202020 	.word	0x20202020
  40595c:	20202020 	.word	0x20202020
  405960:	20202020 	.word	0x20202020
  405964:	2d2d2d3c 	.word	0x2d2d2d3c
  405968:	6c53202d 	.word	0x6c53202d
  40596c:	20657661 	.word	0x20657661
  405970:	70736572 	.word	0x70736572
  405974:	65736e6f 	.word	0x65736e6f
  405978:	5f435220 	.word	0x5f435220
  40597c:	20594452 	.word	0x20594452
  405980:	0000000d 	.word	0x0000000d
  405984:	202d452d 	.word	0x202d452d
  405988:	70736552 	.word	0x70736552
  40598c:	65736e6f 	.word	0x65736e6f
  405990:	656e7520 	.word	0x656e7520
  405994:	63657078 	.word	0x63657078
  405998:	3a646574 	.word	0x3a646574
  40599c:	25783020 	.word	0x25783020
  4059a0:	0d0a2078 	.word	0x0d0a2078
  4059a4:	00000000 	.word	0x00000000
  4059a8:	4d203e2d 	.word	0x4d203e2d
  4059ac:	65747361 	.word	0x65747361
  4059b0:	65732072 	.word	0x65732072
  4059b4:	6e69646e 	.word	0x6e69646e
  4059b8:	6c622067 	.word	0x6c622067
  4059bc:	206b636f 	.word	0x206b636f
  4059c0:	2e207525 	.word	0x2e207525
  4059c4:	0a202e2e 	.word	0x0a202e2e
  4059c8:	0000000d 	.word	0x0000000d
  4059cc:	4d203e2d 	.word	0x4d203e2d
  4059d0:	65747361 	.word	0x65747361
  4059d4:	65732072 	.word	0x65732072
  4059d8:	6e69646e 	.word	0x6e69646e
  4059dc:	4d432067 	.word	0x4d432067
  4059e0:	54535f44 	.word	0x54535f44
  4059e4:	53555441 	.word	0x53555441
  4059e8:	202e2e2e 	.word	0x202e2e2e
  4059ec:	0000000d 	.word	0x0000000d
  4059f0:	3c202020 	.word	0x3c202020
  4059f4:	6c53202d 	.word	0x6c53202d
  4059f8:	20657661 	.word	0x20657661
  4059fc:	70736572 	.word	0x70736572
  405a00:	65736e6f 	.word	0x65736e6f
  405a04:	5f435220 	.word	0x5f435220
  405a08:	20594452 	.word	0x20594452
  405a0c:	0000000d 	.word	0x0000000d
  405a10:	3c202020 	.word	0x3c202020
  405a14:	6c53202d 	.word	0x6c53202d
  405a18:	20657661 	.word	0x20657661
  405a1c:	72206f6e 	.word	0x72206f6e
  405a20:	6f707365 	.word	0x6f707365
  405a24:	2065736e 	.word	0x2065736e
  405a28:	0000000d 	.word	0x0000000d
  405a2c:	4d203e2d 	.word	0x4d203e2d
  405a30:	65747361 	.word	0x65747361
  405a34:	65722072 	.word	0x65722072
  405a38:	73657571 	.word	0x73657571
  405a3c:	6c732074 	.word	0x6c732074
  405a40:	20657661 	.word	0x20657661
  405a44:	74617473 	.word	0x74617473
  405a48:	2e2e7375 	.word	0x2e2e7375
  405a4c:	000d202e 	.word	0x000d202e
  405a50:	3c202020 	.word	0x3c202020
  405a54:	6c53202d 	.word	0x6c53202d
  405a58:	20657661 	.word	0x20657661
  405a5c:	6f706572 	.word	0x6f706572
  405a60:	20737472 	.word	0x20737472
  405a64:	74617473 	.word	0x74617473
  405a68:	2e2e7375 	.word	0x2e2e7375
  405a6c:	00000d2e 	.word	0x00000d2e
  405a70:	202d492d 	.word	0x202d492d
  405a74:	65636552 	.word	0x65636552
  405a78:	64657669 	.word	0x64657669
  405a7c:	75252020 	.word	0x75252020
  405a80:	6d6f6320 	.word	0x6d6f6320
  405a84:	646e616d 	.word	0x646e616d
  405a88:	00003a73 	.word	0x00003a73
  405a8c:	25783020 	.word	0x25783020
  405a90:	00783830 	.word	0x00783830
  405a94:	2d0d0a20 	.word	0x2d0d0a20
  405a98:	52202d49 	.word	0x52202d49
  405a9c:	69656365 	.word	0x69656365
  405aa0:	20646576 	.word	0x20646576
  405aa4:	756c2520 	.word	0x756c2520
  405aa8:	74616420 	.word	0x74616420
  405aac:	6c622061 	.word	0x6c622061
  405ab0:	736b636f 	.word	0x736b636f
  405ab4:	000d0a20 	.word	0x000d0a20
  405ab8:	4d203e2d 	.word	0x4d203e2d
  405abc:	65747361 	.word	0x65747361
  405ac0:	65732072 	.word	0x65732072
  405ac4:	6e69646e 	.word	0x6e69646e
  405ac8:	4d432067 	.word	0x4d432067
  405acc:	4e455f44 	.word	0x4e455f44
  405ad0:	2e2e2e44 	.word	0x2e2e2e44
  405ad4:	00000d20 	.word	0x00000d20
  405ad8:	3c202020 	.word	0x3c202020
  405adc:	6c53202d 	.word	0x6c53202d
  405ae0:	20657661 	.word	0x20657661
  405ae4:	70736572 	.word	0x70736572
  405ae8:	65736e6f 	.word	0x65736e6f
  405aec:	5f435220 	.word	0x5f435220
  405af0:	204e5953 	.word	0x204e5953
  405af4:	0000000d 	.word	0x0000000d
  405af8:	20495053 	.word	0x20495053
  405afc:	6e617274 	.word	0x6e617274
  405b00:	72656673 	.word	0x72656673
  405b04:	73657420 	.word	0x73657420
  405b08:	69662074 	.word	0x69662074
  405b0c:	6873696e 	.word	0x6873696e
  405b10:	20216465 	.word	0x20216465
  405b14:	0000000d 	.word	0x0000000d
  405b18:	74746553 	.word	0x74746553
  405b1c:	20676e69 	.word	0x20676e69
  405b20:	20495053 	.word	0x20495053
  405b24:	636f6c63 	.word	0x636f6c63
  405b28:	2523206b 	.word	0x2523206b
  405b2c:	2e20756c 	.word	0x2e20756c
  405b30:	0a202e2e 	.word	0x0a202e2e
  405b34:	0000000d 	.word	0x0000000d
  405b38:	3c202020 	.word	0x3c202020
  405b3c:	6c53202d 	.word	0x6c53202d
  405b40:	20657661 	.word	0x20657661
  405b44:	70736572 	.word	0x70736572
  405b48:	65736e6f 	.word	0x65736e6f
  405b4c:	73616c20 	.word	0x73616c20
  405b50:	6c622074 	.word	0x6c622074
  405b54:	206b636f 	.word	0x206b636f
  405b58:	0a207825 	.word	0x0a207825
  405b5c:	0000000d 	.word	0x0000000d
  405b60:	202d452d 	.word	0x202d452d
  405b64:	636f6c62 	.word	0x636f6c62
  405b68:	7525206b 	.word	0x7525206b
  405b6c:	6e6f6320 	.word	0x6e6f6320
  405b70:	6e696174 	.word	0x6e696174
  405b74:	6e752073 	.word	0x6e752073
  405b78:	65707865 	.word	0x65707865
  405b7c:	64657463 	.word	0x64657463
  405b80:	74616420 	.word	0x74616420
  405b84:	0d0a2061 	.word	0x0d0a2061
  405b88:	00000000 	.word	0x00000000

00405b8c <gs_ul_clock_configurations>:
  405b8c:	0007a120 000f4240 001e8480 004c4b40      ...@B......@KL.
  405b9c:	00000043                                C...

00405ba0 <_global_impure_ptr>:
  405ba0:	20000010 0000000a                       ... ....

00405ba8 <zeroes.6993>:
  405ba8:	30303030 30303030 30303030 30303030     0000000000000000
  405bb8:	33323130 37363534 42413938 46454443     0123456789ABCDEF
  405bc8:	00000000 33323130 37363534 62613938     ....0123456789ab
  405bd8:	66656463 00000000 6c756e28 0000296c     cdef....(null)..

00405be8 <blanks.6992>:
  405be8:	20202020 20202020 20202020 20202020                     

00405bf8 <basefix.6460>:
  405bf8:	0001000a 00030002 00050004 00070006     ................
  405c08:	00090008 000b000a 000d000c 000f000e     ................
  405c18:	00000010                                ....

00405c1c <_ctype_>:
  405c1c:	20202000 20202020 28282020 20282828     .         ((((( 
  405c2c:	20202020 20202020 20202020 20202020                     
  405c3c:	10108820 10101010 10101010 10101010      ...............
  405c4c:	04040410 04040404 10040404 10101010     ................
  405c5c:	41411010 41414141 01010101 01010101     ..AAAAAA........
  405c6c:	01010101 01010101 01010101 10101010     ................
  405c7c:	42421010 42424242 02020202 02020202     ..BBBBBB........
  405c8c:	02020202 02020202 02020202 10101010     ................
  405c9c:	00000020 00000000 00000000 00000000      ...............
	...

00405d20 <_init>:
  405d20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405d22:	bf00      	nop
  405d24:	bcf8      	pop	{r3, r4, r5, r6, r7}
  405d26:	bc08      	pop	{r3}
  405d28:	469e      	mov	lr, r3
  405d2a:	4770      	bx	lr

00405d2c <__init_array_start>:
  405d2c:	00402f11 	.word	0x00402f11

00405d30 <__frame_dummy_init_array_entry>:
  405d30:	004000e5                                ..@.

00405d34 <_fini>:
  405d34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405d36:	bf00      	nop
  405d38:	bcf8      	pop	{r3, r4, r5, r6, r7}
  405d3a:	bc08      	pop	{r3}
  405d3c:	469e      	mov	lr, r3
  405d3e:	4770      	bx	lr

00405d40 <__fini_array_start>:
  405d40:	004000c1 	.word	0x004000c1
