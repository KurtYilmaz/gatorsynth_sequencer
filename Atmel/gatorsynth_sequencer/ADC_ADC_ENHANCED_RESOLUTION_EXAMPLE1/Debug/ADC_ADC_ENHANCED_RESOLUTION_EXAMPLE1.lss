
ADC_ADC_ENHANCED_RESOLUTION_EXAMPLE1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005830  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00405830  00405830  00015830  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000874  20000000  00405838  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000000d8  20000874  004060ac  00020874  2**2
                  ALLOC
  4 .stack        00003004  2000094c  00406184  00020874  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  00020874  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002089e  2**0
                  CONTENTS, READONLY
  7 .debug_info   00009dfd  00000000  00000000  000208f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001d22  00000000  00000000  0002a6f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000032e6  00000000  00000000  0002c416  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000007a0  00000000  00000000  0002f6fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000698  00000000  00000000  0002fe9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00010d4a  00000000  00000000  00030534  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000ad20  00000000  00000000  0004127e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00042bb3  00000000  00000000  0004bf9e  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002070  00000000  00000000  0008eb54  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <_sfixed>:
  400000:	20003950 	.word	0x20003950
  400004:	00400ad5 	.word	0x00400ad5
  400008:	00400ad1 	.word	0x00400ad1
  40000c:	00400ad1 	.word	0x00400ad1
  400010:	00400ad1 	.word	0x00400ad1
  400014:	00400ad1 	.word	0x00400ad1
  400018:	00400ad1 	.word	0x00400ad1
	...
  40002c:	00400ad1 	.word	0x00400ad1
  400030:	00400ad1 	.word	0x00400ad1
  400034:	00000000 	.word	0x00000000
  400038:	00400ad1 	.word	0x00400ad1
  40003c:	00400ad1 	.word	0x00400ad1
  400040:	00400ad1 	.word	0x00400ad1
  400044:	00400ad1 	.word	0x00400ad1
  400048:	00400ad1 	.word	0x00400ad1
  40004c:	00400ad1 	.word	0x00400ad1
  400050:	00400ad1 	.word	0x00400ad1
  400054:	00400ad1 	.word	0x00400ad1
  400058:	00400ad1 	.word	0x00400ad1
  40005c:	00000000 	.word	0x00000000
  400060:	00400ad1 	.word	0x00400ad1
  400064:	00400ad1 	.word	0x00400ad1
  400068:	00400ad1 	.word	0x00400ad1
  40006c:	00400ad1 	.word	0x00400ad1
  400070:	00400ad1 	.word	0x00400ad1
  400074:	00400ad1 	.word	0x00400ad1
  400078:	00400ad1 	.word	0x00400ad1
  40007c:	00400ad1 	.word	0x00400ad1
  400080:	00400ad1 	.word	0x00400ad1
  400084:	00400ad1 	.word	0x00400ad1
  400088:	00000000 	.word	0x00000000
  40008c:	00400ad1 	.word	0x00400ad1
  400090:	00400ad1 	.word	0x00400ad1
  400094:	00400ad1 	.word	0x00400ad1
  400098:	00400ad1 	.word	0x00400ad1
  40009c:	00400ad1 	.word	0x00400ad1
  4000a0:	00400ad1 	.word	0x00400ad1
  4000a4:	00400ad1 	.word	0x00400ad1
  4000a8:	00400ad1 	.word	0x00400ad1
  4000ac:	00400ad1 	.word	0x00400ad1
  4000b0:	00400ad1 	.word	0x00400ad1
  4000b4:	00400815 	.word	0x00400815
  4000b8:	00400ad1 	.word	0x00400ad1
  4000bc:	00400ad1 	.word	0x00400ad1

004000c0 <__do_global_dtors_aux>:
  4000c0:	b510      	push	{r4, lr}
  4000c2:	4c05      	ldr	r4, [pc, #20]	; (4000d8 <__do_global_dtors_aux+0x18>)
  4000c4:	7823      	ldrb	r3, [r4, #0]
  4000c6:	b933      	cbnz	r3, 4000d6 <__do_global_dtors_aux+0x16>
  4000c8:	4b04      	ldr	r3, [pc, #16]	; (4000dc <__do_global_dtors_aux+0x1c>)
  4000ca:	b113      	cbz	r3, 4000d2 <__do_global_dtors_aux+0x12>
  4000cc:	4804      	ldr	r0, [pc, #16]	; (4000e0 <__do_global_dtors_aux+0x20>)
  4000ce:	f3af 8000 	nop.w
  4000d2:	2301      	movs	r3, #1
  4000d4:	7023      	strb	r3, [r4, #0]
  4000d6:	bd10      	pop	{r4, pc}
  4000d8:	20000874 	.word	0x20000874
  4000dc:	00000000 	.word	0x00000000
  4000e0:	00405838 	.word	0x00405838

004000e4 <frame_dummy>:
  4000e4:	4b08      	ldr	r3, [pc, #32]	; (400108 <frame_dummy+0x24>)
  4000e6:	b510      	push	{r4, lr}
  4000e8:	b11b      	cbz	r3, 4000f2 <frame_dummy+0xe>
  4000ea:	4908      	ldr	r1, [pc, #32]	; (40010c <frame_dummy+0x28>)
  4000ec:	4808      	ldr	r0, [pc, #32]	; (400110 <frame_dummy+0x2c>)
  4000ee:	f3af 8000 	nop.w
  4000f2:	4808      	ldr	r0, [pc, #32]	; (400114 <frame_dummy+0x30>)
  4000f4:	6803      	ldr	r3, [r0, #0]
  4000f6:	b903      	cbnz	r3, 4000fa <frame_dummy+0x16>
  4000f8:	bd10      	pop	{r4, pc}
  4000fa:	4b07      	ldr	r3, [pc, #28]	; (400118 <frame_dummy+0x34>)
  4000fc:	2b00      	cmp	r3, #0
  4000fe:	d0fb      	beq.n	4000f8 <frame_dummy+0x14>
  400100:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400104:	4718      	bx	r3
  400106:	bf00      	nop
  400108:	00000000 	.word	0x00000000
  40010c:	20000878 	.word	0x20000878
  400110:	00405838 	.word	0x00405838
  400114:	00405838 	.word	0x00405838
  400118:	00000000 	.word	0x00000000

0040011c <adc_end_conversion>:
static inline uint32_t adc_channel_get_value(Adc *const adc,
		enum adc_channel_num adc_ch)
{
	adc_ch_sanity_check(adc, adc_ch);

	return adc->ADC_CDR[adc_ch];
  40011c:	4b03      	ldr	r3, [pc, #12]	; (40012c <adc_end_conversion+0x10>)
  40011e:	6d5a      	ldr	r2, [r3, #84]	; 0x54
/**
 * \brief ADC interrupt callback function.
 */
static void adc_end_conversion(void)
{
	g_ul_value = adc_channel_get_value(ADC, ADC_CHANNEL_1);
  400120:	4b03      	ldr	r3, [pc, #12]	; (400130 <adc_end_conversion+0x14>)
  400122:	601a      	str	r2, [r3, #0]
	is_conversion_done = true;
  400124:	2201      	movs	r2, #1
  400126:	4b03      	ldr	r3, [pc, #12]	; (400134 <adc_end_conversion+0x18>)
  400128:	701a      	strb	r2, [r3, #0]
  40012a:	4770      	bx	lr
  40012c:	40038000 	.word	0x40038000
  400130:	20000898 	.word	0x20000898
  400134:	20000890 	.word	0x20000890

00400138 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  400138:	b5f0      	push	{r4, r5, r6, r7, lr}
  40013a:	b083      	sub	sp, #12
  40013c:	4605      	mov	r5, r0
  40013e:	460c      	mov	r4, r1
	uint32_t val = 0;
  400140:	2300      	movs	r3, #0
  400142:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400144:	4b29      	ldr	r3, [pc, #164]	; (4001ec <usart_serial_getchar+0xb4>)
  400146:	4298      	cmp	r0, r3
  400148:	d107      	bne.n	40015a <usart_serial_getchar+0x22>
		while (uart_read((Uart*)p_usart, data));
  40014a:	461f      	mov	r7, r3
  40014c:	4e28      	ldr	r6, [pc, #160]	; (4001f0 <usart_serial_getchar+0xb8>)
  40014e:	4621      	mov	r1, r4
  400150:	4638      	mov	r0, r7
  400152:	47b0      	blx	r6
  400154:	2800      	cmp	r0, #0
  400156:	d1fa      	bne.n	40014e <usart_serial_getchar+0x16>
  400158:	e015      	b.n	400186 <usart_serial_getchar+0x4e>
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  40015a:	4b26      	ldr	r3, [pc, #152]	; (4001f4 <usart_serial_getchar+0xbc>)
  40015c:	4298      	cmp	r0, r3
  40015e:	d107      	bne.n	400170 <usart_serial_getchar+0x38>
		while (uart_read((Uart*)p_usart, data));
  400160:	461f      	mov	r7, r3
  400162:	4e23      	ldr	r6, [pc, #140]	; (4001f0 <usart_serial_getchar+0xb8>)
  400164:	4621      	mov	r1, r4
  400166:	4638      	mov	r0, r7
  400168:	47b0      	blx	r6
  40016a:	2800      	cmp	r0, #0
  40016c:	d1fa      	bne.n	400164 <usart_serial_getchar+0x2c>
  40016e:	e015      	b.n	40019c <usart_serial_getchar+0x64>
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  400170:	4b21      	ldr	r3, [pc, #132]	; (4001f8 <usart_serial_getchar+0xc0>)
  400172:	4298      	cmp	r0, r3
  400174:	d107      	bne.n	400186 <usart_serial_getchar+0x4e>
		while (uart_read((Uart*)p_usart, data));
  400176:	461f      	mov	r7, r3
  400178:	4e1d      	ldr	r6, [pc, #116]	; (4001f0 <usart_serial_getchar+0xb8>)
  40017a:	4621      	mov	r1, r4
  40017c:	4638      	mov	r0, r7
  40017e:	47b0      	blx	r6
  400180:	2800      	cmp	r0, #0
  400182:	d1fa      	bne.n	40017a <usart_serial_getchar+0x42>
  400184:	e017      	b.n	4001b6 <usart_serial_getchar+0x7e>
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  400186:	4b1d      	ldr	r3, [pc, #116]	; (4001fc <usart_serial_getchar+0xc4>)
  400188:	429d      	cmp	r5, r3
  40018a:	d107      	bne.n	40019c <usart_serial_getchar+0x64>
		while (uart_read((Uart*)p_usart, data));
  40018c:	461f      	mov	r7, r3
  40018e:	4e18      	ldr	r6, [pc, #96]	; (4001f0 <usart_serial_getchar+0xb8>)
  400190:	4621      	mov	r1, r4
  400192:	4638      	mov	r0, r7
  400194:	47b0      	blx	r6
  400196:	2800      	cmp	r0, #0
  400198:	d1fa      	bne.n	400190 <usart_serial_getchar+0x58>
  40019a:	e019      	b.n	4001d0 <usart_serial_getchar+0x98>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  40019c:	4b18      	ldr	r3, [pc, #96]	; (400200 <usart_serial_getchar+0xc8>)
  40019e:	429d      	cmp	r5, r3
  4001a0:	d109      	bne.n	4001b6 <usart_serial_getchar+0x7e>
		while (usart_read(p_usart, &val));
  4001a2:	461e      	mov	r6, r3
  4001a4:	4d17      	ldr	r5, [pc, #92]	; (400204 <usart_serial_getchar+0xcc>)
  4001a6:	a901      	add	r1, sp, #4
  4001a8:	4630      	mov	r0, r6
  4001aa:	47a8      	blx	r5
  4001ac:	2800      	cmp	r0, #0
  4001ae:	d1fa      	bne.n	4001a6 <usart_serial_getchar+0x6e>
		*data = (uint8_t)(val & 0xFF);
  4001b0:	9b01      	ldr	r3, [sp, #4]
  4001b2:	7023      	strb	r3, [r4, #0]
  4001b4:	e018      	b.n	4001e8 <usart_serial_getchar+0xb0>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  4001b6:	4b14      	ldr	r3, [pc, #80]	; (400208 <usart_serial_getchar+0xd0>)
  4001b8:	429d      	cmp	r5, r3
  4001ba:	d109      	bne.n	4001d0 <usart_serial_getchar+0x98>
		while (usart_read(p_usart, &val));
  4001bc:	461e      	mov	r6, r3
  4001be:	4d11      	ldr	r5, [pc, #68]	; (400204 <usart_serial_getchar+0xcc>)
  4001c0:	a901      	add	r1, sp, #4
  4001c2:	4630      	mov	r0, r6
  4001c4:	47a8      	blx	r5
  4001c6:	2800      	cmp	r0, #0
  4001c8:	d1fa      	bne.n	4001c0 <usart_serial_getchar+0x88>
		*data = (uint8_t)(val & 0xFF);
  4001ca:	9b01      	ldr	r3, [sp, #4]
  4001cc:	7023      	strb	r3, [r4, #0]
  4001ce:	e00b      	b.n	4001e8 <usart_serial_getchar+0xb0>
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  4001d0:	4b0e      	ldr	r3, [pc, #56]	; (40020c <usart_serial_getchar+0xd4>)
  4001d2:	429d      	cmp	r5, r3
  4001d4:	d108      	bne.n	4001e8 <usart_serial_getchar+0xb0>
		while (usart_read(p_usart, &val));
  4001d6:	461e      	mov	r6, r3
  4001d8:	4d0a      	ldr	r5, [pc, #40]	; (400204 <usart_serial_getchar+0xcc>)
  4001da:	a901      	add	r1, sp, #4
  4001dc:	4630      	mov	r0, r6
  4001de:	47a8      	blx	r5
  4001e0:	2800      	cmp	r0, #0
  4001e2:	d1fa      	bne.n	4001da <usart_serial_getchar+0xa2>
		*data = (uint8_t)(val & 0xFF);
  4001e4:	9b01      	ldr	r3, [sp, #4]
  4001e6:	7023      	strb	r3, [r4, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  4001e8:	b003      	add	sp, #12
  4001ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4001ec:	400e0600 	.word	0x400e0600
  4001f0:	00400a91 	.word	0x00400a91
  4001f4:	400e0800 	.word	0x400e0800
  4001f8:	40044000 	.word	0x40044000
  4001fc:	40048000 	.word	0x40048000
  400200:	40024000 	.word	0x40024000
  400204:	00400ab9 	.word	0x00400ab9
  400208:	40028000 	.word	0x40028000
  40020c:	4002c000 	.word	0x4002c000

00400210 <usart_serial_putchar>:
 *   \retval 1  The character was written.
 *   \retval 0  The function timed out before the USART transmitter became
 * ready to send.
 */
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
  400210:	b570      	push	{r4, r5, r6, lr}
  400212:	460c      	mov	r4, r1
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400214:	4b2a      	ldr	r3, [pc, #168]	; (4002c0 <usart_serial_putchar+0xb0>)
  400216:	4298      	cmp	r0, r3
  400218:	d108      	bne.n	40022c <usart_serial_putchar+0x1c>
		while (uart_write((Uart*)p_usart, c)!=0);
  40021a:	461e      	mov	r6, r3
  40021c:	4d29      	ldr	r5, [pc, #164]	; (4002c4 <usart_serial_putchar+0xb4>)
  40021e:	4621      	mov	r1, r4
  400220:	4630      	mov	r0, r6
  400222:	47a8      	blx	r5
  400224:	2800      	cmp	r0, #0
  400226:	d1fa      	bne.n	40021e <usart_serial_putchar+0xe>
		return 1;
  400228:	2001      	movs	r0, #1
  40022a:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  40022c:	4b26      	ldr	r3, [pc, #152]	; (4002c8 <usart_serial_putchar+0xb8>)
  40022e:	4298      	cmp	r0, r3
  400230:	d108      	bne.n	400244 <usart_serial_putchar+0x34>
		while (uart_write((Uart*)p_usart, c)!=0);
  400232:	461e      	mov	r6, r3
  400234:	4d23      	ldr	r5, [pc, #140]	; (4002c4 <usart_serial_putchar+0xb4>)
  400236:	4621      	mov	r1, r4
  400238:	4630      	mov	r0, r6
  40023a:	47a8      	blx	r5
  40023c:	2800      	cmp	r0, #0
  40023e:	d1fa      	bne.n	400236 <usart_serial_putchar+0x26>
		return 1;
  400240:	2001      	movs	r0, #1
  400242:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  400244:	4b21      	ldr	r3, [pc, #132]	; (4002cc <usart_serial_putchar+0xbc>)
  400246:	4298      	cmp	r0, r3
  400248:	d108      	bne.n	40025c <usart_serial_putchar+0x4c>
		while (uart_write((Uart*)p_usart, c)!=0);
  40024a:	461e      	mov	r6, r3
  40024c:	4d1d      	ldr	r5, [pc, #116]	; (4002c4 <usart_serial_putchar+0xb4>)
  40024e:	4621      	mov	r1, r4
  400250:	4630      	mov	r0, r6
  400252:	47a8      	blx	r5
  400254:	2800      	cmp	r0, #0
  400256:	d1fa      	bne.n	40024e <usart_serial_putchar+0x3e>
		return 1;
  400258:	2001      	movs	r0, #1
  40025a:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  40025c:	4b1c      	ldr	r3, [pc, #112]	; (4002d0 <usart_serial_putchar+0xc0>)
  40025e:	4298      	cmp	r0, r3
  400260:	d108      	bne.n	400274 <usart_serial_putchar+0x64>
		while (uart_write((Uart*)p_usart, c)!=0);
  400262:	461e      	mov	r6, r3
  400264:	4d17      	ldr	r5, [pc, #92]	; (4002c4 <usart_serial_putchar+0xb4>)
  400266:	4621      	mov	r1, r4
  400268:	4630      	mov	r0, r6
  40026a:	47a8      	blx	r5
  40026c:	2800      	cmp	r0, #0
  40026e:	d1fa      	bne.n	400266 <usart_serial_putchar+0x56>
		return 1;
  400270:	2001      	movs	r0, #1
  400272:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400274:	4b17      	ldr	r3, [pc, #92]	; (4002d4 <usart_serial_putchar+0xc4>)
  400276:	4298      	cmp	r0, r3
  400278:	d108      	bne.n	40028c <usart_serial_putchar+0x7c>
		while (usart_write(p_usart, c)!=0);
  40027a:	461e      	mov	r6, r3
  40027c:	4d16      	ldr	r5, [pc, #88]	; (4002d8 <usart_serial_putchar+0xc8>)
  40027e:	4621      	mov	r1, r4
  400280:	4630      	mov	r0, r6
  400282:	47a8      	blx	r5
  400284:	2800      	cmp	r0, #0
  400286:	d1fa      	bne.n	40027e <usart_serial_putchar+0x6e>
		return 1;
  400288:	2001      	movs	r0, #1
  40028a:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  40028c:	4b13      	ldr	r3, [pc, #76]	; (4002dc <usart_serial_putchar+0xcc>)
  40028e:	4298      	cmp	r0, r3
  400290:	d108      	bne.n	4002a4 <usart_serial_putchar+0x94>
		while (usart_write(p_usart, c)!=0);
  400292:	461e      	mov	r6, r3
  400294:	4d10      	ldr	r5, [pc, #64]	; (4002d8 <usart_serial_putchar+0xc8>)
  400296:	4621      	mov	r1, r4
  400298:	4630      	mov	r0, r6
  40029a:	47a8      	blx	r5
  40029c:	2800      	cmp	r0, #0
  40029e:	d1fa      	bne.n	400296 <usart_serial_putchar+0x86>
		return 1;
  4002a0:	2001      	movs	r0, #1
  4002a2:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  4002a4:	4b0e      	ldr	r3, [pc, #56]	; (4002e0 <usart_serial_putchar+0xd0>)
  4002a6:	4298      	cmp	r0, r3
  4002a8:	d108      	bne.n	4002bc <usart_serial_putchar+0xac>
		while (usart_write(p_usart, c)!=0);
  4002aa:	461e      	mov	r6, r3
  4002ac:	4d0a      	ldr	r5, [pc, #40]	; (4002d8 <usart_serial_putchar+0xc8>)
  4002ae:	4621      	mov	r1, r4
  4002b0:	4630      	mov	r0, r6
  4002b2:	47a8      	blx	r5
  4002b4:	2800      	cmp	r0, #0
  4002b6:	d1fa      	bne.n	4002ae <usart_serial_putchar+0x9e>
		return 1;
  4002b8:	2001      	movs	r0, #1
  4002ba:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
	}
# endif
#endif /* ifdef USART */

	return 0;
  4002bc:	2000      	movs	r0, #0
}
  4002be:	bd70      	pop	{r4, r5, r6, pc}
  4002c0:	400e0600 	.word	0x400e0600
  4002c4:	00400a81 	.word	0x00400a81
  4002c8:	400e0800 	.word	0x400e0800
  4002cc:	40044000 	.word	0x40044000
  4002d0:	40048000 	.word	0x40048000
  4002d4:	40024000 	.word	0x40024000
  4002d8:	00400aa5 	.word	0x00400aa5
  4002dc:	40028000 	.word	0x40028000
  4002e0:	4002c000 	.word	0x4002c000

004002e4 <main>:
 * \brief Application entry point.
 *
 * \return Unused (ANSI-C compatibility).
 */
int main(void)
{
  4002e4:	b570      	push	{r4, r5, r6, lr}
  4002e6:	b08c      	sub	sp, #48	; 0x30
	int32_t ul_vol;

	/* Initialize the SAM system. */
	sysclk_init();
  4002e8:	4b72      	ldr	r3, [pc, #456]	; (4004b4 <main+0x1d0>)
  4002ea:	4798      	blx	r3
	board_init();
  4002ec:	4b72      	ldr	r3, [pc, #456]	; (4004b8 <main+0x1d4>)
  4002ee:	4798      	blx	r3
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4002f0:	2008      	movs	r0, #8
  4002f2:	4d72      	ldr	r5, [pc, #456]	; (4004bc <main+0x1d8>)
  4002f4:	47a8      	blx	r5
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  4002f6:	4c72      	ldr	r4, [pc, #456]	; (4004c0 <main+0x1dc>)
  4002f8:	4b72      	ldr	r3, [pc, #456]	; (4004c4 <main+0x1e0>)
  4002fa:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  4002fc:	4a72      	ldr	r2, [pc, #456]	; (4004c8 <main+0x1e4>)
  4002fe:	4b73      	ldr	r3, [pc, #460]	; (4004cc <main+0x1e8>)
  400300:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  400302:	4a73      	ldr	r2, [pc, #460]	; (4004d0 <main+0x1ec>)
  400304:	4b73      	ldr	r3, [pc, #460]	; (4004d4 <main+0x1f0>)
  400306:	601a      	str	r2, [r3, #0]
static inline void usart_serial_init(usart_if p_usart,
		usart_serial_options_t *opt)
{
#if ((!SAM4L) && (!SAMG55))
	sam_uart_opt_t uart_settings;
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  400308:	4b73      	ldr	r3, [pc, #460]	; (4004d8 <main+0x1f4>)
  40030a:	9303      	str	r3, [sp, #12]
	uart_settings.ul_baudrate = opt->baudrate;
  40030c:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  400310:	9304      	str	r3, [sp, #16]
	uart_settings.ul_mode = opt->paritytype;
  400312:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400316:	9305      	str	r3, [sp, #20]
  400318:	2008      	movs	r0, #8
  40031a:	47a8      	blx	r5
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
		sysclk_enable_peripheral_clock(ID_UART0);
		/* Configure UART */
		uart_init((Uart*)p_usart, &uart_settings);
  40031c:	a903      	add	r1, sp, #12
  40031e:	4620      	mov	r0, r4
  400320:	4b6e      	ldr	r3, [pc, #440]	; (4004dc <main+0x1f8>)
  400322:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  400324:	4d6e      	ldr	r5, [pc, #440]	; (4004e0 <main+0x1fc>)
  400326:	682b      	ldr	r3, [r5, #0]
  400328:	2100      	movs	r1, #0
  40032a:	6898      	ldr	r0, [r3, #8]
  40032c:	4c6d      	ldr	r4, [pc, #436]	; (4004e4 <main+0x200>)
  40032e:	47a0      	blx	r4
	setbuf(stdin, NULL);
  400330:	682b      	ldr	r3, [r5, #0]
  400332:	2100      	movs	r1, #0
  400334:	6858      	ldr	r0, [r3, #4]
  400336:	47a0      	blx	r4

	configure_console();

	/* Output example information. */
	puts(STRING_HEADER);
  400338:	486b      	ldr	r0, [pc, #428]	; (4004e8 <main+0x204>)
  40033a:	4b6c      	ldr	r3, [pc, #432]	; (4004ec <main+0x208>)
  40033c:	4798      	blx	r3

	adc_enable();
  40033e:	4b6c      	ldr	r3, [pc, #432]	; (4004f0 <main+0x20c>)
  400340:	4798      	blx	r3
	adc_select_clock_source_mck(ADC);
#endif

	struct adc_config adc_cfg;

	adc_get_config_defaults(&adc_cfg);
  400342:	a806      	add	r0, sp, #24
  400344:	4b6b      	ldr	r3, [pc, #428]	; (4004f4 <main+0x210>)
  400346:	4798      	blx	r3

	adc_init(ADC, &adc_cfg);
  400348:	4c6b      	ldr	r4, [pc, #428]	; (4004f8 <main+0x214>)
  40034a:	a906      	add	r1, sp, #24
  40034c:	4620      	mov	r0, r4
  40034e:	4b6b      	ldr	r3, [pc, #428]	; (4004fc <main+0x218>)
  400350:	4798      	blx	r3
{
	if (adc_ch != ADC_CHANNEL_ALL) {
		adc_ch_sanity_check(adc, adc_ch);
	}

	adc->ADC_CHER = (adc_ch == ADC_CHANNEL_ALL) ?
  400352:	2302      	movs	r3, #2
  400354:	6123      	str	r3, [r4, #16]
static inline void adc_set_trigger(Adc *const adc,
		const enum adc_trigger trigger)
{
	uint32_t reg;

	reg = adc->ADC_MR;
  400356:	6863      	ldr	r3, [r4, #4]

	if (trigger == ADC_TRIG_FREERUN) {
		reg |= ADC_MR_FREERUN_ON;
	} else {
		reg &= ~(ADC_MR_TRGSEL_Msk | ADC_MR_TRGEN | ADC_MR_FREERUN_ON);
  400358:	f023 038f 	bic.w	r3, r3, #143	; 0x8f
		reg |= trigger;
  40035c:	f043 0303 	orr.w	r3, r3, #3
	}

	adc->ADC_MR = reg;
  400360:	6063      	str	r3, [r4, #4]
	adc_channel_enable(ADC, ADC_CHANNEL_1);

	adc_set_trigger(ADC, ADC_TRIG_TIO_CH_0);

	adc_set_callback(ADC, ADC_INTERRUPT_EOC_1,
  400362:	2301      	movs	r3, #1
  400364:	4a66      	ldr	r2, [pc, #408]	; (400500 <main+0x21c>)
  400366:	4619      	mov	r1, r3
  400368:	4620      	mov	r0, r4
  40036a:	4c66      	ldr	r4, [pc, #408]	; (400504 <main+0x220>)
  40036c:	47a0      	blx	r4
/**
 * \brief Display main menu.
 */
static void display_menu(void)
{
	printf("\n\r-- press a key to select the resolution mode--\n\r"
  40036e:	4866      	ldr	r0, [pc, #408]	; (400508 <main+0x224>)
  400370:	4b66      	ldr	r3, [pc, #408]	; (40050c <main+0x228>)
  400372:	4798      	blx	r3
	uint8_t uc_done = 0;

	display_menu();

	while (!uc_done) {
		scanf("%c", (char *)&uc_key);
  400374:	4d66      	ldr	r5, [pc, #408]	; (400510 <main+0x22c>)
  400376:	4c67      	ldr	r4, [pc, #412]	; (400514 <main+0x230>)
  400378:	a903      	add	r1, sp, #12
  40037a:	4628      	mov	r0, r5
  40037c:	47a0      	blx	r4

		switch (uc_key) {
  40037e:	f89d 300c 	ldrb.w	r3, [sp, #12]
  400382:	3b61      	subs	r3, #97	; 0x61
  400384:	2b03      	cmp	r3, #3
  400386:	d8f7      	bhi.n	400378 <main+0x94>
  400388:	e8df f003 	tbb	[pc, r3]
  40038c:	311d0f02 	.word	0x311d0f02
			puts(" Quit Configuration \n\r");
			break;

#else
		case 'a':
			g_max_digital = MAX_DIGITAL_8_BIT;
  400390:	22ff      	movs	r2, #255	; 0xff
  400392:	4b61      	ldr	r3, [pc, #388]	; (400518 <main+0x234>)
  400394:	601a      	str	r2, [r3, #0]
			adc_set_resolution(ADC, ADC_8_BITS);
  400396:	2110      	movs	r1, #16
  400398:	4857      	ldr	r0, [pc, #348]	; (4004f8 <main+0x214>)
  40039a:	4b60      	ldr	r3, [pc, #384]	; (40051c <main+0x238>)
  40039c:	4798      	blx	r3
			puts(" Set Resolution to Normal 8-bit \n\r");
  40039e:	4860      	ldr	r0, [pc, #384]	; (400520 <main+0x23c>)
  4003a0:	4c52      	ldr	r4, [pc, #328]	; (4004ec <main+0x208>)
  4003a2:	47a0      	blx	r4
			uc_done = 1;
			puts(" Quit Configuration \n\r");
  4003a4:	485f      	ldr	r0, [pc, #380]	; (400524 <main+0x240>)
  4003a6:	47a0      	blx	r4
  4003a8:	e034      	b.n	400414 <main+0x130>
			break;
		case 'b':
			g_max_digital = MAX_DIGITAL_10_BIT;
  4003aa:	f240 32ff 	movw	r2, #1023	; 0x3ff
  4003ae:	4b5a      	ldr	r3, [pc, #360]	; (400518 <main+0x234>)
  4003b0:	601a      	str	r2, [r3, #0]
			adc_set_resolution(ADC, ADC_10_BITS);
  4003b2:	2100      	movs	r1, #0
  4003b4:	4850      	ldr	r0, [pc, #320]	; (4004f8 <main+0x214>)
  4003b6:	4b59      	ldr	r3, [pc, #356]	; (40051c <main+0x238>)
  4003b8:	4798      	blx	r3
			puts(" Set Resolution to Normal 10-bit \n\r");
  4003ba:	485b      	ldr	r0, [pc, #364]	; (400528 <main+0x244>)
  4003bc:	4c4b      	ldr	r4, [pc, #300]	; (4004ec <main+0x208>)
  4003be:	47a0      	blx	r4
			uc_done = 1;
			puts(" Quit Configuration \n\r");
  4003c0:	4858      	ldr	r0, [pc, #352]	; (400524 <main+0x240>)
  4003c2:	47a0      	blx	r4
  4003c4:	e026      	b.n	400414 <main+0x130>
			break;

		case 'c':
			g_max_digital = MAX_DIGITAL_11_BIT;
  4003c6:	f240 72fe 	movw	r2, #2046	; 0x7fe
  4003ca:	4b53      	ldr	r3, [pc, #332]	; (400518 <main+0x234>)
  4003cc:	601a      	str	r2, [r3, #0]
			adc_set_resolution(ADC, ADC_11_BITS);
  4003ce:	4c4a      	ldr	r4, [pc, #296]	; (4004f8 <main+0x214>)
  4003d0:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  4003d4:	4620      	mov	r0, r4
  4003d6:	4b51      	ldr	r3, [pc, #324]	; (40051c <main+0x238>)
  4003d8:	4798      	blx	r3
 *
 * \param adc Base address of the ADC.
 */
static inline void adc_average_on_single_trigger(Adc *const adc)
{
	adc->ADC_EMR |= ADC_EMR_ASTE_SINGLE_TRIG_AVERAGE;
  4003da:	6c23      	ldr	r3, [r4, #64]	; 0x40
  4003dc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  4003e0:	6423      	str	r3, [r4, #64]	; 0x40
			adc_average_on_single_trigger(ADC);
			puts(" Set Resolution to Enhanced 11-bit \n\r");
  4003e2:	4852      	ldr	r0, [pc, #328]	; (40052c <main+0x248>)
  4003e4:	4c41      	ldr	r4, [pc, #260]	; (4004ec <main+0x208>)
  4003e6:	47a0      	blx	r4
			uc_done = 1;
			puts(" Quit Configuration \n\r");
  4003e8:	484e      	ldr	r0, [pc, #312]	; (400524 <main+0x240>)
  4003ea:	47a0      	blx	r4
  4003ec:	e012      	b.n	400414 <main+0x130>
			break;

		case 'd':
			g_max_digital = MAX_DIGITAL_12_BIT;
  4003ee:	f640 72fc 	movw	r2, #4092	; 0xffc
  4003f2:	4b49      	ldr	r3, [pc, #292]	; (400518 <main+0x234>)
  4003f4:	601a      	str	r2, [r3, #0]
			adc_set_resolution(ADC, ADC_12_BITS);
  4003f6:	4c40      	ldr	r4, [pc, #256]	; (4004f8 <main+0x214>)
  4003f8:	f44f 3100 	mov.w	r1, #131072	; 0x20000
  4003fc:	4620      	mov	r0, r4
  4003fe:	4b47      	ldr	r3, [pc, #284]	; (40051c <main+0x238>)
  400400:	4798      	blx	r3
  400402:	6c23      	ldr	r3, [r4, #64]	; 0x40
  400404:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  400408:	6423      	str	r3, [r4, #64]	; 0x40
			adc_average_on_single_trigger(ADC);
			puts(" Set Resolution to Enhanced 12-bit \n\r");
  40040a:	4849      	ldr	r0, [pc, #292]	; (400530 <main+0x24c>)
  40040c:	4c37      	ldr	r4, [pc, #220]	; (4004ec <main+0x208>)
  40040e:	47a0      	blx	r4
			uc_done = 1;
			puts(" Quit Configuration \n\r");
  400410:	4844      	ldr	r0, [pc, #272]	; (400524 <main+0x240>)
  400412:	47a0      	blx	r4
 * \retval STATUS_ERR_BUSY  Automatic calibration can not be launched because
 *         the ADC is in freerun mode.
 */
static inline enum status_code adc_start_calibration(Adc *const adc)
{
	if ((adc->ADC_MR & ADC_MR_FREERUN) == ADC_MR_FREERUN_ON) {
  400414:	4b38      	ldr	r3, [pc, #224]	; (4004f8 <main+0x214>)
  400416:	685b      	ldr	r3, [r3, #4]
  400418:	f013 0f80 	tst.w	r3, #128	; 0x80
  40041c:	d102      	bne.n	400424 <main+0x140>
		return STATUS_ERR_BUSY;
	}

	adc->ADC_CR = ADC_CR_AUTOCAL;
  40041e:	2208      	movs	r2, #8
  400420:	4b35      	ldr	r3, [pc, #212]	; (4004f8 <main+0x214>)
  400422:	601a      	str	r2, [r3, #0]
/**
 * \brief Configure to trigger ADC by TIOA output of timer.
 */
static void configure_tc_trigger(void)
{
	uint32_t ul_div = 0;
  400424:	2600      	movs	r6, #0
  400426:	9602      	str	r6, [sp, #8]
	uint32_t ul_tc_clks = 0;
  400428:	ad0c      	add	r5, sp, #48	; 0x30
  40042a:	f845 6d24 	str.w	r6, [r5, #-36]!
	uint32_t ul_sysclk = sysclk_get_cpu_hz();

	/* Enable peripheral clock. */
	pmc_enable_periph_clk(ID_TC0);
  40042e:	2017      	movs	r0, #23
  400430:	4b22      	ldr	r3, [pc, #136]	; (4004bc <main+0x1d8>)
  400432:	4798      	blx	r3
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  400434:	4b3f      	ldr	r3, [pc, #252]	; (400534 <main+0x250>)
  400436:	2001      	movs	r0, #1
  400438:	6618      	str	r0, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  40043a:	f8c3 0090 	str.w	r0, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  40043e:	6558      	str	r0, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  400440:	6258      	str	r0, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  400442:	f8c3 0080 	str.w	r0, [r3, #128]	; 0x80
	} else {
		base->PIO_ABSR &= ~mask;
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
  400446:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400448:	4302      	orrs	r2, r0
  40044a:	671a      	str	r2, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  40044c:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  40044e:	f022 0201 	bic.w	r2, r2, #1
  400452:	675a      	str	r2, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400454:	6058      	str	r0, [r3, #4]
	/* TIOA configuration */
	ioport_set_pin_mode(PIN_TC0_TIOA0, PIN_TC0_TIOA0_MUX);
	ioport_disable_pin(PIN_TC0_TIOA0);

	/* Configure TC for a 1Hz frequency and trigger on RC compare. */
	tc_find_mck_divisor(1, ul_sysclk, &ul_div, &ul_tc_clks, ul_sysclk);
  400456:	4c20      	ldr	r4, [pc, #128]	; (4004d8 <main+0x1f4>)
  400458:	9400      	str	r4, [sp, #0]
  40045a:	462b      	mov	r3, r5
  40045c:	aa02      	add	r2, sp, #8
  40045e:	4621      	mov	r1, r4
  400460:	4d35      	ldr	r5, [pc, #212]	; (400538 <main+0x254>)
  400462:	47a8      	blx	r5
	tc_init(TC0, 0, ul_tc_clks | TC_CMR_CPCTRG | TC_CMR_WAVE |
  400464:	4d35      	ldr	r5, [pc, #212]	; (40053c <main+0x258>)
  400466:	9a03      	ldr	r2, [sp, #12]
  400468:	f442 22d8 	orr.w	r2, r2, #442368	; 0x6c000
  40046c:	4631      	mov	r1, r6
  40046e:	4628      	mov	r0, r5
  400470:	4b33      	ldr	r3, [pc, #204]	; (400540 <main+0x25c>)
  400472:	4798      	blx	r3
			TC_CMR_ACPA_CLEAR | TC_CMR_ACPC_SET);
	TC0->TC_CHANNEL[0].TC_RA = (ul_sysclk / ul_div) / 2;
  400474:	9b02      	ldr	r3, [sp, #8]
  400476:	fbb4 f4f3 	udiv	r4, r4, r3
  40047a:	0863      	lsrs	r3, r4, #1
  40047c:	616b      	str	r3, [r5, #20]
	TC0->TC_CHANNEL[0].TC_RC = (ul_sysclk / ul_div) / 1;
  40047e:	61ec      	str	r4, [r5, #28]

	/* Start the Timer. */
	tc_start(TC0, 0);
  400480:	4631      	mov	r1, r6
  400482:	4628      	mov	r0, r5
  400484:	4b2f      	ldr	r3, [pc, #188]	; (400544 <main+0x260>)
  400486:	4798      	blx	r3
	/* Configure TC */
	configure_tc_trigger();

	while (1) {
		/* Check if ADC sample is done. */
		if (is_conversion_done == true) {
  400488:	4c2f      	ldr	r4, [pc, #188]	; (400548 <main+0x264>)
			ul_vol = g_ul_value * VOLT_REF / g_max_digital;
  40048a:	4d30      	ldr	r5, [pc, #192]	; (40054c <main+0x268>)
	/* Configure TC */
	configure_tc_trigger();

	while (1) {
		/* Check if ADC sample is done. */
		if (is_conversion_done == true) {
  40048c:	7823      	ldrb	r3, [r4, #0]
  40048e:	f013 0fff 	tst.w	r3, #255	; 0xff
  400492:	d0fb      	beq.n	40048c <main+0x1a8>
			ul_vol = g_ul_value * VOLT_REF / g_max_digital;
  400494:	6829      	ldr	r1, [r5, #0]
			printf("-- Voltage is: %4dmv\r\n", (int)ul_vol);
  400496:	f640 43e4 	movw	r3, #3300	; 0xce4
  40049a:	fb03 f301 	mul.w	r3, r3, r1
	configure_tc_trigger();

	while (1) {
		/* Check if ADC sample is done. */
		if (is_conversion_done == true) {
			ul_vol = g_ul_value * VOLT_REF / g_max_digital;
  40049e:	4a1e      	ldr	r2, [pc, #120]	; (400518 <main+0x234>)
			printf("-- Voltage is: %4dmv\r\n", (int)ul_vol);
  4004a0:	6811      	ldr	r1, [r2, #0]
  4004a2:	fbb3 f1f1 	udiv	r1, r3, r1
  4004a6:	482a      	ldr	r0, [pc, #168]	; (400550 <main+0x26c>)
  4004a8:	4b18      	ldr	r3, [pc, #96]	; (40050c <main+0x228>)
  4004aa:	4798      	blx	r3
			is_conversion_done = false;
  4004ac:	2300      	movs	r3, #0
  4004ae:	7023      	strb	r3, [r4, #0]
  4004b0:	e7ec      	b.n	40048c <main+0x1a8>
  4004b2:	bf00      	nop
  4004b4:	00400555 	.word	0x00400555
  4004b8:	00400645 	.word	0x00400645
  4004bc:	00400989 	.word	0x00400989
  4004c0:	400e0600 	.word	0x400e0600
  4004c4:	200008e4 	.word	0x200008e4
  4004c8:	00400211 	.word	0x00400211
  4004cc:	200008e0 	.word	0x200008e0
  4004d0:	00400139 	.word	0x00400139
  4004d4:	200008dc 	.word	0x200008dc
  4004d8:	05f5e100 	.word	0x05f5e100
  4004dc:	00400a49 	.word	0x00400a49
  4004e0:	20000430 	.word	0x20000430
  4004e4:	00400ee1 	.word	0x00400ee1
  4004e8:	00405418 	.word	0x00405418
  4004ec:	00400ed1 	.word	0x00400ed1
  4004f0:	0040084d 	.word	0x0040084d
  4004f4:	004006f1 	.word	0x004006f1
  4004f8:	40038000 	.word	0x40038000
  4004fc:	00400745 	.word	0x00400745
  400500:	0040011d 	.word	0x0040011d
  400504:	004007e5 	.word	0x004007e5
  400508:	00405480 	.word	0x00405480
  40050c:	00400d7d 	.word	0x00400d7d
  400510:	0040555c 	.word	0x0040555c
  400514:	00400da5 	.word	0x00400da5
  400518:	20000894 	.word	0x20000894
  40051c:	00400719 	.word	0x00400719
  400520:	00405560 	.word	0x00405560
  400524:	00405584 	.word	0x00405584
  400528:	0040559c 	.word	0x0040559c
  40052c:	004055c0 	.word	0x004055c0
  400530:	004055e8 	.word	0x004055e8
  400534:	400e0e00 	.word	0x400e0e00
  400538:	004009d5 	.word	0x004009d5
  40053c:	40010000 	.word	0x40010000
  400540:	004009b5 	.word	0x004009b5
  400544:	004009cd 	.word	0x004009cd
  400548:	20000890 	.word	0x20000890
  40054c:	20000898 	.word	0x20000898
  400550:	00405610 	.word	0x00405610

00400554 <sysclk_init>:

	SystemCoreClockUpdate();
}

void sysclk_init(void)
{
  400554:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400556:	480e      	ldr	r0, [pc, #56]	; (400590 <sysclk_init+0x3c>)
  400558:	4b0e      	ldr	r3, [pc, #56]	; (400594 <sysclk_init+0x40>)
  40055a:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_4_MHz);
		break;

	case OSC_MAINCK_8M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_8_MHz);
  40055c:	2010      	movs	r0, #16
  40055e:	4b0e      	ldr	r3, [pc, #56]	; (400598 <sysclk_init+0x44>)
  400560:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400562:	4c0e      	ldr	r4, [pc, #56]	; (40059c <sysclk_init+0x48>)
  400564:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400566:	2800      	cmp	r0, #0
  400568:	d0fc      	beq.n	400564 <sysclk_init+0x10>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  40056a:	4b0d      	ldr	r3, [pc, #52]	; (4005a0 <sysclk_init+0x4c>)
  40056c:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  40056e:	4a0d      	ldr	r2, [pc, #52]	; (4005a4 <sysclk_init+0x50>)
  400570:	4b0d      	ldr	r3, [pc, #52]	; (4005a8 <sysclk_init+0x54>)
  400572:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  400574:	4c0d      	ldr	r4, [pc, #52]	; (4005ac <sysclk_init+0x58>)
  400576:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400578:	2800      	cmp	r0, #0
  40057a:	d0fc      	beq.n	400576 <sysclk_init+0x22>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  40057c:	2010      	movs	r0, #16
  40057e:	4b0c      	ldr	r3, [pc, #48]	; (4005b0 <sysclk_init+0x5c>)
  400580:	4798      	blx	r3
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400582:	4b0c      	ldr	r3, [pc, #48]	; (4005b4 <sysclk_init+0x60>)
  400584:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400586:	4802      	ldr	r0, [pc, #8]	; (400590 <sysclk_init+0x3c>)
  400588:	4b02      	ldr	r3, [pc, #8]	; (400594 <sysclk_init+0x40>)
  40058a:	4798      	blx	r3
  40058c:	bd10      	pop	{r4, pc}
  40058e:	bf00      	nop
  400590:	05f5e100 	.word	0x05f5e100
  400594:	00400c7d 	.word	0x00400c7d
  400598:	0040090d 	.word	0x0040090d
  40059c:	00400959 	.word	0x00400959
  4005a0:	00400969 	.word	0x00400969
  4005a4:	20183f01 	.word	0x20183f01
  4005a8:	400e0400 	.word	0x400e0400
  4005ac:	00400979 	.word	0x00400979
  4005b0:	004008a5 	.word	0x004008a5
  4005b4:	00400b6d 	.word	0x00400b6d

004005b8 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
  4005b8:	b990      	cbnz	r0, 4005e0 <_read+0x28>
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  4005ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4005be:	460c      	mov	r4, r1
  4005c0:	4690      	mov	r8, r2

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  4005c2:	2a00      	cmp	r2, #0
  4005c4:	dd0f      	ble.n	4005e6 <_read+0x2e>
  4005c6:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  4005c8:	4e08      	ldr	r6, [pc, #32]	; (4005ec <_read+0x34>)
  4005ca:	4d09      	ldr	r5, [pc, #36]	; (4005f0 <_read+0x38>)
  4005cc:	6830      	ldr	r0, [r6, #0]
  4005ce:	4621      	mov	r1, r4
  4005d0:	682b      	ldr	r3, [r5, #0]
  4005d2:	4798      	blx	r3
		ptr++;
  4005d4:	3401      	adds	r4, #1

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  4005d6:	42a7      	cmp	r7, r4
  4005d8:	d1f8      	bne.n	4005cc <_read+0x14>
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
  4005da:	4640      	mov	r0, r8
  4005dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
		return -1;
  4005e0:	f04f 30ff 	mov.w	r0, #4294967295
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
	}
	return nChars;
}
  4005e4:	4770      	bx	lr

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  4005e6:	2000      	movs	r0, #0
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
	}
	return nChars;
}
  4005e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4005ec:	200008e4 	.word	0x200008e4
  4005f0:	200008dc 	.word	0x200008dc

004005f4 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4005f4:	3801      	subs	r0, #1
  4005f6:	2802      	cmp	r0, #2
  4005f8:	d815      	bhi.n	400626 <_write+0x32>
int __attribute__((weak))
_write (int file, const char *ptr, int len);

int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
  4005fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4005fe:	460e      	mov	r6, r1
  400600:	4614      	mov	r4, r2

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  400602:	b19a      	cbz	r2, 40062c <_write+0x38>
  400604:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  400606:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400640 <_write+0x4c>
  40060a:	4f0c      	ldr	r7, [pc, #48]	; (40063c <_write+0x48>)
  40060c:	f8d8 0000 	ldr.w	r0, [r8]
  400610:	f815 1b01 	ldrb.w	r1, [r5], #1
  400614:	683b      	ldr	r3, [r7, #0]
  400616:	4798      	blx	r3
  400618:	2800      	cmp	r0, #0
  40061a:	db0a      	blt.n	400632 <_write+0x3e>
  40061c:	1ba8      	subs	r0, r5, r6

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  40061e:	3c01      	subs	r4, #1
  400620:	d1f4      	bne.n	40060c <_write+0x18>
  400622:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
  400626:	f04f 30ff 	mov.w	r0, #4294967295
			return -1;
		}
		++nChars;
	}
	return nChars;
}
  40062a:	4770      	bx	lr

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  40062c:	2000      	movs	r0, #0
  40062e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
  400632:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  400636:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40063a:	bf00      	nop
  40063c:	200008e0 	.word	0x200008e0
  400640:	200008e4 	.word	0x200008e4

00400644 <board_init>:
		ioport_set_pin_mode(pin, mode);\
		ioport_disable_pin(pin);\
	} while (0)
	
void board_init(void)
{
  400644:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400646:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40064a:	4b25      	ldr	r3, [pc, #148]	; (4006e0 <board_init+0x9c>)
  40064c:	605a      	str	r2, [r3, #4]
  40064e:	200b      	movs	r0, #11
  400650:	4c24      	ldr	r4, [pc, #144]	; (4006e4 <board_init+0xa0>)
  400652:	47a0      	blx	r4
  400654:	200c      	movs	r0, #12
  400656:	47a0      	blx	r4
  400658:	200d      	movs	r0, #13
  40065a:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  40065c:	4b22      	ldr	r3, [pc, #136]	; (4006e8 <board_init+0xa4>)
  40065e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  400662:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400664:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400668:	631a      	str	r2, [r3, #48]	; 0x30
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  40066a:	f5a3 7300 	sub.w	r3, r3, #512	; 0x200
  40066e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  400672:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400674:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		ioport_port_mask_t mask, ioport_mode_t mode)
{
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
  400678:	665a      	str	r2, [r3, #100]	; 0x64

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  40067a:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  40067e:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  400680:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  400682:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  400686:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400688:	f022 4280 	bic.w	r2, r2, #1073741824	; 0x40000000
  40068c:	671a      	str	r2, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  40068e:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400690:	f022 4280 	bic.w	r2, r2, #1073741824	; 0x40000000
  400694:	675a      	str	r2, [r3, #116]	; 0x74
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400696:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  40069a:	631a      	str	r2, [r3, #48]	; 0x30
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  40069c:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40069e:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4006a2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  4006a6:	631a      	str	r2, [r3, #48]	; 0x30
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4006a8:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4006aa:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4006ae:	4a0f      	ldr	r2, [pc, #60]	; (4006ec <board_init+0xa8>)
  4006b0:	2108      	movs	r1, #8
  4006b2:	6311      	str	r1, [r2, #48]	; 0x30
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4006b4:	6111      	str	r1, [r2, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4006b6:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  4006ba:	f44f 62c0 	mov.w	r2, #1536	; 0x600
  4006be:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  4006c0:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  4006c4:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  4006c6:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  4006c8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  4006cc:	6f19      	ldr	r1, [r3, #112]	; 0x70
  4006ce:	f421 61c0 	bic.w	r1, r1, #1536	; 0x600
  4006d2:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  4006d4:	6f59      	ldr	r1, [r3, #116]	; 0x74
  4006d6:	f421 61c0 	bic.w	r1, r1, #1536	; 0x600
  4006da:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4006dc:	605a      	str	r2, [r3, #4]
  4006de:	bd10      	pop	{r4, pc}
  4006e0:	400e1450 	.word	0x400e1450
  4006e4:	00400989 	.word	0x00400989
  4006e8:	400e1000 	.word	0x400e1000
  4006ec:	400e1200 	.word	0x400e1200

004006f0 <adc_get_config_defaults>:
	Assert(cfg);

#if SAMG55
	cfg->resolution = ADC_12_BITS;
#else
	cfg->resolution = ADC_10_BITS;
  4006f0:	2300      	movs	r3, #0
  4006f2:	6003      	str	r3, [r0, #0]
#endif
	cfg->mck = sysclk_get_cpu_hz();
  4006f4:	4a06      	ldr	r2, [pc, #24]	; (400710 <adc_get_config_defaults+0x20>)
  4006f6:	6042      	str	r2, [r0, #4]
	cfg->adc_clock = 6000000UL;
  4006f8:	4a06      	ldr	r2, [pc, #24]	; (400714 <adc_get_config_defaults+0x24>)
  4006fa:	6082      	str	r2, [r0, #8]
	cfg->startup_time = ADC_STARTUP_TIME_4;
  4006fc:	f44f 2280 	mov.w	r2, #262144	; 0x40000
  400700:	60c2      	str	r2, [r0, #12]
	cfg->tracktim = 2;
  400702:	2202      	movs	r2, #2
  400704:	7402      	strb	r2, [r0, #16]
	cfg->transfer = 2;
  400706:	7442      	strb	r2, [r0, #17]
	cfg->useq = false;
  400708:	7483      	strb	r3, [r0, #18]
	cfg->tag = false;
  40070a:	74c3      	strb	r3, [r0, #19]
	cfg->aste = false;
  40070c:	7503      	strb	r3, [r0, #20]
  40070e:	4770      	bx	lr
  400710:	05f5e100 	.word	0x05f5e100
  400714:	005b8d80 	.word	0x005b8d80

00400718 <adc_set_resolution>:
		const enum adc_resolution res)
{
#if SAMG55
	adc->ADC_EMR |= res;
#else
	if (res == ADC_11_BITS || res == ADC_12_BITS) {
  400718:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
  40071c:	d002      	beq.n	400724 <adc_set_resolution+0xc>
  40071e:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
  400722:	d107      	bne.n	400734 <adc_set_resolution+0x1c>
		adc->ADC_MR &= ~ADC_MR_LOWRES;
  400724:	6843      	ldr	r3, [r0, #4]
  400726:	f023 0310 	bic.w	r3, r3, #16
  40072a:	6043      	str	r3, [r0, #4]
		adc->ADC_EMR |= res;
  40072c:	6c03      	ldr	r3, [r0, #64]	; 0x40
  40072e:	4319      	orrs	r1, r3
  400730:	6401      	str	r1, [r0, #64]	; 0x40
  400732:	4770      	bx	lr
	} else {
		adc->ADC_MR |= res;
  400734:	6843      	ldr	r3, [r0, #4]
  400736:	4319      	orrs	r1, r3
  400738:	6041      	str	r1, [r0, #4]
		adc->ADC_EMR &= ~ADC_EMR_OSR_Msk;
  40073a:	6c03      	ldr	r3, [r0, #64]	; 0x40
  40073c:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
  400740:	6403      	str	r3, [r0, #64]	; 0x40
  400742:	4770      	bx	lr

00400744 <adc_init>:
 *
 * \retval STATUS_OK  Initialization is finished.
 * \retval STATUS_ERR_BUSY  Initialization failed.
 */
enum status_code adc_init(Adc *const adc, struct adc_config *config)
{
  400744:	b538      	push	{r3, r4, r5, lr}
 *
 * \return The interrupt status value.
 */
static inline uint32_t adc_get_interrupt_status(Adc *const adc)
{
	return adc->ADC_ISR;
  400746:	6b03      	ldr	r3, [r0, #48]	; 0x30
	Assert(adc);
	Assert(config);

	if ((adc_get_interrupt_status(adc) & ADC_ISR_DRDY) == ADC_ISR_DRDY) {
  400748:	f013 7380 	ands.w	r3, r3, #16777216	; 0x1000000
  40074c:	d137      	bne.n	4007be <adc_init+0x7a>
		return STATUS_ERR_BUSY;
	}

	/* Reset and configure the ADC module */
	adc->ADC_CR = ADC_CR_SWRST;
  40074e:	2201      	movs	r2, #1
  400750:	6002      	str	r2, [r0, #0]
 */
static void adc_set_config(Adc *const adc, struct adc_config *config)
{
	uint32_t reg = 0;

	reg =  (config->useq ? ADC_MR_USEQ_REG_ORDER : 0) |
  400752:	7c8a      	ldrb	r2, [r1, #18]
  400754:	2a00      	cmp	r2, #0
  400756:	bf18      	it	ne
  400758:	f04f 4300 	movne.w	r3, #2147483648	; 0x80000000
  40075c:	7c0a      	ldrb	r2, [r1, #16]
  40075e:	0612      	lsls	r2, r2, #24
  400760:	f002 6470 	and.w	r4, r2, #251658240	; 0xf000000
  400764:	7c4a      	ldrb	r2, [r1, #17]
  400766:	0712      	lsls	r2, r2, #28
  400768:	f002 5240 	and.w	r2, r2, #805306368	; 0x30000000
  40076c:	4322      	orrs	r2, r4
  40076e:	68cc      	ldr	r4, [r1, #12]
  400770:	4314      	orrs	r4, r2
  400772:	688a      	ldr	r2, [r1, #8]
  400774:	0055      	lsls	r5, r2, #1
  400776:	684a      	ldr	r2, [r1, #4]
  400778:	fbb2 f2f5 	udiv	r2, r2, r5
  40077c:	3a01      	subs	r2, #1
  40077e:	0212      	lsls	r2, r2, #8
  400780:	b292      	uxth	r2, r2
  400782:	4322      	orrs	r2, r4
  400784:	4313      	orrs	r3, r2
			(2 * config->adc_clock) - 1) |
			ADC_MR_TRACKTIM(config->tracktim) |
			ADC_MR_TRANSFER(config->transfer) |
			(config->startup_time);

	adc->ADC_MR = reg;
  400786:	6043      	str	r3, [r0, #4]

	adc->ADC_EMR = (config->tag ? ADC_EMR_TAG : 0) |
  400788:	7ccb      	ldrb	r3, [r1, #19]
  40078a:	2b00      	cmp	r3, #0
  40078c:	bf14      	ite	ne
  40078e:	f04f 7280 	movne.w	r2, #16777216	; 0x1000000
  400792:	2200      	moveq	r2, #0
			(config->aste ? ADC_EMR_ASTE_SINGLE_TRIG_AVERAGE : 0);
  400794:	7d0b      	ldrb	r3, [r1, #20]
  400796:	2b00      	cmp	r3, #0
  400798:	bf14      	ite	ne
  40079a:	f44f 1380 	movne.w	r3, #1048576	; 0x100000
  40079e:	2300      	moveq	r3, #0
			ADC_MR_TRANSFER(config->transfer) |
			(config->startup_time);

	adc->ADC_MR = reg;

	adc->ADC_EMR = (config->tag ? ADC_EMR_TAG : 0) |
  4007a0:	4313      	orrs	r3, r2
  4007a2:	6403      	str	r3, [r0, #64]	; 0x40
			(config->aste ? ADC_EMR_ASTE_SINGLE_TRIG_AVERAGE : 0);

	adc_set_resolution(adc, config->resolution);
  4007a4:	6809      	ldr	r1, [r1, #0]
  4007a6:	4b07      	ldr	r3, [pc, #28]	; (4007c4 <adc_init+0x80>)
  4007a8:	4798      	blx	r3
  4007aa:	4b07      	ldr	r3, [pc, #28]	; (4007c8 <adc_init+0x84>)
  4007ac:	f103 0160 	add.w	r1, r3, #96	; 0x60
	adc->ADC_CR = ADC_CR_SWRST;
	adc_set_config(adc, config);

	uint32_t i;
	for (i = 0; i < ADC_NUM_OF_INTERRUPT_SOURCE; i++) {
		adc_callback_pointer[i] = 0;
  4007b0:	2200      	movs	r2, #0
  4007b2:	f843 2f04 	str.w	r2, [r3, #4]!
	/* Reset and configure the ADC module */
	adc->ADC_CR = ADC_CR_SWRST;
	adc_set_config(adc, config);

	uint32_t i;
	for (i = 0; i < ADC_NUM_OF_INTERRUPT_SOURCE; i++) {
  4007b6:	428b      	cmp	r3, r1
  4007b8:	d1fb      	bne.n	4007b2 <adc_init+0x6e>
		adc_callback_pointer[i] = 0;
	}

	return STATUS_OK;
  4007ba:	2000      	movs	r0, #0
  4007bc:	bd38      	pop	{r3, r4, r5, pc}
{
	Assert(adc);
	Assert(config);

	if ((adc_get_interrupt_status(adc) & ADC_ISR_DRDY) == ADC_ISR_DRDY) {
		return STATUS_ERR_BUSY;
  4007be:	2019      	movs	r0, #25
	for (i = 0; i < ADC_NUM_OF_INTERRUPT_SOURCE; i++) {
		adc_callback_pointer[i] = 0;
	}

	return STATUS_OK;
}
  4007c0:	bd38      	pop	{r3, r4, r5, pc}
  4007c2:	bf00      	nop
  4007c4:	00400719 	.word	0x00400719
  4007c8:	200008e4 	.word	0x200008e4

004007cc <adc_enable_interrupt>:
 * \param interrupt_source Interrupts to be enabled.
 */
void adc_enable_interrupt(Adc *const adc,
		enum adc_interrupt_source interrupt_source)
{
	if (interrupt_source == ADC_INTERRUPT_ALL) {
  4007cc:	f1b1 3fff 	cmp.w	r1, #4294967295
		adc->ADC_IER = ADC_INTERRUPT_ALL;
  4007d0:	bf0e      	itee	eq
  4007d2:	f04f 33ff 	moveq.w	r3, #4294967295
		return;
	} else {
		adc->ADC_IER = adc_interrupt_mask[interrupt_source];
  4007d6:	4b02      	ldrne	r3, [pc, #8]	; (4007e0 <adc_enable_interrupt+0x14>)
  4007d8:	f853 3021 	ldrne.w	r3, [r3, r1, lsl #2]
  4007dc:	6243      	str	r3, [r0, #36]	; 0x24
  4007de:	4770      	bx	lr
  4007e0:	00405628 	.word	0x00405628

004007e4 <adc_set_callback>:
 * \param callback  Callback function pointer
 * \param irq_level Interrupt level
 */
void adc_set_callback(Adc *const adc, enum adc_interrupt_source source,
		adc_callback_t callback, uint8_t irq_level)
{
  4007e4:	b510      	push	{r4, lr}
	Assert(adc);
	Assert(callback);

	adc_callback_pointer[source] = callback;
  4007e6:	4c08      	ldr	r4, [pc, #32]	; (400808 <adc_set_callback+0x24>)
  4007e8:	f844 2021 	str.w	r2, [r4, r1, lsl #2]

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  4007ec:	4a07      	ldr	r2, [pc, #28]	; (40080c <adc_set_callback+0x28>)
  4007ee:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
  4007f2:	f8c2 4180 	str.w	r4, [r2, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  4007f6:	011b      	lsls	r3, r3, #4
  4007f8:	b2db      	uxtb	r3, r3
  4007fa:	f882 331d 	strb.w	r3, [r2, #797]	; 0x31d
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4007fe:	6014      	str	r4, [r2, #0]
	irq_register_handler(ADC_IRQn, irq_level);

	/* Enable the specified interrupt source */
	adc_enable_interrupt(adc, source);
  400800:	4b03      	ldr	r3, [pc, #12]	; (400810 <adc_set_callback+0x2c>)
  400802:	4798      	blx	r3
  400804:	bd10      	pop	{r4, pc}
  400806:	bf00      	nop
  400808:	200008e8 	.word	0x200008e8
  40080c:	e000e100 	.word	0xe000e100
  400810:	004007cd 	.word	0x004007cd

00400814 <ADC_Handler>:

/**
 * \brief Interrupt handler for ADC.
 */
void ADC_Handler(void)
{
  400814:	b570      	push	{r4, r5, r6, lr}
  400816:	b082      	sub	sp, #8
  400818:	4b09      	ldr	r3, [pc, #36]	; (400840 <ADC_Handler+0x2c>)
  40081a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
static void adc_process_callback(Adc *const adc)
{
	volatile uint32_t status;
	uint32_t cnt;

	status = adc_get_interrupt_status(adc);
  40081c:	9301      	str	r3, [sp, #4]
  40081e:	4e09      	ldr	r6, [pc, #36]	; (400844 <ADC_Handler+0x30>)
  400820:	1f34      	subs	r4, r6, #4
  400822:	4d09      	ldr	r5, [pc, #36]	; (400848 <ADC_Handler+0x34>)
  400824:	365c      	adds	r6, #92	; 0x5c

	for (cnt = 0; cnt < ADC_NUM_OF_INTERRUPT_SOURCE; cnt++) {
		if (status & adc_interrupt_mask[cnt]) {
  400826:	9a01      	ldr	r2, [sp, #4]
  400828:	f854 3f04 	ldr.w	r3, [r4, #4]!
  40082c:	421a      	tst	r2, r3
  40082e:	d002      	beq.n	400836 <ADC_Handler+0x22>
 * \param inst_num ADC instance number to handle interrupt for
 * \param source   Interrupt source number
 */
static void adc_interrupt(enum adc_interrupt_source source)
{
	if (adc_callback_pointer[source]) {
  400830:	682b      	ldr	r3, [r5, #0]
  400832:	b103      	cbz	r3, 400836 <ADC_Handler+0x22>
		adc_callback_pointer[source]();
  400834:	4798      	blx	r3
  400836:	3504      	adds	r5, #4
	volatile uint32_t status;
	uint32_t cnt;

	status = adc_get_interrupt_status(adc);

	for (cnt = 0; cnt < ADC_NUM_OF_INTERRUPT_SOURCE; cnt++) {
  400838:	42b4      	cmp	r4, r6
  40083a:	d1f4      	bne.n	400826 <ADC_Handler+0x12>
 * \brief Interrupt handler for ADC.
 */
void ADC_Handler(void)
{
	adc_process_callback(ADC);
}
  40083c:	b002      	add	sp, #8
  40083e:	bd70      	pop	{r4, r5, r6, pc}
  400840:	40038000 	.word	0x40038000
  400844:	00405628 	.word	0x00405628
  400848:	200008e8 	.word	0x200008e8

0040084c <adc_enable>:
/**
 * \brief Enable ADC Module.
 *
 */
void adc_enable(void)
{
  40084c:	b500      	push	{lr}
  40084e:	b083      	sub	sp, #12
	/* Enable peripheral clock. */
	pmc_enable_periph_clk(ID_ADC);
  400850:	201d      	movs	r0, #29
  400852:	4b11      	ldr	r3, [pc, #68]	; (400898 <adc_enable+0x4c>)
  400854:	4798      	blx	r3
static inline void sleepmgr_lock_mode(enum sleepmgr_mode mode)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	irqflags_t flags;

	if(sleepmgr_locks[mode] >= 0xff) {
  400856:	4b11      	ldr	r3, [pc, #68]	; (40089c <adc_enable+0x50>)
  400858:	789b      	ldrb	r3, [r3, #2]
  40085a:	2bff      	cmp	r3, #255	; 0xff
  40085c:	d100      	bne.n	400860 <adc_enable+0x14>
  40085e:	e7fe      	b.n	40085e <adc_enable+0x12>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  400860:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400864:	fab3 f383 	clz	r3, r3
  400868:	095b      	lsrs	r3, r3, #5
  40086a:	9301      	str	r3, [sp, #4]
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  40086c:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
  40086e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400872:	2200      	movs	r2, #0
  400874:	4b0a      	ldr	r3, [pc, #40]	; (4008a0 <adc_enable+0x54>)
  400876:	701a      	strb	r2, [r3, #0]
	return flags;
  400878:	9901      	ldr	r1, [sp, #4]
	}

	// Enter a critical section
	flags = cpu_irq_save();

	++sleepmgr_locks[mode];
  40087a:	4a08      	ldr	r2, [pc, #32]	; (40089c <adc_enable+0x50>)
  40087c:	7893      	ldrb	r3, [r2, #2]
  40087e:	3301      	adds	r3, #1
  400880:	7093      	strb	r3, [r2, #2]
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  400882:	b129      	cbz	r1, 400890 <adc_enable+0x44>
		cpu_irq_enable();
  400884:	2201      	movs	r2, #1
  400886:	4b06      	ldr	r3, [pc, #24]	; (4008a0 <adc_enable+0x54>)
  400888:	701a      	strb	r2, [r3, #0]
  40088a:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  40088e:	b662      	cpsie	i
	sleepmgr_lock_mode(SLEEP_MODE_ADC);
}
  400890:	b003      	add	sp, #12
  400892:	f85d fb04 	ldr.w	pc, [sp], #4
  400896:	bf00      	nop
  400898:	00400989 	.word	0x00400989
  40089c:	200008d4 	.word	0x200008d4
  4008a0:	20000000 	.word	0x20000000

004008a4 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  4008a4:	4a18      	ldr	r2, [pc, #96]	; (400908 <pmc_switch_mck_to_pllack+0x64>)
  4008a6:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4008a8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  4008ac:	4318      	orrs	r0, r3
  4008ae:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4008b0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4008b2:	f013 0f08 	tst.w	r3, #8
  4008b6:	d003      	beq.n	4008c0 <pmc_switch_mck_to_pllack+0x1c>
  4008b8:	e009      	b.n	4008ce <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4008ba:	3b01      	subs	r3, #1
  4008bc:	d103      	bne.n	4008c6 <pmc_switch_mck_to_pllack+0x22>
  4008be:	e01e      	b.n	4008fe <pmc_switch_mck_to_pllack+0x5a>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4008c0:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4008c4:	4910      	ldr	r1, [pc, #64]	; (400908 <pmc_switch_mck_to_pllack+0x64>)
  4008c6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4008c8:	f012 0f08 	tst.w	r2, #8
  4008cc:	d0f5      	beq.n	4008ba <pmc_switch_mck_to_pllack+0x16>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  4008ce:	4a0e      	ldr	r2, [pc, #56]	; (400908 <pmc_switch_mck_to_pllack+0x64>)
  4008d0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4008d2:	f023 0303 	bic.w	r3, r3, #3
  4008d6:	f043 0302 	orr.w	r3, r3, #2
  4008da:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4008dc:	6e90      	ldr	r0, [r2, #104]	; 0x68
  4008de:	f010 0008 	ands.w	r0, r0, #8
  4008e2:	d004      	beq.n	4008ee <pmc_switch_mck_to_pllack+0x4a>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
  4008e4:	2000      	movs	r0, #0
  4008e6:	4770      	bx	lr
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
  4008e8:	3b01      	subs	r3, #1
  4008ea:	d103      	bne.n	4008f4 <pmc_switch_mck_to_pllack+0x50>
  4008ec:	e009      	b.n	400902 <pmc_switch_mck_to_pllack+0x5e>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4008ee:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4008f2:	4905      	ldr	r1, [pc, #20]	; (400908 <pmc_switch_mck_to_pllack+0x64>)
  4008f4:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4008f6:	f012 0f08 	tst.w	r2, #8
  4008fa:	d0f5      	beq.n	4008e8 <pmc_switch_mck_to_pllack+0x44>
  4008fc:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  4008fe:	2001      	movs	r0, #1
  400900:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  400902:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400904:	4770      	bx	lr
  400906:	bf00      	nop
  400908:	400e0400 	.word	0x400e0400

0040090c <pmc_switch_mainck_to_fastrc>:
 * \retval 2 Invalid frequency.
 */
void pmc_switch_mainck_to_fastrc(uint32_t ul_moscrcf)
{
	/* Enable Fast RC oscillator but DO NOT switch to RC now */
	PMC->CKGR_MOR |= (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN);
  40090c:	4b11      	ldr	r3, [pc, #68]	; (400954 <pmc_switch_mainck_to_fastrc+0x48>)
  40090e:	6a1a      	ldr	r2, [r3, #32]
  400910:	f442 125c 	orr.w	r2, r2, #3604480	; 0x370000
  400914:	f042 0208 	orr.w	r2, r2, #8
  400918:	621a      	str	r2, [r3, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  40091a:	461a      	mov	r2, r3
  40091c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40091e:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  400922:	d0fb      	beq.n	40091c <pmc_switch_mainck_to_fastrc+0x10>

	/* Change Fast RC oscillator frequency */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  400924:	4a0b      	ldr	r2, [pc, #44]	; (400954 <pmc_switch_mainck_to_fastrc+0x48>)
  400926:	6a13      	ldr	r3, [r2, #32]
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;
  400928:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  40092c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400930:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  400934:	4303      	orrs	r3, r0

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));

	/* Change Fast RC oscillator frequency */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  400936:	6213      	str	r3, [r2, #32]
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  400938:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40093a:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  40093e:	d0fb      	beq.n	400938 <pmc_switch_mainck_to_fastrc+0x2c>

	/* Switch to Fast RC */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  400940:	4a04      	ldr	r2, [pc, #16]	; (400954 <pmc_switch_mainck_to_fastrc+0x48>)
  400942:	6a13      	ldr	r3, [r2, #32]
  400944:	f023 739b 	bic.w	r3, r3, #20316160	; 0x1360000
  400948:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
  40094c:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  400950:	6213      	str	r3, [r2, #32]
  400952:	4770      	bx	lr
  400954:	400e0400 	.word	0x400e0400

00400958 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400958:	4b02      	ldr	r3, [pc, #8]	; (400964 <pmc_osc_is_ready_mainck+0xc>)
  40095a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40095c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400960:	4770      	bx	lr
  400962:	bf00      	nop
  400964:	400e0400 	.word	0x400e0400

00400968 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400968:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  40096c:	4b01      	ldr	r3, [pc, #4]	; (400974 <pmc_disable_pllack+0xc>)
  40096e:	629a      	str	r2, [r3, #40]	; 0x28
  400970:	4770      	bx	lr
  400972:	bf00      	nop
  400974:	400e0400 	.word	0x400e0400

00400978 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400978:	4b02      	ldr	r3, [pc, #8]	; (400984 <pmc_is_locked_pllack+0xc>)
  40097a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40097c:	f000 0002 	and.w	r0, r0, #2
  400980:	4770      	bx	lr
  400982:	bf00      	nop
  400984:	400e0400 	.word	0x400e0400

00400988 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400988:	281f      	cmp	r0, #31
  40098a:	d80c      	bhi.n	4009a6 <pmc_enable_periph_clk+0x1e>
		return 1;
	}

	if (ul_id < 32) {
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  40098c:	4b08      	ldr	r3, [pc, #32]	; (4009b0 <pmc_enable_periph_clk+0x28>)
  40098e:	699a      	ldr	r2, [r3, #24]
  400990:	2301      	movs	r3, #1
  400992:	4083      	lsls	r3, r0
  400994:	4393      	bics	r3, r2
  400996:	d008      	beq.n	4009aa <pmc_enable_periph_clk+0x22>
			PMC->PMC_PCER0 = 1 << ul_id;
  400998:	2301      	movs	r3, #1
  40099a:	fa03 f000 	lsl.w	r0, r3, r0
  40099e:	4b04      	ldr	r3, [pc, #16]	; (4009b0 <pmc_enable_periph_clk+0x28>)
  4009a0:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4009a2:	2000      	movs	r0, #0
  4009a4:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
  4009a6:	2001      	movs	r0, #1
  4009a8:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4009aa:	2000      	movs	r0, #0
}
  4009ac:	4770      	bx	lr
  4009ae:	bf00      	nop
  4009b0:	400e0400 	.word	0x400e0400

004009b4 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  4009b4:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4009b6:	0189      	lsls	r1, r1, #6
  4009b8:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  4009ba:	2402      	movs	r4, #2
  4009bc:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  4009be:	f04f 31ff 	mov.w	r1, #4294967295
  4009c2:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  4009c4:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  4009c6:	605a      	str	r2, [r3, #4]
}
  4009c8:	bc10      	pop	{r4}
  4009ca:	4770      	bx	lr

004009cc <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  4009cc:	0189      	lsls	r1, r1, #6
  4009ce:	2305      	movs	r3, #5
  4009d0:	5043      	str	r3, [r0, r1]
  4009d2:	4770      	bx	lr

004009d4 <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  4009d4:	b4f0      	push	{r4, r5, r6, r7}
  4009d6:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  4009d8:	2402      	movs	r4, #2
  4009da:	9401      	str	r4, [sp, #4]
  4009dc:	2408      	movs	r4, #8
  4009de:	9402      	str	r4, [sp, #8]
  4009e0:	2420      	movs	r4, #32
  4009e2:	9403      	str	r4, [sp, #12]
  4009e4:	2480      	movs	r4, #128	; 0x80
  4009e6:	9404      	str	r4, [sp, #16]
  4009e8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4009ea:	0be4      	lsrs	r4, r4, #15
  4009ec:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  4009ee:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  4009f2:	d81c      	bhi.n	400a2e <tc_find_mck_divisor+0x5a>
  4009f4:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  4009f6:	42a0      	cmp	r0, r4
  4009f8:	d21f      	bcs.n	400a3a <tc_find_mck_divisor+0x66>
  4009fa:	ae01      	add	r6, sp, #4
	uint32_t ul_high, ul_low;

	/*  Satisfy frequency bound. */
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
  4009fc:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  4009fe:	f856 4f04 	ldr.w	r4, [r6, #4]!
  400a02:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  400a06:	0c27      	lsrs	r7, r4, #16
		if (ul_freq > ul_high) {
  400a08:	4284      	cmp	r4, r0
  400a0a:	d312      	bcc.n	400a32 <tc_find_mck_divisor+0x5e>
			return 0;
		} else if (ul_freq >= ul_low) {
  400a0c:	4287      	cmp	r7, r0
  400a0e:	d915      	bls.n	400a3c <tc_find_mck_divisor+0x68>
	uint32_t ul_high, ul_low;

	/*  Satisfy frequency bound. */
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
  400a10:	3501      	adds	r5, #1
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
	uint32_t ul_index;
	uint32_t ul_high, ul_low;

	/*  Satisfy frequency bound. */
	for (ul_index = 0;
  400a12:	2d05      	cmp	r5, #5
  400a14:	d1f3      	bne.n	4009fe <tc_find_mck_divisor+0x2a>
		} else if (ul_freq >= ul_low) {
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  400a16:	2000      	movs	r0, #0
  400a18:	e013      	b.n	400a42 <tc_find_mck_divisor+0x6e>
	}

	/*  Store results. */
	if (p_uldiv) {
		*p_uldiv = divisors[ul_index];
  400a1a:	a906      	add	r1, sp, #24
  400a1c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  400a20:	f851 1c14 	ldr.w	r1, [r1, #-20]
  400a24:	6011      	str	r1, [r2, #0]
	}

	if (p_ultcclks) {
  400a26:	b133      	cbz	r3, 400a36 <tc_find_mck_divisor+0x62>
		*p_ultcclks = ul_index;
  400a28:	601d      	str	r5, [r3, #0]
	}

	return 1;
  400a2a:	2001      	movs	r0, #1
  400a2c:	e009      	b.n	400a42 <tc_find_mck_divisor+0x6e>
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
			return 0;
  400a2e:	2000      	movs	r0, #0
  400a30:	e007      	b.n	400a42 <tc_find_mck_divisor+0x6e>
  400a32:	2000      	movs	r0, #0
  400a34:	e005      	b.n	400a42 <tc_find_mck_divisor+0x6e>

	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
  400a36:	2001      	movs	r0, #1
  400a38:	e003      	b.n	400a42 <tc_find_mck_divisor+0x6e>
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
	uint32_t ul_index;
	uint32_t ul_high, ul_low;

	/*  Satisfy frequency bound. */
	for (ul_index = 0;
  400a3a:	2500      	movs	r5, #0
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
	}

	/*  Store results. */
	if (p_uldiv) {
  400a3c:	2a00      	cmp	r2, #0
  400a3e:	d1ec      	bne.n	400a1a <tc_find_mck_divisor+0x46>
  400a40:	e7f1      	b.n	400a26 <tc_find_mck_divisor+0x52>
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  400a42:	b006      	add	sp, #24
  400a44:	bcf0      	pop	{r4, r5, r6, r7}
  400a46:	4770      	bx	lr

00400a48 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  400a48:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  400a4a:	23ac      	movs	r3, #172	; 0xac
  400a4c:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  400a4e:	680b      	ldr	r3, [r1, #0]
  400a50:	684a      	ldr	r2, [r1, #4]
  400a52:	fbb3 f3f2 	udiv	r3, r3, r2
  400a56:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  400a58:	1e5c      	subs	r4, r3, #1
  400a5a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  400a5e:	4294      	cmp	r4, r2
  400a60:	d80a      	bhi.n	400a78 <uart_init+0x30>
		return 1;

	p_uart->UART_BRGR = cd;
  400a62:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  400a64:	688b      	ldr	r3, [r1, #8]
  400a66:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  400a68:	f240 2302 	movw	r3, #514	; 0x202
  400a6c:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  400a70:	2350      	movs	r3, #80	; 0x50
  400a72:	6003      	str	r3, [r0, #0]

	return 0;
  400a74:	2000      	movs	r0, #0
  400a76:	e000      	b.n	400a7a <uart_init+0x32>

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
		return 1;
  400a78:	2001      	movs	r0, #1

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;

	return 0;
}
  400a7a:	bc10      	pop	{r4}
  400a7c:	4770      	bx	lr
  400a7e:	bf00      	nop

00400a80 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  400a80:	6943      	ldr	r3, [r0, #20]
  400a82:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  400a86:	bf1a      	itte	ne
  400a88:	61c1      	strne	r1, [r0, #28]
	return 0;
  400a8a:	2000      	movne	r0, #0
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
		return 1;
  400a8c:	2001      	moveq	r0, #1

	/* Send character */
	p_uart->UART_THR = uc_data;
	return 0;
}
  400a8e:	4770      	bx	lr

00400a90 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  400a90:	6943      	ldr	r3, [r0, #20]
  400a92:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  400a96:	bf1d      	ittte	ne
  400a98:	6983      	ldrne	r3, [r0, #24]
  400a9a:	700b      	strbne	r3, [r1, #0]
	return 0;
  400a9c:	2000      	movne	r0, #0
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
		return 1;
  400a9e:	2001      	moveq	r0, #1

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
	return 0;
}
  400aa0:	4770      	bx	lr
  400aa2:	bf00      	nop

00400aa4 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400aa4:	6943      	ldr	r3, [r0, #20]
  400aa6:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  400aaa:	bf1d      	ittte	ne
  400aac:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  400ab0:	61c1      	strne	r1, [r0, #28]
	return 0;
  400ab2:	2000      	movne	r0, #0
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
		return 1;
  400ab4:	2001      	moveq	r0, #1
	}

	p_usart->US_THR = US_THR_TXCHR(c);
	return 0;
}
  400ab6:	4770      	bx	lr

00400ab8 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400ab8:	6943      	ldr	r3, [r0, #20]
  400aba:	f013 0f01 	tst.w	r3, #1
  400abe:	d005      	beq.n	400acc <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400ac0:	6983      	ldr	r3, [r0, #24]
  400ac2:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400ac6:	600b      	str	r3, [r1, #0]

	return 0;
  400ac8:	2000      	movs	r0, #0
  400aca:	4770      	bx	lr
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
		return 1;
  400acc:	2001      	movs	r0, #1

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;

	return 0;
}
  400ace:	4770      	bx	lr

00400ad0 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400ad0:	e7fe      	b.n	400ad0 <Dummy_Handler>
  400ad2:	bf00      	nop

00400ad4 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  400ad4:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
  400ad6:	4b19      	ldr	r3, [pc, #100]	; (400b3c <Reset_Handler+0x68>)
  400ad8:	4a19      	ldr	r2, [pc, #100]	; (400b40 <Reset_Handler+0x6c>)
  400ada:	429a      	cmp	r2, r3
  400adc:	d003      	beq.n	400ae6 <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
  400ade:	4b19      	ldr	r3, [pc, #100]	; (400b44 <Reset_Handler+0x70>)
  400ae0:	4a16      	ldr	r2, [pc, #88]	; (400b3c <Reset_Handler+0x68>)
  400ae2:	429a      	cmp	r2, r3
  400ae4:	d304      	bcc.n	400af0 <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  400ae6:	4b18      	ldr	r3, [pc, #96]	; (400b48 <Reset_Handler+0x74>)
  400ae8:	4a18      	ldr	r2, [pc, #96]	; (400b4c <Reset_Handler+0x78>)
  400aea:	429a      	cmp	r2, r3
  400aec:	d30f      	bcc.n	400b0e <Reset_Handler+0x3a>
  400aee:	e01a      	b.n	400b26 <Reset_Handler+0x52>
  400af0:	4912      	ldr	r1, [pc, #72]	; (400b3c <Reset_Handler+0x68>)
  400af2:	4b17      	ldr	r3, [pc, #92]	; (400b50 <Reset_Handler+0x7c>)
  400af4:	1a5b      	subs	r3, r3, r1
  400af6:	f023 0303 	bic.w	r3, r3, #3
  400afa:	3304      	adds	r3, #4
  400afc:	4a10      	ldr	r2, [pc, #64]	; (400b40 <Reset_Handler+0x6c>)
  400afe:	4413      	add	r3, r2
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
			*pDest++ = *pSrc++;
  400b00:	f852 0b04 	ldr.w	r0, [r2], #4
  400b04:	f841 0b04 	str.w	r0, [r1], #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
  400b08:	429a      	cmp	r2, r3
  400b0a:	d1f9      	bne.n	400b00 <Reset_Handler+0x2c>
  400b0c:	e7eb      	b.n	400ae6 <Reset_Handler+0x12>
  400b0e:	4b11      	ldr	r3, [pc, #68]	; (400b54 <Reset_Handler+0x80>)
  400b10:	4a11      	ldr	r2, [pc, #68]	; (400b58 <Reset_Handler+0x84>)
  400b12:	1ad2      	subs	r2, r2, r3
  400b14:	f022 0203 	bic.w	r2, r2, #3
  400b18:	441a      	add	r2, r3
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  400b1a:	3b04      	subs	r3, #4
		*pDest++ = 0;
  400b1c:	2100      	movs	r1, #0
  400b1e:	f843 1b04 	str.w	r1, [r3], #4
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  400b22:	4293      	cmp	r3, r2
  400b24:	d1fb      	bne.n	400b1e <Reset_Handler+0x4a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  400b26:	4a0d      	ldr	r2, [pc, #52]	; (400b5c <Reset_Handler+0x88>)
  400b28:	4b0d      	ldr	r3, [pc, #52]	; (400b60 <Reset_Handler+0x8c>)
  400b2a:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  400b2e:	6093      	str	r3, [r2, #8]

	/* Initialize the C library */
	__libc_init_array();
  400b30:	4b0c      	ldr	r3, [pc, #48]	; (400b64 <Reset_Handler+0x90>)
  400b32:	4798      	blx	r3

	/* Branch to main function */
	main();
  400b34:	4b0c      	ldr	r3, [pc, #48]	; (400b68 <Reset_Handler+0x94>)
  400b36:	4798      	blx	r3
  400b38:	e7fe      	b.n	400b38 <Reset_Handler+0x64>
  400b3a:	bf00      	nop
  400b3c:	20000000 	.word	0x20000000
  400b40:	00405838 	.word	0x00405838
  400b44:	20000874 	.word	0x20000874
  400b48:	2000094c 	.word	0x2000094c
  400b4c:	20000874 	.word	0x20000874
  400b50:	20000873 	.word	0x20000873
  400b54:	20000878 	.word	0x20000878
  400b58:	2000094f 	.word	0x2000094f
  400b5c:	e000ed00 	.word	0xe000ed00
  400b60:	00400000 	.word	0x00400000
  400b64:	00400d2d 	.word	0x00400d2d
  400b68:	004002e5 	.word	0x004002e5

00400b6c <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) {
  400b6c:	4b3c      	ldr	r3, [pc, #240]	; (400c60 <SystemCoreClockUpdate+0xf4>)
  400b6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400b70:	f003 0303 	and.w	r3, r3, #3
  400b74:	2b01      	cmp	r3, #1
  400b76:	d00f      	beq.n	400b98 <SystemCoreClockUpdate+0x2c>
  400b78:	b113      	cbz	r3, 400b80 <SystemCoreClockUpdate+0x14>
  400b7a:	2b02      	cmp	r3, #2
  400b7c:	d029      	beq.n	400bd2 <SystemCoreClockUpdate+0x66>
  400b7e:	e057      	b.n	400c30 <SystemCoreClockUpdate+0xc4>
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
  400b80:	4b38      	ldr	r3, [pc, #224]	; (400c64 <SystemCoreClockUpdate+0xf8>)
  400b82:	695b      	ldr	r3, [r3, #20]
  400b84:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
  400b88:	bf14      	ite	ne
  400b8a:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
  400b8e:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  400b92:	4b35      	ldr	r3, [pc, #212]	; (400c68 <SystemCoreClockUpdate+0xfc>)
  400b94:	601a      	str	r2, [r3, #0]
  400b96:	e04b      	b.n	400c30 <SystemCoreClockUpdate+0xc4>
		}
		break;

	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
  400b98:	4b31      	ldr	r3, [pc, #196]	; (400c60 <SystemCoreClockUpdate+0xf4>)
  400b9a:	6a1b      	ldr	r3, [r3, #32]
  400b9c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400ba0:	d003      	beq.n	400baa <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
  400ba2:	4a32      	ldr	r2, [pc, #200]	; (400c6c <SystemCoreClockUpdate+0x100>)
  400ba4:	4b30      	ldr	r3, [pc, #192]	; (400c68 <SystemCoreClockUpdate+0xfc>)
  400ba6:	601a      	str	r2, [r3, #0]
  400ba8:	e042      	b.n	400c30 <SystemCoreClockUpdate+0xc4>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400baa:	4a31      	ldr	r2, [pc, #196]	; (400c70 <SystemCoreClockUpdate+0x104>)
  400bac:	4b2e      	ldr	r3, [pc, #184]	; (400c68 <SystemCoreClockUpdate+0xfc>)
  400bae:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
  400bb0:	4b2b      	ldr	r3, [pc, #172]	; (400c60 <SystemCoreClockUpdate+0xf4>)
  400bb2:	6a1b      	ldr	r3, [r3, #32]
  400bb4:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400bb8:	2b10      	cmp	r3, #16
  400bba:	d002      	beq.n	400bc2 <SystemCoreClockUpdate+0x56>
  400bbc:	2b20      	cmp	r3, #32
  400bbe:	d004      	beq.n	400bca <SystemCoreClockUpdate+0x5e>
  400bc0:	e036      	b.n	400c30 <SystemCoreClockUpdate+0xc4>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;

			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
  400bc2:	4a2c      	ldr	r2, [pc, #176]	; (400c74 <SystemCoreClockUpdate+0x108>)
  400bc4:	4b28      	ldr	r3, [pc, #160]	; (400c68 <SystemCoreClockUpdate+0xfc>)
  400bc6:	601a      	str	r2, [r3, #0]
				break;
  400bc8:	e032      	b.n	400c30 <SystemCoreClockUpdate+0xc4>

			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
  400bca:	4a28      	ldr	r2, [pc, #160]	; (400c6c <SystemCoreClockUpdate+0x100>)
  400bcc:	4b26      	ldr	r3, [pc, #152]	; (400c68 <SystemCoreClockUpdate+0xfc>)
  400bce:	601a      	str	r2, [r3, #0]
				break;
  400bd0:	e02e      	b.n	400c30 <SystemCoreClockUpdate+0xc4>
			}
		}
		break;

	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
  400bd2:	4b23      	ldr	r3, [pc, #140]	; (400c60 <SystemCoreClockUpdate+0xf4>)
  400bd4:	6a1b      	ldr	r3, [r3, #32]
  400bd6:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400bda:	d003      	beq.n	400be4 <SystemCoreClockUpdate+0x78>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
  400bdc:	4a23      	ldr	r2, [pc, #140]	; (400c6c <SystemCoreClockUpdate+0x100>)
  400bde:	4b22      	ldr	r3, [pc, #136]	; (400c68 <SystemCoreClockUpdate+0xfc>)
  400be0:	601a      	str	r2, [r3, #0]
  400be2:	e012      	b.n	400c0a <SystemCoreClockUpdate+0x9e>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400be4:	4a22      	ldr	r2, [pc, #136]	; (400c70 <SystemCoreClockUpdate+0x104>)
  400be6:	4b20      	ldr	r3, [pc, #128]	; (400c68 <SystemCoreClockUpdate+0xfc>)
  400be8:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
  400bea:	4b1d      	ldr	r3, [pc, #116]	; (400c60 <SystemCoreClockUpdate+0xf4>)
  400bec:	6a1b      	ldr	r3, [r3, #32]
  400bee:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400bf2:	2b10      	cmp	r3, #16
  400bf4:	d002      	beq.n	400bfc <SystemCoreClockUpdate+0x90>
  400bf6:	2b20      	cmp	r3, #32
  400bf8:	d004      	beq.n	400c04 <SystemCoreClockUpdate+0x98>
  400bfa:	e006      	b.n	400c0a <SystemCoreClockUpdate+0x9e>
				/* So the 4MHz RC selection is forbidden */
				Assert(false);
				break;

			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
  400bfc:	4a1d      	ldr	r2, [pc, #116]	; (400c74 <SystemCoreClockUpdate+0x108>)
  400bfe:	4b1a      	ldr	r3, [pc, #104]	; (400c68 <SystemCoreClockUpdate+0xfc>)
  400c00:	601a      	str	r2, [r3, #0]
				break;
  400c02:	e002      	b.n	400c0a <SystemCoreClockUpdate+0x9e>

			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
  400c04:	4a19      	ldr	r2, [pc, #100]	; (400c6c <SystemCoreClockUpdate+0x100>)
  400c06:	4b18      	ldr	r3, [pc, #96]	; (400c68 <SystemCoreClockUpdate+0xfc>)
  400c08:	601a      	str	r2, [r3, #0]
			default:
				break;
			}
		}

		if ((uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  400c0a:	4b15      	ldr	r3, [pc, #84]	; (400c60 <SystemCoreClockUpdate+0xf4>)
  400c0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400c0e:	f003 0303 	and.w	r3, r3, #3
  400c12:	2b02      	cmp	r3, #2
  400c14:	d10c      	bne.n	400c30 <SystemCoreClockUpdate+0xc4>
				PMC_MCKR_CSS_PLLA_CLK) {
			SystemCoreClock *=
					((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  400c16:	4a12      	ldr	r2, [pc, #72]	; (400c60 <SystemCoreClockUpdate+0xf4>)
  400c18:	6a93      	ldr	r3, [r2, #40]	; 0x28
					>> CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  400c1a:	6a92      	ldr	r2, [r2, #40]	; 0x28
  400c1c:	4812      	ldr	r0, [pc, #72]	; (400c68 <SystemCoreClockUpdate+0xfc>)
  400c1e:	f3c3 410a 	ubfx	r1, r3, #16, #11
  400c22:	6803      	ldr	r3, [r0, #0]
  400c24:	fb01 3303 	mla	r3, r1, r3, r3
  400c28:	b2d2      	uxtb	r2, r2
  400c2a:	fbb3 f3f2 	udiv	r3, r3, r2
  400c2e:	6003      	str	r3, [r0, #0]

	default:
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
  400c30:	4b0b      	ldr	r3, [pc, #44]	; (400c60 <SystemCoreClockUpdate+0xf4>)
  400c32:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400c34:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400c38:	2b70      	cmp	r3, #112	; 0x70
  400c3a:	d107      	bne.n	400c4c <SystemCoreClockUpdate+0xe0>
		SystemCoreClock /= 3U;
  400c3c:	4a0a      	ldr	r2, [pc, #40]	; (400c68 <SystemCoreClockUpdate+0xfc>)
  400c3e:	6813      	ldr	r3, [r2, #0]
  400c40:	490d      	ldr	r1, [pc, #52]	; (400c78 <SystemCoreClockUpdate+0x10c>)
  400c42:	fba1 1303 	umull	r1, r3, r1, r3
  400c46:	085b      	lsrs	r3, r3, #1
  400c48:	6013      	str	r3, [r2, #0]
  400c4a:	4770      	bx	lr
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >>
  400c4c:	4b04      	ldr	r3, [pc, #16]	; (400c60 <SystemCoreClockUpdate+0xf4>)
  400c4e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400c50:	4905      	ldr	r1, [pc, #20]	; (400c68 <SystemCoreClockUpdate+0xfc>)
  400c52:	f3c3 1202 	ubfx	r2, r3, #4, #3
  400c56:	680b      	ldr	r3, [r1, #0]
  400c58:	40d3      	lsrs	r3, r2
  400c5a:	600b      	str	r3, [r1, #0]
  400c5c:	4770      	bx	lr
  400c5e:	bf00      	nop
  400c60:	400e0400 	.word	0x400e0400
  400c64:	400e1410 	.word	0x400e1410
  400c68:	20000004 	.word	0x20000004
  400c6c:	00b71b00 	.word	0x00b71b00
  400c70:	003d0900 	.word	0x003d0900
  400c74:	007a1200 	.word	0x007a1200
  400c78:	aaaaaaab 	.word	0xaaaaaaab

00400c7c <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
  400c7c:	4b0f      	ldr	r3, [pc, #60]	; (400cbc <system_init_flash+0x40>)
  400c7e:	4298      	cmp	r0, r3
  400c80:	d804      	bhi.n	400c8c <system_init_flash+0x10>
		EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400c82:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  400c86:	4b0e      	ldr	r3, [pc, #56]	; (400cc0 <system_init_flash+0x44>)
  400c88:	601a      	str	r2, [r3, #0]
  400c8a:	4770      	bx	lr
	} else {
		if (ul_clk < CHIP_FREQ_FWS_1) {
  400c8c:	4b0d      	ldr	r3, [pc, #52]	; (400cc4 <system_init_flash+0x48>)
  400c8e:	4298      	cmp	r0, r3
  400c90:	d803      	bhi.n	400c9a <system_init_flash+0x1e>
			EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400c92:	4a0d      	ldr	r2, [pc, #52]	; (400cc8 <system_init_flash+0x4c>)
  400c94:	4b0a      	ldr	r3, [pc, #40]	; (400cc0 <system_init_flash+0x44>)
  400c96:	601a      	str	r2, [r3, #0]
  400c98:	4770      	bx	lr
		} else {
			if (ul_clk < CHIP_FREQ_FWS_2) {
  400c9a:	4b0c      	ldr	r3, [pc, #48]	; (400ccc <system_init_flash+0x50>)
  400c9c:	4298      	cmp	r0, r3
  400c9e:	d803      	bhi.n	400ca8 <system_init_flash+0x2c>
				EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400ca0:	4a0b      	ldr	r2, [pc, #44]	; (400cd0 <system_init_flash+0x54>)
  400ca2:	4b07      	ldr	r3, [pc, #28]	; (400cc0 <system_init_flash+0x44>)
  400ca4:	601a      	str	r2, [r3, #0]
  400ca6:	4770      	bx	lr
			} else {
				if (ul_clk < CHIP_FREQ_FWS_3) {
  400ca8:	4b0a      	ldr	r3, [pc, #40]	; (400cd4 <system_init_flash+0x58>)
  400caa:	4298      	cmp	r0, r3
					EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400cac:	bf94      	ite	ls
  400cae:	4a0a      	ldrls	r2, [pc, #40]	; (400cd8 <system_init_flash+0x5c>)
				} else {
					EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  400cb0:	f04f 2204 	movhi.w	r2, #67109888	; 0x4000400
  400cb4:	4b02      	ldr	r3, [pc, #8]	; (400cc0 <system_init_flash+0x44>)
  400cb6:	601a      	str	r2, [r3, #0]
  400cb8:	4770      	bx	lr
  400cba:	bf00      	nop
  400cbc:	01312cff 	.word	0x01312cff
  400cc0:	400e0a00 	.word	0x400e0a00
  400cc4:	026259ff 	.word	0x026259ff
  400cc8:	04000100 	.word	0x04000100
  400ccc:	039386ff 	.word	0x039386ff
  400cd0:	04000200 	.word	0x04000200
  400cd4:	04c4b3ff 	.word	0x04c4b3ff
  400cd8:	04000300 	.word	0x04000300

00400cdc <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400cdc:	4b09      	ldr	r3, [pc, #36]	; (400d04 <_sbrk+0x28>)
  400cde:	681b      	ldr	r3, [r3, #0]
  400ce0:	b913      	cbnz	r3, 400ce8 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
  400ce2:	4a09      	ldr	r2, [pc, #36]	; (400d08 <_sbrk+0x2c>)
  400ce4:	4b07      	ldr	r3, [pc, #28]	; (400d04 <_sbrk+0x28>)
  400ce6:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  400ce8:	4b06      	ldr	r3, [pc, #24]	; (400d04 <_sbrk+0x28>)
  400cea:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400cec:	181a      	adds	r2, r3, r0
  400cee:	4907      	ldr	r1, [pc, #28]	; (400d0c <_sbrk+0x30>)
  400cf0:	4291      	cmp	r1, r2
  400cf2:	db04      	blt.n	400cfe <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
  400cf4:	4610      	mov	r0, r2
  400cf6:	4a03      	ldr	r2, [pc, #12]	; (400d04 <_sbrk+0x28>)
  400cf8:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400cfa:	4618      	mov	r0, r3
  400cfc:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
  400cfe:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
  400d02:	4770      	bx	lr
  400d04:	2000089c 	.word	0x2000089c
  400d08:	20003950 	.word	0x20003950
  400d0c:	20013ffc 	.word	0x20013ffc

00400d10 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400d10:	f04f 30ff 	mov.w	r0, #4294967295
  400d14:	4770      	bx	lr
  400d16:	bf00      	nop

00400d18 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400d18:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400d1c:	604b      	str	r3, [r1, #4]

	return 0;
}
  400d1e:	2000      	movs	r0, #0
  400d20:	4770      	bx	lr
  400d22:	bf00      	nop

00400d24 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400d24:	2001      	movs	r0, #1
  400d26:	4770      	bx	lr

00400d28 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400d28:	2000      	movs	r0, #0
  400d2a:	4770      	bx	lr

00400d2c <__libc_init_array>:
  400d2c:	b570      	push	{r4, r5, r6, lr}
  400d2e:	4e0f      	ldr	r6, [pc, #60]	; (400d6c <__libc_init_array+0x40>)
  400d30:	4d0f      	ldr	r5, [pc, #60]	; (400d70 <__libc_init_array+0x44>)
  400d32:	1b76      	subs	r6, r6, r5
  400d34:	10b6      	asrs	r6, r6, #2
  400d36:	bf18      	it	ne
  400d38:	2400      	movne	r4, #0
  400d3a:	d005      	beq.n	400d48 <__libc_init_array+0x1c>
  400d3c:	3401      	adds	r4, #1
  400d3e:	f855 3b04 	ldr.w	r3, [r5], #4
  400d42:	4798      	blx	r3
  400d44:	42a6      	cmp	r6, r4
  400d46:	d1f9      	bne.n	400d3c <__libc_init_array+0x10>
  400d48:	4e0a      	ldr	r6, [pc, #40]	; (400d74 <__libc_init_array+0x48>)
  400d4a:	4d0b      	ldr	r5, [pc, #44]	; (400d78 <__libc_init_array+0x4c>)
  400d4c:	1b76      	subs	r6, r6, r5
  400d4e:	f004 fd5d 	bl	40580c <_init>
  400d52:	10b6      	asrs	r6, r6, #2
  400d54:	bf18      	it	ne
  400d56:	2400      	movne	r4, #0
  400d58:	d006      	beq.n	400d68 <__libc_init_array+0x3c>
  400d5a:	3401      	adds	r4, #1
  400d5c:	f855 3b04 	ldr.w	r3, [r5], #4
  400d60:	4798      	blx	r3
  400d62:	42a6      	cmp	r6, r4
  400d64:	d1f9      	bne.n	400d5a <__libc_init_array+0x2e>
  400d66:	bd70      	pop	{r4, r5, r6, pc}
  400d68:	bd70      	pop	{r4, r5, r6, pc}
  400d6a:	bf00      	nop
  400d6c:	00405818 	.word	0x00405818
  400d70:	00405818 	.word	0x00405818
  400d74:	00405820 	.word	0x00405820
  400d78:	00405818 	.word	0x00405818

00400d7c <iprintf>:
  400d7c:	b40f      	push	{r0, r1, r2, r3}
  400d7e:	b500      	push	{lr}
  400d80:	4907      	ldr	r1, [pc, #28]	; (400da0 <iprintf+0x24>)
  400d82:	b083      	sub	sp, #12
  400d84:	ab04      	add	r3, sp, #16
  400d86:	6808      	ldr	r0, [r1, #0]
  400d88:	f853 2b04 	ldr.w	r2, [r3], #4
  400d8c:	6881      	ldr	r1, [r0, #8]
  400d8e:	9301      	str	r3, [sp, #4]
  400d90:	f000 fa00 	bl	401194 <_vfiprintf_r>
  400d94:	b003      	add	sp, #12
  400d96:	f85d eb04 	ldr.w	lr, [sp], #4
  400d9a:	b004      	add	sp, #16
  400d9c:	4770      	bx	lr
  400d9e:	bf00      	nop
  400da0:	20000430 	.word	0x20000430

00400da4 <iscanf>:
  400da4:	b40f      	push	{r0, r1, r2, r3}
  400da6:	b500      	push	{lr}
  400da8:	4907      	ldr	r1, [pc, #28]	; (400dc8 <iscanf+0x24>)
  400daa:	b083      	sub	sp, #12
  400dac:	ab04      	add	r3, sp, #16
  400dae:	6808      	ldr	r0, [r1, #0]
  400db0:	f853 2b04 	ldr.w	r2, [r3], #4
  400db4:	6841      	ldr	r1, [r0, #4]
  400db6:	9301      	str	r3, [sp, #4]
  400db8:	f001 f920 	bl	401ffc <__svfiscanf_r>
  400dbc:	b003      	add	sp, #12
  400dbe:	f85d eb04 	ldr.w	lr, [sp], #4
  400dc2:	b004      	add	sp, #16
  400dc4:	4770      	bx	lr
  400dc6:	bf00      	nop
  400dc8:	20000430 	.word	0x20000430

00400dcc <memset>:
  400dcc:	b470      	push	{r4, r5, r6}
  400dce:	0784      	lsls	r4, r0, #30
  400dd0:	d046      	beq.n	400e60 <memset+0x94>
  400dd2:	1e54      	subs	r4, r2, #1
  400dd4:	2a00      	cmp	r2, #0
  400dd6:	d041      	beq.n	400e5c <memset+0x90>
  400dd8:	b2cd      	uxtb	r5, r1
  400dda:	4603      	mov	r3, r0
  400ddc:	e002      	b.n	400de4 <memset+0x18>
  400dde:	1e62      	subs	r2, r4, #1
  400de0:	b3e4      	cbz	r4, 400e5c <memset+0x90>
  400de2:	4614      	mov	r4, r2
  400de4:	f803 5b01 	strb.w	r5, [r3], #1
  400de8:	079a      	lsls	r2, r3, #30
  400dea:	d1f8      	bne.n	400dde <memset+0x12>
  400dec:	2c03      	cmp	r4, #3
  400dee:	d92e      	bls.n	400e4e <memset+0x82>
  400df0:	b2cd      	uxtb	r5, r1
  400df2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  400df6:	2c0f      	cmp	r4, #15
  400df8:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  400dfc:	d919      	bls.n	400e32 <memset+0x66>
  400dfe:	f103 0210 	add.w	r2, r3, #16
  400e02:	4626      	mov	r6, r4
  400e04:	3e10      	subs	r6, #16
  400e06:	2e0f      	cmp	r6, #15
  400e08:	f842 5c10 	str.w	r5, [r2, #-16]
  400e0c:	f842 5c0c 	str.w	r5, [r2, #-12]
  400e10:	f842 5c08 	str.w	r5, [r2, #-8]
  400e14:	f842 5c04 	str.w	r5, [r2, #-4]
  400e18:	f102 0210 	add.w	r2, r2, #16
  400e1c:	d8f2      	bhi.n	400e04 <memset+0x38>
  400e1e:	f1a4 0210 	sub.w	r2, r4, #16
  400e22:	f022 020f 	bic.w	r2, r2, #15
  400e26:	f004 040f 	and.w	r4, r4, #15
  400e2a:	3210      	adds	r2, #16
  400e2c:	2c03      	cmp	r4, #3
  400e2e:	4413      	add	r3, r2
  400e30:	d90d      	bls.n	400e4e <memset+0x82>
  400e32:	461e      	mov	r6, r3
  400e34:	4622      	mov	r2, r4
  400e36:	3a04      	subs	r2, #4
  400e38:	2a03      	cmp	r2, #3
  400e3a:	f846 5b04 	str.w	r5, [r6], #4
  400e3e:	d8fa      	bhi.n	400e36 <memset+0x6a>
  400e40:	1f22      	subs	r2, r4, #4
  400e42:	f022 0203 	bic.w	r2, r2, #3
  400e46:	3204      	adds	r2, #4
  400e48:	4413      	add	r3, r2
  400e4a:	f004 0403 	and.w	r4, r4, #3
  400e4e:	b12c      	cbz	r4, 400e5c <memset+0x90>
  400e50:	b2c9      	uxtb	r1, r1
  400e52:	441c      	add	r4, r3
  400e54:	f803 1b01 	strb.w	r1, [r3], #1
  400e58:	42a3      	cmp	r3, r4
  400e5a:	d1fb      	bne.n	400e54 <memset+0x88>
  400e5c:	bc70      	pop	{r4, r5, r6}
  400e5e:	4770      	bx	lr
  400e60:	4614      	mov	r4, r2
  400e62:	4603      	mov	r3, r0
  400e64:	e7c2      	b.n	400dec <memset+0x20>
  400e66:	bf00      	nop

00400e68 <_puts_r>:
  400e68:	b5f0      	push	{r4, r5, r6, r7, lr}
  400e6a:	4605      	mov	r5, r0
  400e6c:	b089      	sub	sp, #36	; 0x24
  400e6e:	4608      	mov	r0, r1
  400e70:	460c      	mov	r4, r1
  400e72:	f000 f8e5 	bl	401040 <strlen>
  400e76:	6bab      	ldr	r3, [r5, #56]	; 0x38
  400e78:	4f14      	ldr	r7, [pc, #80]	; (400ecc <_puts_r+0x64>)
  400e7a:	9404      	str	r4, [sp, #16]
  400e7c:	2601      	movs	r6, #1
  400e7e:	1c44      	adds	r4, r0, #1
  400e80:	a904      	add	r1, sp, #16
  400e82:	2202      	movs	r2, #2
  400e84:	9403      	str	r4, [sp, #12]
  400e86:	9005      	str	r0, [sp, #20]
  400e88:	68ac      	ldr	r4, [r5, #8]
  400e8a:	9706      	str	r7, [sp, #24]
  400e8c:	9607      	str	r6, [sp, #28]
  400e8e:	9101      	str	r1, [sp, #4]
  400e90:	9202      	str	r2, [sp, #8]
  400e92:	b1b3      	cbz	r3, 400ec2 <_puts_r+0x5a>
  400e94:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  400e98:	049a      	lsls	r2, r3, #18
  400e9a:	d406      	bmi.n	400eaa <_puts_r+0x42>
  400e9c:	6e62      	ldr	r2, [r4, #100]	; 0x64
  400e9e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  400ea2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  400ea6:	81a3      	strh	r3, [r4, #12]
  400ea8:	6662      	str	r2, [r4, #100]	; 0x64
  400eaa:	4621      	mov	r1, r4
  400eac:	4628      	mov	r0, r5
  400eae:	aa01      	add	r2, sp, #4
  400eb0:	f002 fa28 	bl	403304 <__sfvwrite_r>
  400eb4:	2800      	cmp	r0, #0
  400eb6:	bf14      	ite	ne
  400eb8:	f04f 30ff 	movne.w	r0, #4294967295
  400ebc:	200a      	moveq	r0, #10
  400ebe:	b009      	add	sp, #36	; 0x24
  400ec0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400ec2:	4628      	mov	r0, r5
  400ec4:	f001 ff9e 	bl	402e04 <__sinit>
  400ec8:	e7e4      	b.n	400e94 <_puts_r+0x2c>
  400eca:	bf00      	nop
  400ecc:	00405690 	.word	0x00405690

00400ed0 <puts>:
  400ed0:	4b02      	ldr	r3, [pc, #8]	; (400edc <puts+0xc>)
  400ed2:	4601      	mov	r1, r0
  400ed4:	6818      	ldr	r0, [r3, #0]
  400ed6:	f7ff bfc7 	b.w	400e68 <_puts_r>
  400eda:	bf00      	nop
  400edc:	20000430 	.word	0x20000430

00400ee0 <setbuf>:
  400ee0:	2900      	cmp	r1, #0
  400ee2:	bf0c      	ite	eq
  400ee4:	2202      	moveq	r2, #2
  400ee6:	2200      	movne	r2, #0
  400ee8:	f44f 6380 	mov.w	r3, #1024	; 0x400
  400eec:	f000 b800 	b.w	400ef0 <setvbuf>

00400ef0 <setvbuf>:
  400ef0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  400ef4:	4c51      	ldr	r4, [pc, #324]	; (40103c <setvbuf+0x14c>)
  400ef6:	6825      	ldr	r5, [r4, #0]
  400ef8:	b083      	sub	sp, #12
  400efa:	4604      	mov	r4, r0
  400efc:	460f      	mov	r7, r1
  400efe:	4690      	mov	r8, r2
  400f00:	461e      	mov	r6, r3
  400f02:	b115      	cbz	r5, 400f0a <setvbuf+0x1a>
  400f04:	6bab      	ldr	r3, [r5, #56]	; 0x38
  400f06:	2b00      	cmp	r3, #0
  400f08:	d079      	beq.n	400ffe <setvbuf+0x10e>
  400f0a:	f1b8 0f02 	cmp.w	r8, #2
  400f0e:	d004      	beq.n	400f1a <setvbuf+0x2a>
  400f10:	f1b8 0f01 	cmp.w	r8, #1
  400f14:	d87f      	bhi.n	401016 <setvbuf+0x126>
  400f16:	2e00      	cmp	r6, #0
  400f18:	db7d      	blt.n	401016 <setvbuf+0x126>
  400f1a:	4621      	mov	r1, r4
  400f1c:	4628      	mov	r0, r5
  400f1e:	f001 fecb 	bl	402cb8 <_fflush_r>
  400f22:	6b21      	ldr	r1, [r4, #48]	; 0x30
  400f24:	b141      	cbz	r1, 400f38 <setvbuf+0x48>
  400f26:	f104 0340 	add.w	r3, r4, #64	; 0x40
  400f2a:	4299      	cmp	r1, r3
  400f2c:	d002      	beq.n	400f34 <setvbuf+0x44>
  400f2e:	4628      	mov	r0, r5
  400f30:	f002 f900 	bl	403134 <_free_r>
  400f34:	2300      	movs	r3, #0
  400f36:	6323      	str	r3, [r4, #48]	; 0x30
  400f38:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  400f3c:	2200      	movs	r2, #0
  400f3e:	61a2      	str	r2, [r4, #24]
  400f40:	6062      	str	r2, [r4, #4]
  400f42:	061a      	lsls	r2, r3, #24
  400f44:	d454      	bmi.n	400ff0 <setvbuf+0x100>
  400f46:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  400f4a:	f023 0303 	bic.w	r3, r3, #3
  400f4e:	f1b8 0f02 	cmp.w	r8, #2
  400f52:	81a3      	strh	r3, [r4, #12]
  400f54:	d039      	beq.n	400fca <setvbuf+0xda>
  400f56:	ab01      	add	r3, sp, #4
  400f58:	466a      	mov	r2, sp
  400f5a:	4621      	mov	r1, r4
  400f5c:	4628      	mov	r0, r5
  400f5e:	f002 fbbb 	bl	4036d8 <__swhatbuf_r>
  400f62:	89a3      	ldrh	r3, [r4, #12]
  400f64:	4318      	orrs	r0, r3
  400f66:	81a0      	strh	r0, [r4, #12]
  400f68:	b326      	cbz	r6, 400fb4 <setvbuf+0xc4>
  400f6a:	b327      	cbz	r7, 400fb6 <setvbuf+0xc6>
  400f6c:	6bab      	ldr	r3, [r5, #56]	; 0x38
  400f6e:	2b00      	cmp	r3, #0
  400f70:	d04d      	beq.n	40100e <setvbuf+0x11e>
  400f72:	9b00      	ldr	r3, [sp, #0]
  400f74:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
  400f78:	6027      	str	r7, [r4, #0]
  400f7a:	429e      	cmp	r6, r3
  400f7c:	bf1c      	itt	ne
  400f7e:	f440 6000 	orrne.w	r0, r0, #2048	; 0x800
  400f82:	81a0      	strhne	r0, [r4, #12]
  400f84:	f1b8 0f01 	cmp.w	r8, #1
  400f88:	bf08      	it	eq
  400f8a:	f040 0001 	orreq.w	r0, r0, #1
  400f8e:	b283      	uxth	r3, r0
  400f90:	bf08      	it	eq
  400f92:	81a0      	strheq	r0, [r4, #12]
  400f94:	f003 0008 	and.w	r0, r3, #8
  400f98:	b280      	uxth	r0, r0
  400f9a:	6127      	str	r7, [r4, #16]
  400f9c:	6166      	str	r6, [r4, #20]
  400f9e:	b318      	cbz	r0, 400fe8 <setvbuf+0xf8>
  400fa0:	f013 0001 	ands.w	r0, r3, #1
  400fa4:	d02f      	beq.n	401006 <setvbuf+0x116>
  400fa6:	2000      	movs	r0, #0
  400fa8:	4276      	negs	r6, r6
  400faa:	61a6      	str	r6, [r4, #24]
  400fac:	60a0      	str	r0, [r4, #8]
  400fae:	b003      	add	sp, #12
  400fb0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  400fb4:	9e00      	ldr	r6, [sp, #0]
  400fb6:	4630      	mov	r0, r6
  400fb8:	f002 fc02 	bl	4037c0 <malloc>
  400fbc:	4607      	mov	r7, r0
  400fbe:	b368      	cbz	r0, 40101c <setvbuf+0x12c>
  400fc0:	89a3      	ldrh	r3, [r4, #12]
  400fc2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  400fc6:	81a3      	strh	r3, [r4, #12]
  400fc8:	e7d0      	b.n	400f6c <setvbuf+0x7c>
  400fca:	2000      	movs	r0, #0
  400fcc:	f104 0243 	add.w	r2, r4, #67	; 0x43
  400fd0:	f043 0302 	orr.w	r3, r3, #2
  400fd4:	2500      	movs	r5, #0
  400fd6:	2101      	movs	r1, #1
  400fd8:	81a3      	strh	r3, [r4, #12]
  400fda:	60a5      	str	r5, [r4, #8]
  400fdc:	6022      	str	r2, [r4, #0]
  400fde:	6122      	str	r2, [r4, #16]
  400fe0:	6161      	str	r1, [r4, #20]
  400fe2:	b003      	add	sp, #12
  400fe4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  400fe8:	60a0      	str	r0, [r4, #8]
  400fea:	b003      	add	sp, #12
  400fec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  400ff0:	6921      	ldr	r1, [r4, #16]
  400ff2:	4628      	mov	r0, r5
  400ff4:	f002 f89e 	bl	403134 <_free_r>
  400ff8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  400ffc:	e7a3      	b.n	400f46 <setvbuf+0x56>
  400ffe:	4628      	mov	r0, r5
  401000:	f001 ff00 	bl	402e04 <__sinit>
  401004:	e781      	b.n	400f0a <setvbuf+0x1a>
  401006:	60a6      	str	r6, [r4, #8]
  401008:	b003      	add	sp, #12
  40100a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40100e:	4628      	mov	r0, r5
  401010:	f001 fef8 	bl	402e04 <__sinit>
  401014:	e7ad      	b.n	400f72 <setvbuf+0x82>
  401016:	f04f 30ff 	mov.w	r0, #4294967295
  40101a:	e7e2      	b.n	400fe2 <setvbuf+0xf2>
  40101c:	f8dd 9000 	ldr.w	r9, [sp]
  401020:	45b1      	cmp	r9, r6
  401022:	d006      	beq.n	401032 <setvbuf+0x142>
  401024:	4648      	mov	r0, r9
  401026:	f002 fbcb 	bl	4037c0 <malloc>
  40102a:	4607      	mov	r7, r0
  40102c:	b108      	cbz	r0, 401032 <setvbuf+0x142>
  40102e:	464e      	mov	r6, r9
  401030:	e7c6      	b.n	400fc0 <setvbuf+0xd0>
  401032:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401036:	f04f 30ff 	mov.w	r0, #4294967295
  40103a:	e7c7      	b.n	400fcc <setvbuf+0xdc>
  40103c:	20000430 	.word	0x20000430

00401040 <strlen>:
  401040:	f890 f000 	pld	[r0]
  401044:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  401048:	f020 0107 	bic.w	r1, r0, #7
  40104c:	f06f 0c00 	mvn.w	ip, #0
  401050:	f010 0407 	ands.w	r4, r0, #7
  401054:	f891 f020 	pld	[r1, #32]
  401058:	f040 8049 	bne.w	4010ee <strlen+0xae>
  40105c:	f04f 0400 	mov.w	r4, #0
  401060:	f06f 0007 	mvn.w	r0, #7
  401064:	e9d1 2300 	ldrd	r2, r3, [r1]
  401068:	f891 f040 	pld	[r1, #64]	; 0x40
  40106c:	f100 0008 	add.w	r0, r0, #8
  401070:	fa82 f24c 	uadd8	r2, r2, ip
  401074:	faa4 f28c 	sel	r2, r4, ip
  401078:	fa83 f34c 	uadd8	r3, r3, ip
  40107c:	faa2 f38c 	sel	r3, r2, ip
  401080:	bb4b      	cbnz	r3, 4010d6 <strlen+0x96>
  401082:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  401086:	fa82 f24c 	uadd8	r2, r2, ip
  40108a:	f100 0008 	add.w	r0, r0, #8
  40108e:	faa4 f28c 	sel	r2, r4, ip
  401092:	fa83 f34c 	uadd8	r3, r3, ip
  401096:	faa2 f38c 	sel	r3, r2, ip
  40109a:	b9e3      	cbnz	r3, 4010d6 <strlen+0x96>
  40109c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4010a0:	fa82 f24c 	uadd8	r2, r2, ip
  4010a4:	f100 0008 	add.w	r0, r0, #8
  4010a8:	faa4 f28c 	sel	r2, r4, ip
  4010ac:	fa83 f34c 	uadd8	r3, r3, ip
  4010b0:	faa2 f38c 	sel	r3, r2, ip
  4010b4:	b97b      	cbnz	r3, 4010d6 <strlen+0x96>
  4010b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4010ba:	f101 0120 	add.w	r1, r1, #32
  4010be:	fa82 f24c 	uadd8	r2, r2, ip
  4010c2:	f100 0008 	add.w	r0, r0, #8
  4010c6:	faa4 f28c 	sel	r2, r4, ip
  4010ca:	fa83 f34c 	uadd8	r3, r3, ip
  4010ce:	faa2 f38c 	sel	r3, r2, ip
  4010d2:	2b00      	cmp	r3, #0
  4010d4:	d0c6      	beq.n	401064 <strlen+0x24>
  4010d6:	2a00      	cmp	r2, #0
  4010d8:	bf04      	itt	eq
  4010da:	3004      	addeq	r0, #4
  4010dc:	461a      	moveq	r2, r3
  4010de:	ba12      	rev	r2, r2
  4010e0:	fab2 f282 	clz	r2, r2
  4010e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4010e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4010ec:	4770      	bx	lr
  4010ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4010f2:	f004 0503 	and.w	r5, r4, #3
  4010f6:	f1c4 0000 	rsb	r0, r4, #0
  4010fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4010fe:	f014 0f04 	tst.w	r4, #4
  401102:	f891 f040 	pld	[r1, #64]	; 0x40
  401106:	fa0c f505 	lsl.w	r5, ip, r5
  40110a:	ea62 0205 	orn	r2, r2, r5
  40110e:	bf1c      	itt	ne
  401110:	ea63 0305 	ornne	r3, r3, r5
  401114:	4662      	movne	r2, ip
  401116:	f04f 0400 	mov.w	r4, #0
  40111a:	e7a9      	b.n	401070 <strlen+0x30>

0040111c <__sprint_r.part.0>:
  40111c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  40111e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  401122:	049c      	lsls	r4, r3, #18
  401124:	4692      	mov	sl, r2
  401126:	d52c      	bpl.n	401182 <__sprint_r.part.0+0x66>
  401128:	6893      	ldr	r3, [r2, #8]
  40112a:	6812      	ldr	r2, [r2, #0]
  40112c:	b33b      	cbz	r3, 40117e <__sprint_r.part.0+0x62>
  40112e:	460f      	mov	r7, r1
  401130:	4680      	mov	r8, r0
  401132:	f102 0908 	add.w	r9, r2, #8
  401136:	e919 0060 	ldmdb	r9, {r5, r6}
  40113a:	08b6      	lsrs	r6, r6, #2
  40113c:	d017      	beq.n	40116e <__sprint_r.part.0+0x52>
  40113e:	3d04      	subs	r5, #4
  401140:	2400      	movs	r4, #0
  401142:	e001      	b.n	401148 <__sprint_r.part.0+0x2c>
  401144:	42a6      	cmp	r6, r4
  401146:	d010      	beq.n	40116a <__sprint_r.part.0+0x4e>
  401148:	463a      	mov	r2, r7
  40114a:	f855 1f04 	ldr.w	r1, [r5, #4]!
  40114e:	4640      	mov	r0, r8
  401150:	f001 fec2 	bl	402ed8 <_fputwc_r>
  401154:	1c43      	adds	r3, r0, #1
  401156:	f104 0401 	add.w	r4, r4, #1
  40115a:	d1f3      	bne.n	401144 <__sprint_r.part.0+0x28>
  40115c:	2300      	movs	r3, #0
  40115e:	f8ca 3008 	str.w	r3, [sl, #8]
  401162:	f8ca 3004 	str.w	r3, [sl, #4]
  401166:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40116a:	f8da 3008 	ldr.w	r3, [sl, #8]
  40116e:	eba3 0386 	sub.w	r3, r3, r6, lsl #2
  401172:	f8ca 3008 	str.w	r3, [sl, #8]
  401176:	f109 0908 	add.w	r9, r9, #8
  40117a:	2b00      	cmp	r3, #0
  40117c:	d1db      	bne.n	401136 <__sprint_r.part.0+0x1a>
  40117e:	2000      	movs	r0, #0
  401180:	e7ec      	b.n	40115c <__sprint_r.part.0+0x40>
  401182:	f002 f8bf 	bl	403304 <__sfvwrite_r>
  401186:	2300      	movs	r3, #0
  401188:	f8ca 3008 	str.w	r3, [sl, #8]
  40118c:	f8ca 3004 	str.w	r3, [sl, #4]
  401190:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00401194 <_vfiprintf_r>:
  401194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401198:	b0ab      	sub	sp, #172	; 0xac
  40119a:	461c      	mov	r4, r3
  40119c:	9100      	str	r1, [sp, #0]
  40119e:	4690      	mov	r8, r2
  4011a0:	9304      	str	r3, [sp, #16]
  4011a2:	9005      	str	r0, [sp, #20]
  4011a4:	b118      	cbz	r0, 4011ae <_vfiprintf_r+0x1a>
  4011a6:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4011a8:	2b00      	cmp	r3, #0
  4011aa:	f000 80de 	beq.w	40136a <_vfiprintf_r+0x1d6>
  4011ae:	9800      	ldr	r0, [sp, #0]
  4011b0:	f9b0 100c 	ldrsh.w	r1, [r0, #12]
  4011b4:	b28a      	uxth	r2, r1
  4011b6:	0495      	lsls	r5, r2, #18
  4011b8:	d407      	bmi.n	4011ca <_vfiprintf_r+0x36>
  4011ba:	6e43      	ldr	r3, [r0, #100]	; 0x64
  4011bc:	f441 5200 	orr.w	r2, r1, #8192	; 0x2000
  4011c0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  4011c4:	8182      	strh	r2, [r0, #12]
  4011c6:	6643      	str	r3, [r0, #100]	; 0x64
  4011c8:	b292      	uxth	r2, r2
  4011ca:	0711      	lsls	r1, r2, #28
  4011cc:	f140 80b1 	bpl.w	401332 <_vfiprintf_r+0x19e>
  4011d0:	9b00      	ldr	r3, [sp, #0]
  4011d2:	691b      	ldr	r3, [r3, #16]
  4011d4:	2b00      	cmp	r3, #0
  4011d6:	f000 80ac 	beq.w	401332 <_vfiprintf_r+0x19e>
  4011da:	f002 021a 	and.w	r2, r2, #26
  4011de:	2a0a      	cmp	r2, #10
  4011e0:	f000 80b5 	beq.w	40134e <_vfiprintf_r+0x1ba>
  4011e4:	2300      	movs	r3, #0
  4011e6:	f10d 0b68 	add.w	fp, sp, #104	; 0x68
  4011ea:	9302      	str	r3, [sp, #8]
  4011ec:	930f      	str	r3, [sp, #60]	; 0x3c
  4011ee:	930e      	str	r3, [sp, #56]	; 0x38
  4011f0:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  4011f4:	46da      	mov	sl, fp
  4011f6:	f898 3000 	ldrb.w	r3, [r8]
  4011fa:	4644      	mov	r4, r8
  4011fc:	b1fb      	cbz	r3, 40123e <_vfiprintf_r+0xaa>
  4011fe:	2b25      	cmp	r3, #37	; 0x25
  401200:	d102      	bne.n	401208 <_vfiprintf_r+0x74>
  401202:	e01c      	b.n	40123e <_vfiprintf_r+0xaa>
  401204:	2b25      	cmp	r3, #37	; 0x25
  401206:	d003      	beq.n	401210 <_vfiprintf_r+0x7c>
  401208:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  40120c:	2b00      	cmp	r3, #0
  40120e:	d1f9      	bne.n	401204 <_vfiprintf_r+0x70>
  401210:	ebc8 0504 	rsb	r5, r8, r4
  401214:	b19d      	cbz	r5, 40123e <_vfiprintf_r+0xaa>
  401216:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  401218:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40121a:	f8ca 8000 	str.w	r8, [sl]
  40121e:	3301      	adds	r3, #1
  401220:	442a      	add	r2, r5
  401222:	2b07      	cmp	r3, #7
  401224:	f8ca 5004 	str.w	r5, [sl, #4]
  401228:	920f      	str	r2, [sp, #60]	; 0x3c
  40122a:	930e      	str	r3, [sp, #56]	; 0x38
  40122c:	dd7b      	ble.n	401326 <_vfiprintf_r+0x192>
  40122e:	2a00      	cmp	r2, #0
  401230:	f040 8528 	bne.w	401c84 <_vfiprintf_r+0xaf0>
  401234:	9b02      	ldr	r3, [sp, #8]
  401236:	920e      	str	r2, [sp, #56]	; 0x38
  401238:	442b      	add	r3, r5
  40123a:	46da      	mov	sl, fp
  40123c:	9302      	str	r3, [sp, #8]
  40123e:	7823      	ldrb	r3, [r4, #0]
  401240:	2b00      	cmp	r3, #0
  401242:	f000 843e 	beq.w	401ac2 <_vfiprintf_r+0x92e>
  401246:	2100      	movs	r1, #0
  401248:	f04f 0300 	mov.w	r3, #0
  40124c:	f04f 32ff 	mov.w	r2, #4294967295
  401250:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  401254:	f104 0801 	add.w	r8, r4, #1
  401258:	7863      	ldrb	r3, [r4, #1]
  40125a:	9201      	str	r2, [sp, #4]
  40125c:	4608      	mov	r0, r1
  40125e:	460e      	mov	r6, r1
  401260:	460c      	mov	r4, r1
  401262:	f108 0801 	add.w	r8, r8, #1
  401266:	f1a3 0220 	sub.w	r2, r3, #32
  40126a:	2a58      	cmp	r2, #88	; 0x58
  40126c:	f200 8393 	bhi.w	401996 <_vfiprintf_r+0x802>
  401270:	e8df f012 	tbh	[pc, r2, lsl #1]
  401274:	03910346 	.word	0x03910346
  401278:	034e0391 	.word	0x034e0391
  40127c:	03910391 	.word	0x03910391
  401280:	03910391 	.word	0x03910391
  401284:	03910391 	.word	0x03910391
  401288:	02670289 	.word	0x02670289
  40128c:	00800391 	.word	0x00800391
  401290:	0391026c 	.word	0x0391026c
  401294:	025901c6 	.word	0x025901c6
  401298:	02590259 	.word	0x02590259
  40129c:	02590259 	.word	0x02590259
  4012a0:	02590259 	.word	0x02590259
  4012a4:	02590259 	.word	0x02590259
  4012a8:	03910391 	.word	0x03910391
  4012ac:	03910391 	.word	0x03910391
  4012b0:	03910391 	.word	0x03910391
  4012b4:	03910391 	.word	0x03910391
  4012b8:	03910391 	.word	0x03910391
  4012bc:	039101cb 	.word	0x039101cb
  4012c0:	03910391 	.word	0x03910391
  4012c4:	03910391 	.word	0x03910391
  4012c8:	03910391 	.word	0x03910391
  4012cc:	03910391 	.word	0x03910391
  4012d0:	02140391 	.word	0x02140391
  4012d4:	03910391 	.word	0x03910391
  4012d8:	03910391 	.word	0x03910391
  4012dc:	02ee0391 	.word	0x02ee0391
  4012e0:	03910391 	.word	0x03910391
  4012e4:	03910311 	.word	0x03910311
  4012e8:	03910391 	.word	0x03910391
  4012ec:	03910391 	.word	0x03910391
  4012f0:	03910391 	.word	0x03910391
  4012f4:	03910391 	.word	0x03910391
  4012f8:	03340391 	.word	0x03340391
  4012fc:	0391038a 	.word	0x0391038a
  401300:	03910391 	.word	0x03910391
  401304:	038a0367 	.word	0x038a0367
  401308:	03910391 	.word	0x03910391
  40130c:	0391036c 	.word	0x0391036c
  401310:	02950379 	.word	0x02950379
  401314:	02e90085 	.word	0x02e90085
  401318:	029b0391 	.word	0x029b0391
  40131c:	02ba0391 	.word	0x02ba0391
  401320:	03910391 	.word	0x03910391
  401324:	0353      	.short	0x0353
  401326:	f10a 0a08 	add.w	sl, sl, #8
  40132a:	9b02      	ldr	r3, [sp, #8]
  40132c:	442b      	add	r3, r5
  40132e:	9302      	str	r3, [sp, #8]
  401330:	e785      	b.n	40123e <_vfiprintf_r+0xaa>
  401332:	9900      	ldr	r1, [sp, #0]
  401334:	9805      	ldr	r0, [sp, #20]
  401336:	f001 fba7 	bl	402a88 <__swsetup_r>
  40133a:	2800      	cmp	r0, #0
  40133c:	f040 8558 	bne.w	401df0 <_vfiprintf_r+0xc5c>
  401340:	9b00      	ldr	r3, [sp, #0]
  401342:	899a      	ldrh	r2, [r3, #12]
  401344:	f002 021a 	and.w	r2, r2, #26
  401348:	2a0a      	cmp	r2, #10
  40134a:	f47f af4b 	bne.w	4011e4 <_vfiprintf_r+0x50>
  40134e:	9900      	ldr	r1, [sp, #0]
  401350:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
  401354:	2b00      	cmp	r3, #0
  401356:	f6ff af45 	blt.w	4011e4 <_vfiprintf_r+0x50>
  40135a:	4623      	mov	r3, r4
  40135c:	4642      	mov	r2, r8
  40135e:	9805      	ldr	r0, [sp, #20]
  401360:	f000 fe16 	bl	401f90 <__sbprintf>
  401364:	b02b      	add	sp, #172	; 0xac
  401366:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40136a:	f001 fd4b 	bl	402e04 <__sinit>
  40136e:	e71e      	b.n	4011ae <_vfiprintf_r+0x1a>
  401370:	4264      	negs	r4, r4
  401372:	9304      	str	r3, [sp, #16]
  401374:	f046 0604 	orr.w	r6, r6, #4
  401378:	f898 3000 	ldrb.w	r3, [r8]
  40137c:	e771      	b.n	401262 <_vfiprintf_r+0xce>
  40137e:	2130      	movs	r1, #48	; 0x30
  401380:	9804      	ldr	r0, [sp, #16]
  401382:	f88d 1030 	strb.w	r1, [sp, #48]	; 0x30
  401386:	9901      	ldr	r1, [sp, #4]
  401388:	9406      	str	r4, [sp, #24]
  40138a:	f04f 0300 	mov.w	r3, #0
  40138e:	2278      	movs	r2, #120	; 0x78
  401390:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  401394:	2900      	cmp	r1, #0
  401396:	4603      	mov	r3, r0
  401398:	f88d 2031 	strb.w	r2, [sp, #49]	; 0x31
  40139c:	6804      	ldr	r4, [r0, #0]
  40139e:	f103 0304 	add.w	r3, r3, #4
  4013a2:	f04f 0500 	mov.w	r5, #0
  4013a6:	f046 0202 	orr.w	r2, r6, #2
  4013aa:	f2c0 8525 	blt.w	401df8 <_vfiprintf_r+0xc64>
  4013ae:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  4013b2:	ea54 0205 	orrs.w	r2, r4, r5
  4013b6:	f046 0602 	orr.w	r6, r6, #2
  4013ba:	9304      	str	r3, [sp, #16]
  4013bc:	f040 84bf 	bne.w	401d3e <_vfiprintf_r+0xbaa>
  4013c0:	48b3      	ldr	r0, [pc, #716]	; (401690 <_vfiprintf_r+0x4fc>)
  4013c2:	9b01      	ldr	r3, [sp, #4]
  4013c4:	2b00      	cmp	r3, #0
  4013c6:	f040 841c 	bne.w	401c02 <_vfiprintf_r+0xa6e>
  4013ca:	4699      	mov	r9, r3
  4013cc:	2300      	movs	r3, #0
  4013ce:	9301      	str	r3, [sp, #4]
  4013d0:	9303      	str	r3, [sp, #12]
  4013d2:	465f      	mov	r7, fp
  4013d4:	9b01      	ldr	r3, [sp, #4]
  4013d6:	9a03      	ldr	r2, [sp, #12]
  4013d8:	4293      	cmp	r3, r2
  4013da:	bfb8      	it	lt
  4013dc:	4613      	movlt	r3, r2
  4013de:	461d      	mov	r5, r3
  4013e0:	f1b9 0f00 	cmp.w	r9, #0
  4013e4:	d000      	beq.n	4013e8 <_vfiprintf_r+0x254>
  4013e6:	3501      	adds	r5, #1
  4013e8:	f016 0302 	ands.w	r3, r6, #2
  4013ec:	9307      	str	r3, [sp, #28]
  4013ee:	bf18      	it	ne
  4013f0:	3502      	addne	r5, #2
  4013f2:	f016 0384 	ands.w	r3, r6, #132	; 0x84
  4013f6:	9308      	str	r3, [sp, #32]
  4013f8:	f040 82f1 	bne.w	4019de <_vfiprintf_r+0x84a>
  4013fc:	9b06      	ldr	r3, [sp, #24]
  4013fe:	1b5c      	subs	r4, r3, r5
  401400:	2c00      	cmp	r4, #0
  401402:	f340 82ec 	ble.w	4019de <_vfiprintf_r+0x84a>
  401406:	2c10      	cmp	r4, #16
  401408:	f340 8556 	ble.w	401eb8 <_vfiprintf_r+0xd24>
  40140c:	f8df 9284 	ldr.w	r9, [pc, #644]	; 401694 <_vfiprintf_r+0x500>
  401410:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
  401414:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401416:	46d4      	mov	ip, sl
  401418:	2310      	movs	r3, #16
  40141a:	46c2      	mov	sl, r8
  40141c:	4670      	mov	r0, lr
  40141e:	46a8      	mov	r8, r5
  401420:	464d      	mov	r5, r9
  401422:	f8dd 9014 	ldr.w	r9, [sp, #20]
  401426:	e007      	b.n	401438 <_vfiprintf_r+0x2a4>
  401428:	f100 0e02 	add.w	lr, r0, #2
  40142c:	f10c 0c08 	add.w	ip, ip, #8
  401430:	4608      	mov	r0, r1
  401432:	3c10      	subs	r4, #16
  401434:	2c10      	cmp	r4, #16
  401436:	dd13      	ble.n	401460 <_vfiprintf_r+0x2cc>
  401438:	1c41      	adds	r1, r0, #1
  40143a:	3210      	adds	r2, #16
  40143c:	2907      	cmp	r1, #7
  40143e:	920f      	str	r2, [sp, #60]	; 0x3c
  401440:	f8cc 5000 	str.w	r5, [ip]
  401444:	f8cc 3004 	str.w	r3, [ip, #4]
  401448:	910e      	str	r1, [sp, #56]	; 0x38
  40144a:	dded      	ble.n	401428 <_vfiprintf_r+0x294>
  40144c:	2a00      	cmp	r2, #0
  40144e:	f040 82b7 	bne.w	4019c0 <_vfiprintf_r+0x82c>
  401452:	3c10      	subs	r4, #16
  401454:	2c10      	cmp	r4, #16
  401456:	4610      	mov	r0, r2
  401458:	f04f 0e01 	mov.w	lr, #1
  40145c:	46dc      	mov	ip, fp
  40145e:	dceb      	bgt.n	401438 <_vfiprintf_r+0x2a4>
  401460:	46a9      	mov	r9, r5
  401462:	4670      	mov	r0, lr
  401464:	4645      	mov	r5, r8
  401466:	46d0      	mov	r8, sl
  401468:	46e2      	mov	sl, ip
  40146a:	4422      	add	r2, r4
  40146c:	2807      	cmp	r0, #7
  40146e:	920f      	str	r2, [sp, #60]	; 0x3c
  401470:	f8ca 9000 	str.w	r9, [sl]
  401474:	f8ca 4004 	str.w	r4, [sl, #4]
  401478:	900e      	str	r0, [sp, #56]	; 0x38
  40147a:	f300 8375 	bgt.w	401b68 <_vfiprintf_r+0x9d4>
  40147e:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  401482:	f10a 0a08 	add.w	sl, sl, #8
  401486:	f100 0e01 	add.w	lr, r0, #1
  40148a:	2b00      	cmp	r3, #0
  40148c:	f040 82b0 	bne.w	4019f0 <_vfiprintf_r+0x85c>
  401490:	9b07      	ldr	r3, [sp, #28]
  401492:	2b00      	cmp	r3, #0
  401494:	f000 82c3 	beq.w	401a1e <_vfiprintf_r+0x88a>
  401498:	3202      	adds	r2, #2
  40149a:	a90c      	add	r1, sp, #48	; 0x30
  40149c:	2302      	movs	r3, #2
  40149e:	f1be 0f07 	cmp.w	lr, #7
  4014a2:	920f      	str	r2, [sp, #60]	; 0x3c
  4014a4:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  4014a8:	e88a 000a 	stmia.w	sl, {r1, r3}
  4014ac:	f340 8378 	ble.w	401ba0 <_vfiprintf_r+0xa0c>
  4014b0:	2a00      	cmp	r2, #0
  4014b2:	f040 840a 	bne.w	401cca <_vfiprintf_r+0xb36>
  4014b6:	9b08      	ldr	r3, [sp, #32]
  4014b8:	2b80      	cmp	r3, #128	; 0x80
  4014ba:	f04f 0e01 	mov.w	lr, #1
  4014be:	4610      	mov	r0, r2
  4014c0:	46da      	mov	sl, fp
  4014c2:	f040 82b0 	bne.w	401a26 <_vfiprintf_r+0x892>
  4014c6:	9b06      	ldr	r3, [sp, #24]
  4014c8:	1b5c      	subs	r4, r3, r5
  4014ca:	2c00      	cmp	r4, #0
  4014cc:	f340 82ab 	ble.w	401a26 <_vfiprintf_r+0x892>
  4014d0:	2c10      	cmp	r4, #16
  4014d2:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 401698 <_vfiprintf_r+0x504>
  4014d6:	f340 850b 	ble.w	401ef0 <_vfiprintf_r+0xd5c>
  4014da:	46d6      	mov	lr, sl
  4014dc:	2310      	movs	r3, #16
  4014de:	46c2      	mov	sl, r8
  4014e0:	46a8      	mov	r8, r5
  4014e2:	464d      	mov	r5, r9
  4014e4:	f8dd 9014 	ldr.w	r9, [sp, #20]
  4014e8:	e007      	b.n	4014fa <_vfiprintf_r+0x366>
  4014ea:	f100 0c02 	add.w	ip, r0, #2
  4014ee:	f10e 0e08 	add.w	lr, lr, #8
  4014f2:	4608      	mov	r0, r1
  4014f4:	3c10      	subs	r4, #16
  4014f6:	2c10      	cmp	r4, #16
  4014f8:	dd13      	ble.n	401522 <_vfiprintf_r+0x38e>
  4014fa:	1c41      	adds	r1, r0, #1
  4014fc:	3210      	adds	r2, #16
  4014fe:	2907      	cmp	r1, #7
  401500:	920f      	str	r2, [sp, #60]	; 0x3c
  401502:	f8ce 5000 	str.w	r5, [lr]
  401506:	f8ce 3004 	str.w	r3, [lr, #4]
  40150a:	910e      	str	r1, [sp, #56]	; 0x38
  40150c:	dded      	ble.n	4014ea <_vfiprintf_r+0x356>
  40150e:	2a00      	cmp	r2, #0
  401510:	f040 8315 	bne.w	401b3e <_vfiprintf_r+0x9aa>
  401514:	3c10      	subs	r4, #16
  401516:	2c10      	cmp	r4, #16
  401518:	f04f 0c01 	mov.w	ip, #1
  40151c:	4610      	mov	r0, r2
  40151e:	46de      	mov	lr, fp
  401520:	dceb      	bgt.n	4014fa <_vfiprintf_r+0x366>
  401522:	46a9      	mov	r9, r5
  401524:	4645      	mov	r5, r8
  401526:	46d0      	mov	r8, sl
  401528:	46f2      	mov	sl, lr
  40152a:	4422      	add	r2, r4
  40152c:	f1bc 0f07 	cmp.w	ip, #7
  401530:	920f      	str	r2, [sp, #60]	; 0x3c
  401532:	f8ca 9000 	str.w	r9, [sl]
  401536:	f8ca 4004 	str.w	r4, [sl, #4]
  40153a:	f8cd c038 	str.w	ip, [sp, #56]	; 0x38
  40153e:	f300 83d2 	bgt.w	401ce6 <_vfiprintf_r+0xb52>
  401542:	9b01      	ldr	r3, [sp, #4]
  401544:	9903      	ldr	r1, [sp, #12]
  401546:	1a5c      	subs	r4, r3, r1
  401548:	2c00      	cmp	r4, #0
  40154a:	f10a 0a08 	add.w	sl, sl, #8
  40154e:	f10c 0e01 	add.w	lr, ip, #1
  401552:	4660      	mov	r0, ip
  401554:	f300 826d 	bgt.w	401a32 <_vfiprintf_r+0x89e>
  401558:	9903      	ldr	r1, [sp, #12]
  40155a:	f8ca 7000 	str.w	r7, [sl]
  40155e:	440a      	add	r2, r1
  401560:	f1be 0f07 	cmp.w	lr, #7
  401564:	920f      	str	r2, [sp, #60]	; 0x3c
  401566:	f8ca 1004 	str.w	r1, [sl, #4]
  40156a:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  40156e:	f340 82ce 	ble.w	401b0e <_vfiprintf_r+0x97a>
  401572:	2a00      	cmp	r2, #0
  401574:	f040 833a 	bne.w	401bec <_vfiprintf_r+0xa58>
  401578:	0770      	lsls	r0, r6, #29
  40157a:	920e      	str	r2, [sp, #56]	; 0x38
  40157c:	d538      	bpl.n	4015f0 <_vfiprintf_r+0x45c>
  40157e:	9b06      	ldr	r3, [sp, #24]
  401580:	1b5c      	subs	r4, r3, r5
  401582:	2c00      	cmp	r4, #0
  401584:	dd34      	ble.n	4015f0 <_vfiprintf_r+0x45c>
  401586:	46da      	mov	sl, fp
  401588:	2c10      	cmp	r4, #16
  40158a:	f340 84ab 	ble.w	401ee4 <_vfiprintf_r+0xd50>
  40158e:	f8df 9104 	ldr.w	r9, [pc, #260]	; 401694 <_vfiprintf_r+0x500>
  401592:	990e      	ldr	r1, [sp, #56]	; 0x38
  401594:	464f      	mov	r7, r9
  401596:	2610      	movs	r6, #16
  401598:	f8dd 9014 	ldr.w	r9, [sp, #20]
  40159c:	e006      	b.n	4015ac <_vfiprintf_r+0x418>
  40159e:	1c88      	adds	r0, r1, #2
  4015a0:	f10a 0a08 	add.w	sl, sl, #8
  4015a4:	4619      	mov	r1, r3
  4015a6:	3c10      	subs	r4, #16
  4015a8:	2c10      	cmp	r4, #16
  4015aa:	dd13      	ble.n	4015d4 <_vfiprintf_r+0x440>
  4015ac:	1c4b      	adds	r3, r1, #1
  4015ae:	3210      	adds	r2, #16
  4015b0:	2b07      	cmp	r3, #7
  4015b2:	920f      	str	r2, [sp, #60]	; 0x3c
  4015b4:	f8ca 7000 	str.w	r7, [sl]
  4015b8:	f8ca 6004 	str.w	r6, [sl, #4]
  4015bc:	930e      	str	r3, [sp, #56]	; 0x38
  4015be:	ddee      	ble.n	40159e <_vfiprintf_r+0x40a>
  4015c0:	2a00      	cmp	r2, #0
  4015c2:	f040 828e 	bne.w	401ae2 <_vfiprintf_r+0x94e>
  4015c6:	3c10      	subs	r4, #16
  4015c8:	2c10      	cmp	r4, #16
  4015ca:	f04f 0001 	mov.w	r0, #1
  4015ce:	4611      	mov	r1, r2
  4015d0:	46da      	mov	sl, fp
  4015d2:	dceb      	bgt.n	4015ac <_vfiprintf_r+0x418>
  4015d4:	46b9      	mov	r9, r7
  4015d6:	4422      	add	r2, r4
  4015d8:	2807      	cmp	r0, #7
  4015da:	920f      	str	r2, [sp, #60]	; 0x3c
  4015dc:	f8ca 9000 	str.w	r9, [sl]
  4015e0:	f8ca 4004 	str.w	r4, [sl, #4]
  4015e4:	900e      	str	r0, [sp, #56]	; 0x38
  4015e6:	f340 829b 	ble.w	401b20 <_vfiprintf_r+0x98c>
  4015ea:	2a00      	cmp	r2, #0
  4015ec:	f040 8425 	bne.w	401e3a <_vfiprintf_r+0xca6>
  4015f0:	9b02      	ldr	r3, [sp, #8]
  4015f2:	9a06      	ldr	r2, [sp, #24]
  4015f4:	42aa      	cmp	r2, r5
  4015f6:	bfac      	ite	ge
  4015f8:	189b      	addge	r3, r3, r2
  4015fa:	195b      	addlt	r3, r3, r5
  4015fc:	9302      	str	r3, [sp, #8]
  4015fe:	e299      	b.n	401b34 <_vfiprintf_r+0x9a0>
  401600:	f046 0680 	orr.w	r6, r6, #128	; 0x80
  401604:	f898 3000 	ldrb.w	r3, [r8]
  401608:	e62b      	b.n	401262 <_vfiprintf_r+0xce>
  40160a:	9406      	str	r4, [sp, #24]
  40160c:	2900      	cmp	r1, #0
  40160e:	f040 84af 	bne.w	401f70 <_vfiprintf_r+0xddc>
  401612:	f046 0610 	orr.w	r6, r6, #16
  401616:	06b3      	lsls	r3, r6, #26
  401618:	f140 8312 	bpl.w	401c40 <_vfiprintf_r+0xaac>
  40161c:	9904      	ldr	r1, [sp, #16]
  40161e:	3107      	adds	r1, #7
  401620:	f021 0107 	bic.w	r1, r1, #7
  401624:	e9d1 2300 	ldrd	r2, r3, [r1]
  401628:	3108      	adds	r1, #8
  40162a:	9104      	str	r1, [sp, #16]
  40162c:	4614      	mov	r4, r2
  40162e:	461d      	mov	r5, r3
  401630:	2a00      	cmp	r2, #0
  401632:	f173 0300 	sbcs.w	r3, r3, #0
  401636:	f2c0 8386 	blt.w	401d46 <_vfiprintf_r+0xbb2>
  40163a:	9b01      	ldr	r3, [sp, #4]
  40163c:	f89d 902f 	ldrb.w	r9, [sp, #47]	; 0x2f
  401640:	2b00      	cmp	r3, #0
  401642:	f2c0 831a 	blt.w	401c7a <_vfiprintf_r+0xae6>
  401646:	ea54 0305 	orrs.w	r3, r4, r5
  40164a:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  40164e:	f000 80ed 	beq.w	40182c <_vfiprintf_r+0x698>
  401652:	2d00      	cmp	r5, #0
  401654:	bf08      	it	eq
  401656:	2c0a      	cmpeq	r4, #10
  401658:	f0c0 80ed 	bcc.w	401836 <_vfiprintf_r+0x6a2>
  40165c:	465f      	mov	r7, fp
  40165e:	4620      	mov	r0, r4
  401660:	4629      	mov	r1, r5
  401662:	220a      	movs	r2, #10
  401664:	2300      	movs	r3, #0
  401666:	f003 fd4b 	bl	405100 <__aeabi_uldivmod>
  40166a:	3230      	adds	r2, #48	; 0x30
  40166c:	f807 2d01 	strb.w	r2, [r7, #-1]!
  401670:	4620      	mov	r0, r4
  401672:	4629      	mov	r1, r5
  401674:	2300      	movs	r3, #0
  401676:	220a      	movs	r2, #10
  401678:	f003 fd42 	bl	405100 <__aeabi_uldivmod>
  40167c:	4604      	mov	r4, r0
  40167e:	460d      	mov	r5, r1
  401680:	ea54 0305 	orrs.w	r3, r4, r5
  401684:	d1eb      	bne.n	40165e <_vfiprintf_r+0x4ca>
  401686:	ebc7 030b 	rsb	r3, r7, fp
  40168a:	9303      	str	r3, [sp, #12]
  40168c:	e6a2      	b.n	4013d4 <_vfiprintf_r+0x240>
  40168e:	bf00      	nop
  401690:	004056b8 	.word	0x004056b8
  401694:	004056d4 	.word	0x004056d4
  401698:	00405694 	.word	0x00405694
  40169c:	9406      	str	r4, [sp, #24]
  40169e:	2900      	cmp	r1, #0
  4016a0:	f040 8462 	bne.w	401f68 <_vfiprintf_r+0xdd4>
  4016a4:	f046 0610 	orr.w	r6, r6, #16
  4016a8:	f016 0320 	ands.w	r3, r6, #32
  4016ac:	f000 82ae 	beq.w	401c0c <_vfiprintf_r+0xa78>
  4016b0:	9b04      	ldr	r3, [sp, #16]
  4016b2:	3307      	adds	r3, #7
  4016b4:	f023 0307 	bic.w	r3, r3, #7
  4016b8:	f04f 0200 	mov.w	r2, #0
  4016bc:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
  4016c0:	e9d3 4500 	ldrd	r4, r5, [r3]
  4016c4:	f103 0208 	add.w	r2, r3, #8
  4016c8:	9b01      	ldr	r3, [sp, #4]
  4016ca:	9204      	str	r2, [sp, #16]
  4016cc:	2b00      	cmp	r3, #0
  4016ce:	f2c0 8174 	blt.w	4019ba <_vfiprintf_r+0x826>
  4016d2:	ea54 0305 	orrs.w	r3, r4, r5
  4016d6:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  4016da:	f040 816e 	bne.w	4019ba <_vfiprintf_r+0x826>
  4016de:	9b01      	ldr	r3, [sp, #4]
  4016e0:	2b00      	cmp	r3, #0
  4016e2:	f000 8430 	beq.w	401f46 <_vfiprintf_r+0xdb2>
  4016e6:	f04f 0900 	mov.w	r9, #0
  4016ea:	2400      	movs	r4, #0
  4016ec:	2500      	movs	r5, #0
  4016ee:	465f      	mov	r7, fp
  4016f0:	08e2      	lsrs	r2, r4, #3
  4016f2:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  4016f6:	08e9      	lsrs	r1, r5, #3
  4016f8:	f004 0307 	and.w	r3, r4, #7
  4016fc:	460d      	mov	r5, r1
  4016fe:	4614      	mov	r4, r2
  401700:	3330      	adds	r3, #48	; 0x30
  401702:	ea54 0205 	orrs.w	r2, r4, r5
  401706:	f807 3d01 	strb.w	r3, [r7, #-1]!
  40170a:	d1f1      	bne.n	4016f0 <_vfiprintf_r+0x55c>
  40170c:	07f4      	lsls	r4, r6, #31
  40170e:	d5ba      	bpl.n	401686 <_vfiprintf_r+0x4f2>
  401710:	2b30      	cmp	r3, #48	; 0x30
  401712:	d0b8      	beq.n	401686 <_vfiprintf_r+0x4f2>
  401714:	2230      	movs	r2, #48	; 0x30
  401716:	1e7b      	subs	r3, r7, #1
  401718:	f807 2c01 	strb.w	r2, [r7, #-1]
  40171c:	ebc3 020b 	rsb	r2, r3, fp
  401720:	9203      	str	r2, [sp, #12]
  401722:	461f      	mov	r7, r3
  401724:	e656      	b.n	4013d4 <_vfiprintf_r+0x240>
  401726:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  40172a:	2400      	movs	r4, #0
  40172c:	f818 3b01 	ldrb.w	r3, [r8], #1
  401730:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401734:	eb02 0444 	add.w	r4, r2, r4, lsl #1
  401738:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  40173c:	2a09      	cmp	r2, #9
  40173e:	d9f5      	bls.n	40172c <_vfiprintf_r+0x598>
  401740:	e591      	b.n	401266 <_vfiprintf_r+0xd2>
  401742:	f898 3000 	ldrb.w	r3, [r8]
  401746:	2101      	movs	r1, #1
  401748:	202b      	movs	r0, #43	; 0x2b
  40174a:	e58a      	b.n	401262 <_vfiprintf_r+0xce>
  40174c:	f898 3000 	ldrb.w	r3, [r8]
  401750:	2b2a      	cmp	r3, #42	; 0x2a
  401752:	f108 0501 	add.w	r5, r8, #1
  401756:	f000 83dd 	beq.w	401f14 <_vfiprintf_r+0xd80>
  40175a:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  40175e:	2a09      	cmp	r2, #9
  401760:	46a8      	mov	r8, r5
  401762:	bf98      	it	ls
  401764:	2500      	movls	r5, #0
  401766:	f200 83ce 	bhi.w	401f06 <_vfiprintf_r+0xd72>
  40176a:	f818 3b01 	ldrb.w	r3, [r8], #1
  40176e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  401772:	eb02 0545 	add.w	r5, r2, r5, lsl #1
  401776:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  40177a:	2a09      	cmp	r2, #9
  40177c:	d9f5      	bls.n	40176a <_vfiprintf_r+0x5d6>
  40177e:	ea45 72e5 	orr.w	r2, r5, r5, asr #31
  401782:	9201      	str	r2, [sp, #4]
  401784:	e56f      	b.n	401266 <_vfiprintf_r+0xd2>
  401786:	9a04      	ldr	r2, [sp, #16]
  401788:	6814      	ldr	r4, [r2, #0]
  40178a:	4613      	mov	r3, r2
  40178c:	2c00      	cmp	r4, #0
  40178e:	f103 0304 	add.w	r3, r3, #4
  401792:	f6ff aded 	blt.w	401370 <_vfiprintf_r+0x1dc>
  401796:	9304      	str	r3, [sp, #16]
  401798:	f898 3000 	ldrb.w	r3, [r8]
  40179c:	e561      	b.n	401262 <_vfiprintf_r+0xce>
  40179e:	9406      	str	r4, [sp, #24]
  4017a0:	2900      	cmp	r1, #0
  4017a2:	d081      	beq.n	4016a8 <_vfiprintf_r+0x514>
  4017a4:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  4017a8:	e77e      	b.n	4016a8 <_vfiprintf_r+0x514>
  4017aa:	9a04      	ldr	r2, [sp, #16]
  4017ac:	9406      	str	r4, [sp, #24]
  4017ae:	6817      	ldr	r7, [r2, #0]
  4017b0:	f04f 0300 	mov.w	r3, #0
  4017b4:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  4017b8:	1d14      	adds	r4, r2, #4
  4017ba:	9b01      	ldr	r3, [sp, #4]
  4017bc:	2f00      	cmp	r7, #0
  4017be:	f000 8386 	beq.w	401ece <_vfiprintf_r+0xd3a>
  4017c2:	2b00      	cmp	r3, #0
  4017c4:	f2c0 835f 	blt.w	401e86 <_vfiprintf_r+0xcf2>
  4017c8:	461a      	mov	r2, r3
  4017ca:	2100      	movs	r1, #0
  4017cc:	4638      	mov	r0, r7
  4017ce:	f002 faff 	bl	403dd0 <memchr>
  4017d2:	2800      	cmp	r0, #0
  4017d4:	f000 838f 	beq.w	401ef6 <_vfiprintf_r+0xd62>
  4017d8:	1bc3      	subs	r3, r0, r7
  4017da:	9303      	str	r3, [sp, #12]
  4017dc:	2300      	movs	r3, #0
  4017de:	9404      	str	r4, [sp, #16]
  4017e0:	f89d 902f 	ldrb.w	r9, [sp, #47]	; 0x2f
  4017e4:	9301      	str	r3, [sp, #4]
  4017e6:	e5f5      	b.n	4013d4 <_vfiprintf_r+0x240>
  4017e8:	9406      	str	r4, [sp, #24]
  4017ea:	2900      	cmp	r1, #0
  4017ec:	f040 83b9 	bne.w	401f62 <_vfiprintf_r+0xdce>
  4017f0:	f016 0920 	ands.w	r9, r6, #32
  4017f4:	d135      	bne.n	401862 <_vfiprintf_r+0x6ce>
  4017f6:	f016 0310 	ands.w	r3, r6, #16
  4017fa:	d103      	bne.n	401804 <_vfiprintf_r+0x670>
  4017fc:	f016 0940 	ands.w	r9, r6, #64	; 0x40
  401800:	f040 832a 	bne.w	401e58 <_vfiprintf_r+0xcc4>
  401804:	9a04      	ldr	r2, [sp, #16]
  401806:	4613      	mov	r3, r2
  401808:	6814      	ldr	r4, [r2, #0]
  40180a:	9a01      	ldr	r2, [sp, #4]
  40180c:	f88d 902f 	strb.w	r9, [sp, #47]	; 0x2f
  401810:	2a00      	cmp	r2, #0
  401812:	f103 0304 	add.w	r3, r3, #4
  401816:	f04f 0500 	mov.w	r5, #0
  40181a:	f2c0 8332 	blt.w	401e82 <_vfiprintf_r+0xcee>
  40181e:	ea54 0205 	orrs.w	r2, r4, r5
  401822:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  401826:	9304      	str	r3, [sp, #16]
  401828:	f47f af13 	bne.w	401652 <_vfiprintf_r+0x4be>
  40182c:	9b01      	ldr	r3, [sp, #4]
  40182e:	2b00      	cmp	r3, #0
  401830:	f43f adcc 	beq.w	4013cc <_vfiprintf_r+0x238>
  401834:	2400      	movs	r4, #0
  401836:	af2a      	add	r7, sp, #168	; 0xa8
  401838:	3430      	adds	r4, #48	; 0x30
  40183a:	f807 4d41 	strb.w	r4, [r7, #-65]!
  40183e:	ebc7 030b 	rsb	r3, r7, fp
  401842:	9303      	str	r3, [sp, #12]
  401844:	e5c6      	b.n	4013d4 <_vfiprintf_r+0x240>
  401846:	f046 0620 	orr.w	r6, r6, #32
  40184a:	f898 3000 	ldrb.w	r3, [r8]
  40184e:	e508      	b.n	401262 <_vfiprintf_r+0xce>
  401850:	9406      	str	r4, [sp, #24]
  401852:	2900      	cmp	r1, #0
  401854:	f040 836e 	bne.w	401f34 <_vfiprintf_r+0xda0>
  401858:	f046 0610 	orr.w	r6, r6, #16
  40185c:	f016 0920 	ands.w	r9, r6, #32
  401860:	d0c9      	beq.n	4017f6 <_vfiprintf_r+0x662>
  401862:	9b04      	ldr	r3, [sp, #16]
  401864:	3307      	adds	r3, #7
  401866:	f023 0307 	bic.w	r3, r3, #7
  40186a:	f04f 0200 	mov.w	r2, #0
  40186e:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
  401872:	e9d3 4500 	ldrd	r4, r5, [r3]
  401876:	f103 0208 	add.w	r2, r3, #8
  40187a:	9b01      	ldr	r3, [sp, #4]
  40187c:	9204      	str	r2, [sp, #16]
  40187e:	2b00      	cmp	r3, #0
  401880:	f2c0 81f9 	blt.w	401c76 <_vfiprintf_r+0xae2>
  401884:	ea54 0305 	orrs.w	r3, r4, r5
  401888:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  40188c:	f04f 0900 	mov.w	r9, #0
  401890:	f47f aedf 	bne.w	401652 <_vfiprintf_r+0x4be>
  401894:	e7ca      	b.n	40182c <_vfiprintf_r+0x698>
  401896:	9406      	str	r4, [sp, #24]
  401898:	2900      	cmp	r1, #0
  40189a:	f040 8351 	bne.w	401f40 <_vfiprintf_r+0xdac>
  40189e:	06b2      	lsls	r2, r6, #26
  4018a0:	48ae      	ldr	r0, [pc, #696]	; (401b5c <_vfiprintf_r+0x9c8>)
  4018a2:	d541      	bpl.n	401928 <_vfiprintf_r+0x794>
  4018a4:	9a04      	ldr	r2, [sp, #16]
  4018a6:	3207      	adds	r2, #7
  4018a8:	f022 0207 	bic.w	r2, r2, #7
  4018ac:	e9d2 4500 	ldrd	r4, r5, [r2]
  4018b0:	f102 0108 	add.w	r1, r2, #8
  4018b4:	9104      	str	r1, [sp, #16]
  4018b6:	f016 0901 	ands.w	r9, r6, #1
  4018ba:	f000 8177 	beq.w	401bac <_vfiprintf_r+0xa18>
  4018be:	ea54 0205 	orrs.w	r2, r4, r5
  4018c2:	f040 8226 	bne.w	401d12 <_vfiprintf_r+0xb7e>
  4018c6:	f04f 0300 	mov.w	r3, #0
  4018ca:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  4018ce:	9b01      	ldr	r3, [sp, #4]
  4018d0:	2b00      	cmp	r3, #0
  4018d2:	f2c0 8196 	blt.w	401c02 <_vfiprintf_r+0xa6e>
  4018d6:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  4018da:	e572      	b.n	4013c2 <_vfiprintf_r+0x22e>
  4018dc:	9a04      	ldr	r2, [sp, #16]
  4018de:	9406      	str	r4, [sp, #24]
  4018e0:	6813      	ldr	r3, [r2, #0]
  4018e2:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
  4018e6:	4613      	mov	r3, r2
  4018e8:	f04f 0100 	mov.w	r1, #0
  4018ec:	2501      	movs	r5, #1
  4018ee:	3304      	adds	r3, #4
  4018f0:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  4018f4:	9304      	str	r3, [sp, #16]
  4018f6:	9503      	str	r5, [sp, #12]
  4018f8:	af10      	add	r7, sp, #64	; 0x40
  4018fa:	2300      	movs	r3, #0
  4018fc:	9301      	str	r3, [sp, #4]
  4018fe:	e573      	b.n	4013e8 <_vfiprintf_r+0x254>
  401900:	f898 3000 	ldrb.w	r3, [r8]
  401904:	2800      	cmp	r0, #0
  401906:	f47f acac 	bne.w	401262 <_vfiprintf_r+0xce>
  40190a:	2101      	movs	r1, #1
  40190c:	2020      	movs	r0, #32
  40190e:	e4a8      	b.n	401262 <_vfiprintf_r+0xce>
  401910:	f046 0601 	orr.w	r6, r6, #1
  401914:	f898 3000 	ldrb.w	r3, [r8]
  401918:	e4a3      	b.n	401262 <_vfiprintf_r+0xce>
  40191a:	9406      	str	r4, [sp, #24]
  40191c:	2900      	cmp	r1, #0
  40191e:	f040 830c 	bne.w	401f3a <_vfiprintf_r+0xda6>
  401922:	06b2      	lsls	r2, r6, #26
  401924:	488e      	ldr	r0, [pc, #568]	; (401b60 <_vfiprintf_r+0x9cc>)
  401926:	d4bd      	bmi.n	4018a4 <_vfiprintf_r+0x710>
  401928:	9904      	ldr	r1, [sp, #16]
  40192a:	06f7      	lsls	r7, r6, #27
  40192c:	460a      	mov	r2, r1
  40192e:	f100 819d 	bmi.w	401c6c <_vfiprintf_r+0xad8>
  401932:	0675      	lsls	r5, r6, #25
  401934:	f140 819a 	bpl.w	401c6c <_vfiprintf_r+0xad8>
  401938:	3204      	adds	r2, #4
  40193a:	880c      	ldrh	r4, [r1, #0]
  40193c:	9204      	str	r2, [sp, #16]
  40193e:	2500      	movs	r5, #0
  401940:	e7b9      	b.n	4018b6 <_vfiprintf_r+0x722>
  401942:	f046 0640 	orr.w	r6, r6, #64	; 0x40
  401946:	f898 3000 	ldrb.w	r3, [r8]
  40194a:	e48a      	b.n	401262 <_vfiprintf_r+0xce>
  40194c:	f898 3000 	ldrb.w	r3, [r8]
  401950:	2b6c      	cmp	r3, #108	; 0x6c
  401952:	bf03      	ittte	eq
  401954:	f898 3001 	ldrbeq.w	r3, [r8, #1]
  401958:	f046 0620 	orreq.w	r6, r6, #32
  40195c:	f108 0801 	addeq.w	r8, r8, #1
  401960:	f046 0610 	orrne.w	r6, r6, #16
  401964:	e47d      	b.n	401262 <_vfiprintf_r+0xce>
  401966:	2900      	cmp	r1, #0
  401968:	f040 8309 	bne.w	401f7e <_vfiprintf_r+0xdea>
  40196c:	06b4      	lsls	r4, r6, #26
  40196e:	f140 821c 	bpl.w	401daa <_vfiprintf_r+0xc16>
  401972:	9a04      	ldr	r2, [sp, #16]
  401974:	9902      	ldr	r1, [sp, #8]
  401976:	6813      	ldr	r3, [r2, #0]
  401978:	17cd      	asrs	r5, r1, #31
  40197a:	4608      	mov	r0, r1
  40197c:	3204      	adds	r2, #4
  40197e:	4629      	mov	r1, r5
  401980:	9204      	str	r2, [sp, #16]
  401982:	e9c3 0100 	strd	r0, r1, [r3]
  401986:	e436      	b.n	4011f6 <_vfiprintf_r+0x62>
  401988:	9406      	str	r4, [sp, #24]
  40198a:	2900      	cmp	r1, #0
  40198c:	f43f ae43 	beq.w	401616 <_vfiprintf_r+0x482>
  401990:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  401994:	e63f      	b.n	401616 <_vfiprintf_r+0x482>
  401996:	9406      	str	r4, [sp, #24]
  401998:	2900      	cmp	r1, #0
  40199a:	f040 82ed 	bne.w	401f78 <_vfiprintf_r+0xde4>
  40199e:	2b00      	cmp	r3, #0
  4019a0:	f000 808f 	beq.w	401ac2 <_vfiprintf_r+0x92e>
  4019a4:	2501      	movs	r5, #1
  4019a6:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
  4019aa:	f04f 0300 	mov.w	r3, #0
  4019ae:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  4019b2:	9503      	str	r5, [sp, #12]
  4019b4:	af10      	add	r7, sp, #64	; 0x40
  4019b6:	e7a0      	b.n	4018fa <_vfiprintf_r+0x766>
  4019b8:	9304      	str	r3, [sp, #16]
  4019ba:	f04f 0900 	mov.w	r9, #0
  4019be:	e696      	b.n	4016ee <_vfiprintf_r+0x55a>
  4019c0:	aa0d      	add	r2, sp, #52	; 0x34
  4019c2:	9900      	ldr	r1, [sp, #0]
  4019c4:	9309      	str	r3, [sp, #36]	; 0x24
  4019c6:	4648      	mov	r0, r9
  4019c8:	f7ff fba8 	bl	40111c <__sprint_r.part.0>
  4019cc:	2800      	cmp	r0, #0
  4019ce:	d17f      	bne.n	401ad0 <_vfiprintf_r+0x93c>
  4019d0:	980e      	ldr	r0, [sp, #56]	; 0x38
  4019d2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4019d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4019d6:	f100 0e01 	add.w	lr, r0, #1
  4019da:	46dc      	mov	ip, fp
  4019dc:	e529      	b.n	401432 <_vfiprintf_r+0x29e>
  4019de:	980e      	ldr	r0, [sp, #56]	; 0x38
  4019e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4019e2:	f100 0e01 	add.w	lr, r0, #1
  4019e6:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  4019ea:	2b00      	cmp	r3, #0
  4019ec:	f43f ad50 	beq.w	401490 <_vfiprintf_r+0x2fc>
  4019f0:	3201      	adds	r2, #1
  4019f2:	f10d 012f 	add.w	r1, sp, #47	; 0x2f
  4019f6:	2301      	movs	r3, #1
  4019f8:	f1be 0f07 	cmp.w	lr, #7
  4019fc:	920f      	str	r2, [sp, #60]	; 0x3c
  4019fe:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  401a02:	e88a 000a 	stmia.w	sl, {r1, r3}
  401a06:	f340 80bf 	ble.w	401b88 <_vfiprintf_r+0x9f4>
  401a0a:	2a00      	cmp	r2, #0
  401a0c:	f040 814e 	bne.w	401cac <_vfiprintf_r+0xb18>
  401a10:	9907      	ldr	r1, [sp, #28]
  401a12:	2900      	cmp	r1, #0
  401a14:	f040 80be 	bne.w	401b94 <_vfiprintf_r+0xa00>
  401a18:	469e      	mov	lr, r3
  401a1a:	4610      	mov	r0, r2
  401a1c:	46da      	mov	sl, fp
  401a1e:	9b08      	ldr	r3, [sp, #32]
  401a20:	2b80      	cmp	r3, #128	; 0x80
  401a22:	f43f ad50 	beq.w	4014c6 <_vfiprintf_r+0x332>
  401a26:	9b01      	ldr	r3, [sp, #4]
  401a28:	9903      	ldr	r1, [sp, #12]
  401a2a:	1a5c      	subs	r4, r3, r1
  401a2c:	2c00      	cmp	r4, #0
  401a2e:	f77f ad93 	ble.w	401558 <_vfiprintf_r+0x3c4>
  401a32:	2c10      	cmp	r4, #16
  401a34:	f8df 912c 	ldr.w	r9, [pc, #300]	; 401b64 <_vfiprintf_r+0x9d0>
  401a38:	dd25      	ble.n	401a86 <_vfiprintf_r+0x8f2>
  401a3a:	46d4      	mov	ip, sl
  401a3c:	2310      	movs	r3, #16
  401a3e:	46c2      	mov	sl, r8
  401a40:	46a8      	mov	r8, r5
  401a42:	464d      	mov	r5, r9
  401a44:	f8dd 9014 	ldr.w	r9, [sp, #20]
  401a48:	e007      	b.n	401a5a <_vfiprintf_r+0x8c6>
  401a4a:	f100 0e02 	add.w	lr, r0, #2
  401a4e:	f10c 0c08 	add.w	ip, ip, #8
  401a52:	4608      	mov	r0, r1
  401a54:	3c10      	subs	r4, #16
  401a56:	2c10      	cmp	r4, #16
  401a58:	dd11      	ble.n	401a7e <_vfiprintf_r+0x8ea>
  401a5a:	1c41      	adds	r1, r0, #1
  401a5c:	3210      	adds	r2, #16
  401a5e:	2907      	cmp	r1, #7
  401a60:	920f      	str	r2, [sp, #60]	; 0x3c
  401a62:	f8cc 5000 	str.w	r5, [ip]
  401a66:	f8cc 3004 	str.w	r3, [ip, #4]
  401a6a:	910e      	str	r1, [sp, #56]	; 0x38
  401a6c:	dded      	ble.n	401a4a <_vfiprintf_r+0x8b6>
  401a6e:	b9d2      	cbnz	r2, 401aa6 <_vfiprintf_r+0x912>
  401a70:	3c10      	subs	r4, #16
  401a72:	2c10      	cmp	r4, #16
  401a74:	f04f 0e01 	mov.w	lr, #1
  401a78:	4610      	mov	r0, r2
  401a7a:	46dc      	mov	ip, fp
  401a7c:	dced      	bgt.n	401a5a <_vfiprintf_r+0x8c6>
  401a7e:	46a9      	mov	r9, r5
  401a80:	4645      	mov	r5, r8
  401a82:	46d0      	mov	r8, sl
  401a84:	46e2      	mov	sl, ip
  401a86:	4422      	add	r2, r4
  401a88:	f1be 0f07 	cmp.w	lr, #7
  401a8c:	920f      	str	r2, [sp, #60]	; 0x3c
  401a8e:	f8ca 9000 	str.w	r9, [sl]
  401a92:	f8ca 4004 	str.w	r4, [sl, #4]
  401a96:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
  401a9a:	dc2e      	bgt.n	401afa <_vfiprintf_r+0x966>
  401a9c:	f10a 0a08 	add.w	sl, sl, #8
  401aa0:	f10e 0e01 	add.w	lr, lr, #1
  401aa4:	e558      	b.n	401558 <_vfiprintf_r+0x3c4>
  401aa6:	aa0d      	add	r2, sp, #52	; 0x34
  401aa8:	9900      	ldr	r1, [sp, #0]
  401aaa:	9301      	str	r3, [sp, #4]
  401aac:	4648      	mov	r0, r9
  401aae:	f7ff fb35 	bl	40111c <__sprint_r.part.0>
  401ab2:	b968      	cbnz	r0, 401ad0 <_vfiprintf_r+0x93c>
  401ab4:	980e      	ldr	r0, [sp, #56]	; 0x38
  401ab6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401ab8:	9b01      	ldr	r3, [sp, #4]
  401aba:	f100 0e01 	add.w	lr, r0, #1
  401abe:	46dc      	mov	ip, fp
  401ac0:	e7c8      	b.n	401a54 <_vfiprintf_r+0x8c0>
  401ac2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401ac4:	b123      	cbz	r3, 401ad0 <_vfiprintf_r+0x93c>
  401ac6:	9805      	ldr	r0, [sp, #20]
  401ac8:	9900      	ldr	r1, [sp, #0]
  401aca:	aa0d      	add	r2, sp, #52	; 0x34
  401acc:	f7ff fb26 	bl	40111c <__sprint_r.part.0>
  401ad0:	9b00      	ldr	r3, [sp, #0]
  401ad2:	899b      	ldrh	r3, [r3, #12]
  401ad4:	065a      	lsls	r2, r3, #25
  401ad6:	f100 818b 	bmi.w	401df0 <_vfiprintf_r+0xc5c>
  401ada:	9802      	ldr	r0, [sp, #8]
  401adc:	b02b      	add	sp, #172	; 0xac
  401ade:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401ae2:	aa0d      	add	r2, sp, #52	; 0x34
  401ae4:	9900      	ldr	r1, [sp, #0]
  401ae6:	4648      	mov	r0, r9
  401ae8:	f7ff fb18 	bl	40111c <__sprint_r.part.0>
  401aec:	2800      	cmp	r0, #0
  401aee:	d1ef      	bne.n	401ad0 <_vfiprintf_r+0x93c>
  401af0:	990e      	ldr	r1, [sp, #56]	; 0x38
  401af2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401af4:	1c48      	adds	r0, r1, #1
  401af6:	46da      	mov	sl, fp
  401af8:	e555      	b.n	4015a6 <_vfiprintf_r+0x412>
  401afa:	2a00      	cmp	r2, #0
  401afc:	f040 80fb 	bne.w	401cf6 <_vfiprintf_r+0xb62>
  401b00:	9a03      	ldr	r2, [sp, #12]
  401b02:	921b      	str	r2, [sp, #108]	; 0x6c
  401b04:	2301      	movs	r3, #1
  401b06:	920f      	str	r2, [sp, #60]	; 0x3c
  401b08:	971a      	str	r7, [sp, #104]	; 0x68
  401b0a:	930e      	str	r3, [sp, #56]	; 0x38
  401b0c:	46da      	mov	sl, fp
  401b0e:	f10a 0a08 	add.w	sl, sl, #8
  401b12:	0771      	lsls	r1, r6, #29
  401b14:	d504      	bpl.n	401b20 <_vfiprintf_r+0x98c>
  401b16:	9b06      	ldr	r3, [sp, #24]
  401b18:	1b5c      	subs	r4, r3, r5
  401b1a:	2c00      	cmp	r4, #0
  401b1c:	f73f ad34 	bgt.w	401588 <_vfiprintf_r+0x3f4>
  401b20:	9b02      	ldr	r3, [sp, #8]
  401b22:	9906      	ldr	r1, [sp, #24]
  401b24:	42a9      	cmp	r1, r5
  401b26:	bfac      	ite	ge
  401b28:	185b      	addge	r3, r3, r1
  401b2a:	195b      	addlt	r3, r3, r5
  401b2c:	9302      	str	r3, [sp, #8]
  401b2e:	2a00      	cmp	r2, #0
  401b30:	f040 80b3 	bne.w	401c9a <_vfiprintf_r+0xb06>
  401b34:	2300      	movs	r3, #0
  401b36:	930e      	str	r3, [sp, #56]	; 0x38
  401b38:	46da      	mov	sl, fp
  401b3a:	f7ff bb5c 	b.w	4011f6 <_vfiprintf_r+0x62>
  401b3e:	aa0d      	add	r2, sp, #52	; 0x34
  401b40:	9900      	ldr	r1, [sp, #0]
  401b42:	9307      	str	r3, [sp, #28]
  401b44:	4648      	mov	r0, r9
  401b46:	f7ff fae9 	bl	40111c <__sprint_r.part.0>
  401b4a:	2800      	cmp	r0, #0
  401b4c:	d1c0      	bne.n	401ad0 <_vfiprintf_r+0x93c>
  401b4e:	980e      	ldr	r0, [sp, #56]	; 0x38
  401b50:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401b52:	9b07      	ldr	r3, [sp, #28]
  401b54:	f100 0c01 	add.w	ip, r0, #1
  401b58:	46de      	mov	lr, fp
  401b5a:	e4cb      	b.n	4014f4 <_vfiprintf_r+0x360>
  401b5c:	004056a4 	.word	0x004056a4
  401b60:	004056b8 	.word	0x004056b8
  401b64:	00405694 	.word	0x00405694
  401b68:	2a00      	cmp	r2, #0
  401b6a:	f040 8133 	bne.w	401dd4 <_vfiprintf_r+0xc40>
  401b6e:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
  401b72:	2b00      	cmp	r3, #0
  401b74:	f000 80f5 	beq.w	401d62 <_vfiprintf_r+0xbce>
  401b78:	2301      	movs	r3, #1
  401b7a:	f10d 012f 	add.w	r1, sp, #47	; 0x2f
  401b7e:	461a      	mov	r2, r3
  401b80:	931b      	str	r3, [sp, #108]	; 0x6c
  401b82:	469e      	mov	lr, r3
  401b84:	911a      	str	r1, [sp, #104]	; 0x68
  401b86:	46da      	mov	sl, fp
  401b88:	4670      	mov	r0, lr
  401b8a:	f10a 0a08 	add.w	sl, sl, #8
  401b8e:	f10e 0e01 	add.w	lr, lr, #1
  401b92:	e47d      	b.n	401490 <_vfiprintf_r+0x2fc>
  401b94:	a90c      	add	r1, sp, #48	; 0x30
  401b96:	2202      	movs	r2, #2
  401b98:	469e      	mov	lr, r3
  401b9a:	911a      	str	r1, [sp, #104]	; 0x68
  401b9c:	921b      	str	r2, [sp, #108]	; 0x6c
  401b9e:	46da      	mov	sl, fp
  401ba0:	4670      	mov	r0, lr
  401ba2:	f10a 0a08 	add.w	sl, sl, #8
  401ba6:	f10e 0e01 	add.w	lr, lr, #1
  401baa:	e738      	b.n	401a1e <_vfiprintf_r+0x88a>
  401bac:	9b01      	ldr	r3, [sp, #4]
  401bae:	f88d 902f 	strb.w	r9, [sp, #47]	; 0x2f
  401bb2:	2b00      	cmp	r3, #0
  401bb4:	f2c0 812a 	blt.w	401e0c <_vfiprintf_r+0xc78>
  401bb8:	ea54 0305 	orrs.w	r3, r4, r5
  401bbc:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  401bc0:	f43f abff 	beq.w	4013c2 <_vfiprintf_r+0x22e>
  401bc4:	465f      	mov	r7, fp
  401bc6:	0923      	lsrs	r3, r4, #4
  401bc8:	f004 010f 	and.w	r1, r4, #15
  401bcc:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  401bd0:	092a      	lsrs	r2, r5, #4
  401bd2:	461c      	mov	r4, r3
  401bd4:	4615      	mov	r5, r2
  401bd6:	5c43      	ldrb	r3, [r0, r1]
  401bd8:	f807 3d01 	strb.w	r3, [r7, #-1]!
  401bdc:	ea54 0305 	orrs.w	r3, r4, r5
  401be0:	d1f1      	bne.n	401bc6 <_vfiprintf_r+0xa32>
  401be2:	ebc7 030b 	rsb	r3, r7, fp
  401be6:	9303      	str	r3, [sp, #12]
  401be8:	f7ff bbf4 	b.w	4013d4 <_vfiprintf_r+0x240>
  401bec:	aa0d      	add	r2, sp, #52	; 0x34
  401bee:	9900      	ldr	r1, [sp, #0]
  401bf0:	9805      	ldr	r0, [sp, #20]
  401bf2:	f7ff fa93 	bl	40111c <__sprint_r.part.0>
  401bf6:	2800      	cmp	r0, #0
  401bf8:	f47f af6a 	bne.w	401ad0 <_vfiprintf_r+0x93c>
  401bfc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401bfe:	46da      	mov	sl, fp
  401c00:	e787      	b.n	401b12 <_vfiprintf_r+0x97e>
  401c02:	f04f 0900 	mov.w	r9, #0
  401c06:	2400      	movs	r4, #0
  401c08:	2500      	movs	r5, #0
  401c0a:	e7db      	b.n	401bc4 <_vfiprintf_r+0xa30>
  401c0c:	f016 0210 	ands.w	r2, r6, #16
  401c10:	f000 80b2 	beq.w	401d78 <_vfiprintf_r+0xbe4>
  401c14:	9904      	ldr	r1, [sp, #16]
  401c16:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  401c1a:	460a      	mov	r2, r1
  401c1c:	680c      	ldr	r4, [r1, #0]
  401c1e:	9901      	ldr	r1, [sp, #4]
  401c20:	2900      	cmp	r1, #0
  401c22:	f102 0204 	add.w	r2, r2, #4
  401c26:	f04f 0500 	mov.w	r5, #0
  401c2a:	f2c0 8159 	blt.w	401ee0 <_vfiprintf_r+0xd4c>
  401c2e:	ea54 0105 	orrs.w	r1, r4, r5
  401c32:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  401c36:	9204      	str	r2, [sp, #16]
  401c38:	f43f ad51 	beq.w	4016de <_vfiprintf_r+0x54a>
  401c3c:	4699      	mov	r9, r3
  401c3e:	e556      	b.n	4016ee <_vfiprintf_r+0x55a>
  401c40:	06f7      	lsls	r7, r6, #27
  401c42:	d40a      	bmi.n	401c5a <_vfiprintf_r+0xac6>
  401c44:	0675      	lsls	r5, r6, #25
  401c46:	d508      	bpl.n	401c5a <_vfiprintf_r+0xac6>
  401c48:	9904      	ldr	r1, [sp, #16]
  401c4a:	f9b1 4000 	ldrsh.w	r4, [r1]
  401c4e:	3104      	adds	r1, #4
  401c50:	17e5      	asrs	r5, r4, #31
  401c52:	4622      	mov	r2, r4
  401c54:	462b      	mov	r3, r5
  401c56:	9104      	str	r1, [sp, #16]
  401c58:	e4ea      	b.n	401630 <_vfiprintf_r+0x49c>
  401c5a:	9a04      	ldr	r2, [sp, #16]
  401c5c:	6814      	ldr	r4, [r2, #0]
  401c5e:	4613      	mov	r3, r2
  401c60:	3304      	adds	r3, #4
  401c62:	17e5      	asrs	r5, r4, #31
  401c64:	9304      	str	r3, [sp, #16]
  401c66:	4622      	mov	r2, r4
  401c68:	462b      	mov	r3, r5
  401c6a:	e4e1      	b.n	401630 <_vfiprintf_r+0x49c>
  401c6c:	6814      	ldr	r4, [r2, #0]
  401c6e:	3204      	adds	r2, #4
  401c70:	9204      	str	r2, [sp, #16]
  401c72:	2500      	movs	r5, #0
  401c74:	e61f      	b.n	4018b6 <_vfiprintf_r+0x722>
  401c76:	f04f 0900 	mov.w	r9, #0
  401c7a:	ea54 0305 	orrs.w	r3, r4, r5
  401c7e:	f47f ace8 	bne.w	401652 <_vfiprintf_r+0x4be>
  401c82:	e5d8      	b.n	401836 <_vfiprintf_r+0x6a2>
  401c84:	aa0d      	add	r2, sp, #52	; 0x34
  401c86:	9900      	ldr	r1, [sp, #0]
  401c88:	9805      	ldr	r0, [sp, #20]
  401c8a:	f7ff fa47 	bl	40111c <__sprint_r.part.0>
  401c8e:	2800      	cmp	r0, #0
  401c90:	f47f af1e 	bne.w	401ad0 <_vfiprintf_r+0x93c>
  401c94:	46da      	mov	sl, fp
  401c96:	f7ff bb48 	b.w	40132a <_vfiprintf_r+0x196>
  401c9a:	aa0d      	add	r2, sp, #52	; 0x34
  401c9c:	9900      	ldr	r1, [sp, #0]
  401c9e:	9805      	ldr	r0, [sp, #20]
  401ca0:	f7ff fa3c 	bl	40111c <__sprint_r.part.0>
  401ca4:	2800      	cmp	r0, #0
  401ca6:	f43f af45 	beq.w	401b34 <_vfiprintf_r+0x9a0>
  401caa:	e711      	b.n	401ad0 <_vfiprintf_r+0x93c>
  401cac:	aa0d      	add	r2, sp, #52	; 0x34
  401cae:	9900      	ldr	r1, [sp, #0]
  401cb0:	9805      	ldr	r0, [sp, #20]
  401cb2:	f7ff fa33 	bl	40111c <__sprint_r.part.0>
  401cb6:	2800      	cmp	r0, #0
  401cb8:	f47f af0a 	bne.w	401ad0 <_vfiprintf_r+0x93c>
  401cbc:	980e      	ldr	r0, [sp, #56]	; 0x38
  401cbe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401cc0:	f100 0e01 	add.w	lr, r0, #1
  401cc4:	46da      	mov	sl, fp
  401cc6:	f7ff bbe3 	b.w	401490 <_vfiprintf_r+0x2fc>
  401cca:	aa0d      	add	r2, sp, #52	; 0x34
  401ccc:	9900      	ldr	r1, [sp, #0]
  401cce:	9805      	ldr	r0, [sp, #20]
  401cd0:	f7ff fa24 	bl	40111c <__sprint_r.part.0>
  401cd4:	2800      	cmp	r0, #0
  401cd6:	f47f aefb 	bne.w	401ad0 <_vfiprintf_r+0x93c>
  401cda:	980e      	ldr	r0, [sp, #56]	; 0x38
  401cdc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401cde:	f100 0e01 	add.w	lr, r0, #1
  401ce2:	46da      	mov	sl, fp
  401ce4:	e69b      	b.n	401a1e <_vfiprintf_r+0x88a>
  401ce6:	2a00      	cmp	r2, #0
  401ce8:	f040 80d8 	bne.w	401e9c <_vfiprintf_r+0xd08>
  401cec:	f04f 0e01 	mov.w	lr, #1
  401cf0:	4610      	mov	r0, r2
  401cf2:	46da      	mov	sl, fp
  401cf4:	e697      	b.n	401a26 <_vfiprintf_r+0x892>
  401cf6:	aa0d      	add	r2, sp, #52	; 0x34
  401cf8:	9900      	ldr	r1, [sp, #0]
  401cfa:	9805      	ldr	r0, [sp, #20]
  401cfc:	f7ff fa0e 	bl	40111c <__sprint_r.part.0>
  401d00:	2800      	cmp	r0, #0
  401d02:	f47f aee5 	bne.w	401ad0 <_vfiprintf_r+0x93c>
  401d06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  401d08:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401d0a:	f103 0e01 	add.w	lr, r3, #1
  401d0e:	46da      	mov	sl, fp
  401d10:	e422      	b.n	401558 <_vfiprintf_r+0x3c4>
  401d12:	2230      	movs	r2, #48	; 0x30
  401d14:	f88d 2030 	strb.w	r2, [sp, #48]	; 0x30
  401d18:	9a01      	ldr	r2, [sp, #4]
  401d1a:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
  401d1e:	2a00      	cmp	r2, #0
  401d20:	f04f 0300 	mov.w	r3, #0
  401d24:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  401d28:	f046 0302 	orr.w	r3, r6, #2
  401d2c:	f2c0 80cb 	blt.w	401ec6 <_vfiprintf_r+0xd32>
  401d30:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  401d34:	f046 0602 	orr.w	r6, r6, #2
  401d38:	f04f 0900 	mov.w	r9, #0
  401d3c:	e742      	b.n	401bc4 <_vfiprintf_r+0xa30>
  401d3e:	f04f 0900 	mov.w	r9, #0
  401d42:	4890      	ldr	r0, [pc, #576]	; (401f84 <_vfiprintf_r+0xdf0>)
  401d44:	e73e      	b.n	401bc4 <_vfiprintf_r+0xa30>
  401d46:	9b01      	ldr	r3, [sp, #4]
  401d48:	4264      	negs	r4, r4
  401d4a:	f04f 092d 	mov.w	r9, #45	; 0x2d
  401d4e:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  401d52:	2b00      	cmp	r3, #0
  401d54:	f88d 902f 	strb.w	r9, [sp, #47]	; 0x2f
  401d58:	f6ff ac7b 	blt.w	401652 <_vfiprintf_r+0x4be>
  401d5c:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  401d60:	e477      	b.n	401652 <_vfiprintf_r+0x4be>
  401d62:	9b07      	ldr	r3, [sp, #28]
  401d64:	2b00      	cmp	r3, #0
  401d66:	d072      	beq.n	401e4e <_vfiprintf_r+0xcba>
  401d68:	ab0c      	add	r3, sp, #48	; 0x30
  401d6a:	2202      	movs	r2, #2
  401d6c:	931a      	str	r3, [sp, #104]	; 0x68
  401d6e:	921b      	str	r2, [sp, #108]	; 0x6c
  401d70:	f04f 0e01 	mov.w	lr, #1
  401d74:	46da      	mov	sl, fp
  401d76:	e713      	b.n	401ba0 <_vfiprintf_r+0xa0c>
  401d78:	f016 0940 	ands.w	r9, r6, #64	; 0x40
  401d7c:	d048      	beq.n	401e10 <_vfiprintf_r+0xc7c>
  401d7e:	9904      	ldr	r1, [sp, #16]
  401d80:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
  401d84:	460b      	mov	r3, r1
  401d86:	880c      	ldrh	r4, [r1, #0]
  401d88:	9901      	ldr	r1, [sp, #4]
  401d8a:	2900      	cmp	r1, #0
  401d8c:	f103 0304 	add.w	r3, r3, #4
  401d90:	f04f 0500 	mov.w	r5, #0
  401d94:	f6ff ae10 	blt.w	4019b8 <_vfiprintf_r+0x824>
  401d98:	ea54 0105 	orrs.w	r1, r4, r5
  401d9c:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  401da0:	9304      	str	r3, [sp, #16]
  401da2:	f43f ac9c 	beq.w	4016de <_vfiprintf_r+0x54a>
  401da6:	4691      	mov	r9, r2
  401da8:	e4a1      	b.n	4016ee <_vfiprintf_r+0x55a>
  401daa:	06f0      	lsls	r0, r6, #27
  401dac:	d40a      	bmi.n	401dc4 <_vfiprintf_r+0xc30>
  401dae:	0671      	lsls	r1, r6, #25
  401db0:	d508      	bpl.n	401dc4 <_vfiprintf_r+0xc30>
  401db2:	9a04      	ldr	r2, [sp, #16]
  401db4:	6813      	ldr	r3, [r2, #0]
  401db6:	3204      	adds	r2, #4
  401db8:	9204      	str	r2, [sp, #16]
  401dba:	f8bd 2008 	ldrh.w	r2, [sp, #8]
  401dbe:	801a      	strh	r2, [r3, #0]
  401dc0:	f7ff ba19 	b.w	4011f6 <_vfiprintf_r+0x62>
  401dc4:	9a04      	ldr	r2, [sp, #16]
  401dc6:	6813      	ldr	r3, [r2, #0]
  401dc8:	3204      	adds	r2, #4
  401dca:	9204      	str	r2, [sp, #16]
  401dcc:	9a02      	ldr	r2, [sp, #8]
  401dce:	601a      	str	r2, [r3, #0]
  401dd0:	f7ff ba11 	b.w	4011f6 <_vfiprintf_r+0x62>
  401dd4:	aa0d      	add	r2, sp, #52	; 0x34
  401dd6:	9900      	ldr	r1, [sp, #0]
  401dd8:	9805      	ldr	r0, [sp, #20]
  401dda:	f7ff f99f 	bl	40111c <__sprint_r.part.0>
  401dde:	2800      	cmp	r0, #0
  401de0:	f47f ae76 	bne.w	401ad0 <_vfiprintf_r+0x93c>
  401de4:	980e      	ldr	r0, [sp, #56]	; 0x38
  401de6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401de8:	f100 0e01 	add.w	lr, r0, #1
  401dec:	46da      	mov	sl, fp
  401dee:	e5fa      	b.n	4019e6 <_vfiprintf_r+0x852>
  401df0:	f04f 30ff 	mov.w	r0, #4294967295
  401df4:	f7ff bab6 	b.w	401364 <_vfiprintf_r+0x1d0>
  401df8:	4862      	ldr	r0, [pc, #392]	; (401f84 <_vfiprintf_r+0xdf0>)
  401dfa:	4616      	mov	r6, r2
  401dfc:	ea54 0205 	orrs.w	r2, r4, r5
  401e00:	9304      	str	r3, [sp, #16]
  401e02:	f04f 0900 	mov.w	r9, #0
  401e06:	f47f aedd 	bne.w	401bc4 <_vfiprintf_r+0xa30>
  401e0a:	e6fc      	b.n	401c06 <_vfiprintf_r+0xa72>
  401e0c:	9b04      	ldr	r3, [sp, #16]
  401e0e:	e7f5      	b.n	401dfc <_vfiprintf_r+0xc68>
  401e10:	9a04      	ldr	r2, [sp, #16]
  401e12:	f88d 902f 	strb.w	r9, [sp, #47]	; 0x2f
  401e16:	4613      	mov	r3, r2
  401e18:	6814      	ldr	r4, [r2, #0]
  401e1a:	9a01      	ldr	r2, [sp, #4]
  401e1c:	2a00      	cmp	r2, #0
  401e1e:	f103 0304 	add.w	r3, r3, #4
  401e22:	f04f 0500 	mov.w	r5, #0
  401e26:	f6ff adc7 	blt.w	4019b8 <_vfiprintf_r+0x824>
  401e2a:	ea54 0205 	orrs.w	r2, r4, r5
  401e2e:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  401e32:	9304      	str	r3, [sp, #16]
  401e34:	f47f ac5b 	bne.w	4016ee <_vfiprintf_r+0x55a>
  401e38:	e451      	b.n	4016de <_vfiprintf_r+0x54a>
  401e3a:	aa0d      	add	r2, sp, #52	; 0x34
  401e3c:	9900      	ldr	r1, [sp, #0]
  401e3e:	9805      	ldr	r0, [sp, #20]
  401e40:	f7ff f96c 	bl	40111c <__sprint_r.part.0>
  401e44:	2800      	cmp	r0, #0
  401e46:	f47f ae43 	bne.w	401ad0 <_vfiprintf_r+0x93c>
  401e4a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401e4c:	e668      	b.n	401b20 <_vfiprintf_r+0x98c>
  401e4e:	4610      	mov	r0, r2
  401e50:	f04f 0e01 	mov.w	lr, #1
  401e54:	46da      	mov	sl, fp
  401e56:	e5e6      	b.n	401a26 <_vfiprintf_r+0x892>
  401e58:	9904      	ldr	r1, [sp, #16]
  401e5a:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  401e5e:	460a      	mov	r2, r1
  401e60:	880c      	ldrh	r4, [r1, #0]
  401e62:	9901      	ldr	r1, [sp, #4]
  401e64:	2900      	cmp	r1, #0
  401e66:	f102 0204 	add.w	r2, r2, #4
  401e6a:	f04f 0500 	mov.w	r5, #0
  401e6e:	db4e      	blt.n	401f0e <_vfiprintf_r+0xd7a>
  401e70:	ea54 0105 	orrs.w	r1, r4, r5
  401e74:	f026 0680 	bic.w	r6, r6, #128	; 0x80
  401e78:	9204      	str	r2, [sp, #16]
  401e7a:	4699      	mov	r9, r3
  401e7c:	f47f abe9 	bne.w	401652 <_vfiprintf_r+0x4be>
  401e80:	e4d4      	b.n	40182c <_vfiprintf_r+0x698>
  401e82:	9304      	str	r3, [sp, #16]
  401e84:	e6f9      	b.n	401c7a <_vfiprintf_r+0xae6>
  401e86:	4638      	mov	r0, r7
  401e88:	9404      	str	r4, [sp, #16]
  401e8a:	f7ff f8d9 	bl	401040 <strlen>
  401e8e:	2300      	movs	r3, #0
  401e90:	9003      	str	r0, [sp, #12]
  401e92:	f89d 902f 	ldrb.w	r9, [sp, #47]	; 0x2f
  401e96:	9301      	str	r3, [sp, #4]
  401e98:	f7ff ba9c 	b.w	4013d4 <_vfiprintf_r+0x240>
  401e9c:	aa0d      	add	r2, sp, #52	; 0x34
  401e9e:	9900      	ldr	r1, [sp, #0]
  401ea0:	9805      	ldr	r0, [sp, #20]
  401ea2:	f7ff f93b 	bl	40111c <__sprint_r.part.0>
  401ea6:	2800      	cmp	r0, #0
  401ea8:	f47f ae12 	bne.w	401ad0 <_vfiprintf_r+0x93c>
  401eac:	980e      	ldr	r0, [sp, #56]	; 0x38
  401eae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401eb0:	f100 0e01 	add.w	lr, r0, #1
  401eb4:	46da      	mov	sl, fp
  401eb6:	e5b6      	b.n	401a26 <_vfiprintf_r+0x892>
  401eb8:	980e      	ldr	r0, [sp, #56]	; 0x38
  401eba:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401ebc:	f8df 90cc 	ldr.w	r9, [pc, #204]	; 401f8c <_vfiprintf_r+0xdf8>
  401ec0:	3001      	adds	r0, #1
  401ec2:	f7ff bad2 	b.w	40146a <_vfiprintf_r+0x2d6>
  401ec6:	461e      	mov	r6, r3
  401ec8:	f04f 0900 	mov.w	r9, #0
  401ecc:	e67a      	b.n	401bc4 <_vfiprintf_r+0xa30>
  401ece:	2b06      	cmp	r3, #6
  401ed0:	bf28      	it	cs
  401ed2:	2306      	movcs	r3, #6
  401ed4:	9303      	str	r3, [sp, #12]
  401ed6:	9404      	str	r4, [sp, #16]
  401ed8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
  401edc:	4f2a      	ldr	r7, [pc, #168]	; (401f88 <_vfiprintf_r+0xdf4>)
  401ede:	e50c      	b.n	4018fa <_vfiprintf_r+0x766>
  401ee0:	9204      	str	r2, [sp, #16]
  401ee2:	e56a      	b.n	4019ba <_vfiprintf_r+0x826>
  401ee4:	980e      	ldr	r0, [sp, #56]	; 0x38
  401ee6:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 401f8c <_vfiprintf_r+0xdf8>
  401eea:	3001      	adds	r0, #1
  401eec:	f7ff bb73 	b.w	4015d6 <_vfiprintf_r+0x442>
  401ef0:	46f4      	mov	ip, lr
  401ef2:	f7ff bb1a 	b.w	40152a <_vfiprintf_r+0x396>
  401ef6:	9b01      	ldr	r3, [sp, #4]
  401ef8:	f89d 902f 	ldrb.w	r9, [sp, #47]	; 0x2f
  401efc:	9303      	str	r3, [sp, #12]
  401efe:	9404      	str	r4, [sp, #16]
  401f00:	9001      	str	r0, [sp, #4]
  401f02:	f7ff ba67 	b.w	4013d4 <_vfiprintf_r+0x240>
  401f06:	2200      	movs	r2, #0
  401f08:	9201      	str	r2, [sp, #4]
  401f0a:	f7ff b9ac 	b.w	401266 <_vfiprintf_r+0xd2>
  401f0e:	9204      	str	r2, [sp, #16]
  401f10:	4699      	mov	r9, r3
  401f12:	e6b2      	b.n	401c7a <_vfiprintf_r+0xae6>
  401f14:	9a04      	ldr	r2, [sp, #16]
  401f16:	6813      	ldr	r3, [r2, #0]
  401f18:	9301      	str	r3, [sp, #4]
  401f1a:	3204      	adds	r2, #4
  401f1c:	2b00      	cmp	r3, #0
  401f1e:	9204      	str	r2, [sp, #16]
  401f20:	f898 3001 	ldrb.w	r3, [r8, #1]
  401f24:	46a8      	mov	r8, r5
  401f26:	f6bf a99c 	bge.w	401262 <_vfiprintf_r+0xce>
  401f2a:	f04f 32ff 	mov.w	r2, #4294967295
  401f2e:	9201      	str	r2, [sp, #4]
  401f30:	f7ff b997 	b.w	401262 <_vfiprintf_r+0xce>
  401f34:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  401f38:	e48e      	b.n	401858 <_vfiprintf_r+0x6c4>
  401f3a:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  401f3e:	e4f0      	b.n	401922 <_vfiprintf_r+0x78e>
  401f40:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  401f44:	e4ab      	b.n	40189e <_vfiprintf_r+0x70a>
  401f46:	4699      	mov	r9, r3
  401f48:	07f3      	lsls	r3, r6, #31
  401f4a:	d505      	bpl.n	401f58 <_vfiprintf_r+0xdc4>
  401f4c:	af2a      	add	r7, sp, #168	; 0xa8
  401f4e:	2330      	movs	r3, #48	; 0x30
  401f50:	f807 3d41 	strb.w	r3, [r7, #-65]!
  401f54:	f7ff bb97 	b.w	401686 <_vfiprintf_r+0x4f2>
  401f58:	9b01      	ldr	r3, [sp, #4]
  401f5a:	9303      	str	r3, [sp, #12]
  401f5c:	465f      	mov	r7, fp
  401f5e:	f7ff ba39 	b.w	4013d4 <_vfiprintf_r+0x240>
  401f62:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  401f66:	e443      	b.n	4017f0 <_vfiprintf_r+0x65c>
  401f68:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  401f6c:	f7ff bb9a 	b.w	4016a4 <_vfiprintf_r+0x510>
  401f70:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  401f74:	f7ff bb4d 	b.w	401612 <_vfiprintf_r+0x47e>
  401f78:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  401f7c:	e50f      	b.n	40199e <_vfiprintf_r+0x80a>
  401f7e:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  401f82:	e4f3      	b.n	40196c <_vfiprintf_r+0x7d8>
  401f84:	004056b8 	.word	0x004056b8
  401f88:	004056cc 	.word	0x004056cc
  401f8c:	004056d4 	.word	0x004056d4

00401f90 <__sbprintf>:
  401f90:	b5f0      	push	{r4, r5, r6, r7, lr}
  401f92:	460c      	mov	r4, r1
  401f94:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
  401f98:	8989      	ldrh	r1, [r1, #12]
  401f9a:	6e66      	ldr	r6, [r4, #100]	; 0x64
  401f9c:	89e5      	ldrh	r5, [r4, #14]
  401f9e:	9619      	str	r6, [sp, #100]	; 0x64
  401fa0:	f021 0102 	bic.w	r1, r1, #2
  401fa4:	6a66      	ldr	r6, [r4, #36]	; 0x24
  401fa6:	f8ad 500e 	strh.w	r5, [sp, #14]
  401faa:	2500      	movs	r5, #0
  401fac:	69e7      	ldr	r7, [r4, #28]
  401fae:	f8ad 100c 	strh.w	r1, [sp, #12]
  401fb2:	9609      	str	r6, [sp, #36]	; 0x24
  401fb4:	9506      	str	r5, [sp, #24]
  401fb6:	ae1a      	add	r6, sp, #104	; 0x68
  401fb8:	f44f 6580 	mov.w	r5, #1024	; 0x400
  401fbc:	4669      	mov	r1, sp
  401fbe:	9600      	str	r6, [sp, #0]
  401fc0:	9604      	str	r6, [sp, #16]
  401fc2:	9502      	str	r5, [sp, #8]
  401fc4:	9505      	str	r5, [sp, #20]
  401fc6:	9707      	str	r7, [sp, #28]
  401fc8:	4606      	mov	r6, r0
  401fca:	f7ff f8e3 	bl	401194 <_vfiprintf_r>
  401fce:	1e05      	subs	r5, r0, #0
  401fd0:	db07      	blt.n	401fe2 <__sbprintf+0x52>
  401fd2:	4630      	mov	r0, r6
  401fd4:	4669      	mov	r1, sp
  401fd6:	f000 fe6f 	bl	402cb8 <_fflush_r>
  401fda:	2800      	cmp	r0, #0
  401fdc:	bf18      	it	ne
  401fde:	f04f 35ff 	movne.w	r5, #4294967295
  401fe2:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  401fe6:	065b      	lsls	r3, r3, #25
  401fe8:	d503      	bpl.n	401ff2 <__sbprintf+0x62>
  401fea:	89a3      	ldrh	r3, [r4, #12]
  401fec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401ff0:	81a3      	strh	r3, [r4, #12]
  401ff2:	4628      	mov	r0, r5
  401ff4:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
  401ff8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401ffa:	bf00      	nop

00401ffc <__svfiscanf_r>:
  401ffc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402000:	468b      	mov	fp, r1
  402002:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
  402006:	b0d9      	sub	sp, #356	; 0x164
  402008:	4607      	mov	r7, r0
  40200a:	0488      	lsls	r0, r1, #18
  40200c:	9305      	str	r3, [sp, #20]
  40200e:	d409      	bmi.n	402024 <__svfiscanf_r+0x28>
  402010:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  402014:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
  402018:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  40201c:	f8ab 100c 	strh.w	r1, [fp, #12]
  402020:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  402024:	4616      	mov	r6, r2
  402026:	2300      	movs	r3, #0
  402028:	f816 1b01 	ldrb.w	r1, [r6], #1
  40202c:	9306      	str	r3, [sp, #24]
  40202e:	9303      	str	r3, [sp, #12]
  402030:	4699      	mov	r9, r3
  402032:	9307      	str	r3, [sp, #28]
  402034:	f8df a4dc 	ldr.w	sl, [pc, #1244]	; 402514 <__svfiscanf_r+0x518>
  402038:	910b      	str	r1, [sp, #44]	; 0x2c
  40203a:	b371      	cbz	r1, 40209a <__svfiscanf_r+0x9e>
  40203c:	f8da c000 	ldr.w	ip, [sl]
  402040:	eb0c 0301 	add.w	r3, ip, r1
  402044:	785b      	ldrb	r3, [r3, #1]
  402046:	f003 0308 	and.w	r3, r3, #8
  40204a:	f003 05ff 	and.w	r5, r3, #255	; 0xff
  40204e:	b343      	cbz	r3, 4020a2 <__svfiscanf_r+0xa6>
  402050:	f8db 3004 	ldr.w	r3, [fp, #4]
  402054:	e012      	b.n	40207c <__svfiscanf_r+0x80>
  402056:	f8db 3000 	ldr.w	r3, [fp]
  40205a:	f8da 1000 	ldr.w	r1, [sl]
  40205e:	781a      	ldrb	r2, [r3, #0]
  402060:	440a      	add	r2, r1
  402062:	3301      	adds	r3, #1
  402064:	7852      	ldrb	r2, [r2, #1]
  402066:	0712      	lsls	r2, r2, #28
  402068:	d510      	bpl.n	40208c <__svfiscanf_r+0x90>
  40206a:	f8db 2004 	ldr.w	r2, [fp, #4]
  40206e:	f8cb 3000 	str.w	r3, [fp]
  402072:	1e53      	subs	r3, r2, #1
  402074:	f109 0901 	add.w	r9, r9, #1
  402078:	f8cb 3004 	str.w	r3, [fp, #4]
  40207c:	2b00      	cmp	r3, #0
  40207e:	dcea      	bgt.n	402056 <__svfiscanf_r+0x5a>
  402080:	4659      	mov	r1, fp
  402082:	4638      	mov	r0, r7
  402084:	f002 f9f0 	bl	404468 <__srefill_r>
  402088:	2800      	cmp	r0, #0
  40208a:	d0e4      	beq.n	402056 <__svfiscanf_r+0x5a>
  40208c:	4632      	mov	r2, r6
  40208e:	4616      	mov	r6, r2
  402090:	f816 1b01 	ldrb.w	r1, [r6], #1
  402094:	910b      	str	r1, [sp, #44]	; 0x2c
  402096:	2900      	cmp	r1, #0
  402098:	d1d0      	bne.n	40203c <__svfiscanf_r+0x40>
  40209a:	9807      	ldr	r0, [sp, #28]
  40209c:	b059      	add	sp, #356	; 0x164
  40209e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4020a2:	2925      	cmp	r1, #37	; 0x25
  4020a4:	f040 8082 	bne.w	4021ac <__svfiscanf_r+0x1b0>
  4020a8:	7853      	ldrb	r3, [r2, #1]
  4020aa:	462c      	mov	r4, r5
  4020ac:	1c72      	adds	r2, r6, #1
  4020ae:	2b78      	cmp	r3, #120	; 0x78
  4020b0:	f200 8264 	bhi.w	40257c <__svfiscanf_r+0x580>
  4020b4:	e8df f013 	tbh	[pc, r3, lsl #1]
  4020b8:	02620093 	.word	0x02620093
  4020bc:	02620262 	.word	0x02620262
  4020c0:	02620262 	.word	0x02620262
  4020c4:	02620262 	.word	0x02620262
  4020c8:	02620262 	.word	0x02620262
  4020cc:	02620262 	.word	0x02620262
  4020d0:	02620262 	.word	0x02620262
  4020d4:	02620262 	.word	0x02620262
  4020d8:	02620262 	.word	0x02620262
  4020dc:	02620262 	.word	0x02620262
  4020e0:	02620262 	.word	0x02620262
  4020e4:	02620262 	.word	0x02620262
  4020e8:	02620262 	.word	0x02620262
  4020ec:	02620262 	.word	0x02620262
  4020f0:	02620262 	.word	0x02620262
  4020f4:	02620262 	.word	0x02620262
  4020f8:	02620262 	.word	0x02620262
  4020fc:	02620262 	.word	0x02620262
  402100:	00790262 	.word	0x00790262
  402104:	02620262 	.word	0x02620262
  402108:	02620262 	.word	0x02620262
  40210c:	026201a7 	.word	0x026201a7
  402110:	02620262 	.word	0x02620262
  402114:	02620262 	.word	0x02620262
  402118:	019f019f 	.word	0x019f019f
  40211c:	019f019f 	.word	0x019f019f
  402120:	019f019f 	.word	0x019f019f
  402124:	019f019f 	.word	0x019f019f
  402128:	019f019f 	.word	0x019f019f
  40212c:	02620262 	.word	0x02620262
  402130:	02620262 	.word	0x02620262
  402134:	02620262 	.word	0x02620262
  402138:	02620262 	.word	0x02620262
  40213c:	02620262 	.word	0x02620262
  402140:	0262018d 	.word	0x0262018d
  402144:	02620262 	.word	0x02620262
  402148:	02620262 	.word	0x02620262
  40214c:	02620262 	.word	0x02620262
  402150:	026201be 	.word	0x026201be
  402154:	01ac0262 	.word	0x01ac0262
  402158:	02620262 	.word	0x02620262
  40215c:	02620262 	.word	0x02620262
  402160:	02620262 	.word	0x02620262
  402164:	02620262 	.word	0x02620262
  402168:	0262017b 	.word	0x0262017b
  40216c:	01440262 	.word	0x01440262
  402170:	02620262 	.word	0x02620262
  402174:	02620262 	.word	0x02620262
  402178:	02620262 	.word	0x02620262
  40217c:	01150262 	.word	0x01150262
  402180:	02620109 	.word	0x02620109
  402184:	02620262 	.word	0x02620262
  402188:	01c30104 	.word	0x01c30104
  40218c:	02620262 	.word	0x02620262
  402190:	026200fc 	.word	0x026200fc
  402194:	00df00eb 	.word	0x00df00eb
  402198:	026200d1 	.word	0x026200d1
  40219c:	00c90262 	.word	0x00c90262
  4021a0:	00980262 	.word	0x00980262
  4021a4:	02620262 	.word	0x02620262
  4021a8:	017b      	.short	0x017b
  4021aa:	4616      	mov	r6, r2
  4021ac:	f8db 3004 	ldr.w	r3, [fp, #4]
  4021b0:	2b00      	cmp	r3, #0
  4021b2:	f340 8244 	ble.w	40263e <__svfiscanf_r+0x642>
  4021b6:	f8db 3000 	ldr.w	r3, [fp]
  4021ba:	f816 2c01 	ldrb.w	r2, [r6, #-1]
  4021be:	7819      	ldrb	r1, [r3, #0]
  4021c0:	4291      	cmp	r1, r2
  4021c2:	f47f af6a 	bne.w	40209a <__svfiscanf_r+0x9e>
  4021c6:	f8db 2004 	ldr.w	r2, [fp, #4]
  4021ca:	3301      	adds	r3, #1
  4021cc:	3a01      	subs	r2, #1
  4021ce:	f8cb 2004 	str.w	r2, [fp, #4]
  4021d2:	f8cb 3000 	str.w	r3, [fp]
  4021d6:	f109 0901 	add.w	r9, r9, #1
  4021da:	4632      	mov	r2, r6
  4021dc:	e757      	b.n	40208e <__svfiscanf_r+0x92>
  4021de:	f04f 30ff 	mov.w	r0, #4294967295
  4021e2:	b059      	add	sp, #356	; 0x164
  4021e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4021e8:	f8db 3004 	ldr.w	r3, [fp, #4]
  4021ec:	9202      	str	r2, [sp, #8]
  4021ee:	2b00      	cmp	r3, #0
  4021f0:	f340 8259 	ble.w	4026a6 <__svfiscanf_r+0x6aa>
  4021f4:	4bc5      	ldr	r3, [pc, #788]	; (40250c <__svfiscanf_r+0x510>)
  4021f6:	9306      	str	r3, [sp, #24]
  4021f8:	230a      	movs	r3, #10
  4021fa:	9303      	str	r3, [sp, #12]
  4021fc:	2603      	movs	r6, #3
  4021fe:	f8db 3000 	ldr.w	r3, [fp]
  402202:	e001      	b.n	402208 <__svfiscanf_r+0x20c>
  402204:	f8cb 3000 	str.w	r3, [fp]
  402208:	f893 e000 	ldrb.w	lr, [r3]
  40220c:	eb0c 020e 	add.w	r2, ip, lr
  402210:	7850      	ldrb	r0, [r2, #1]
  402212:	f000 0208 	and.w	r2, r0, #8
  402216:	f002 01ff 	and.w	r1, r2, #255	; 0xff
  40221a:	2a00      	cmp	r2, #0
  40221c:	f000 826e 	beq.w	4026fc <__svfiscanf_r+0x700>
  402220:	f8db 2004 	ldr.w	r2, [fp, #4]
  402224:	3a01      	subs	r2, #1
  402226:	2a00      	cmp	r2, #0
  402228:	f109 0901 	add.w	r9, r9, #1
  40222c:	f8cb 2004 	str.w	r2, [fp, #4]
  402230:	f103 0301 	add.w	r3, r3, #1
  402234:	dce6      	bgt.n	402204 <__svfiscanf_r+0x208>
  402236:	4659      	mov	r1, fp
  402238:	4638      	mov	r0, r7
  40223a:	f002 f915 	bl	404468 <__srefill_r>
  40223e:	2800      	cmp	r0, #0
  402240:	f040 818c 	bne.w	40255c <__svfiscanf_r+0x560>
  402244:	f8da c000 	ldr.w	ip, [sl]
  402248:	e7d9      	b.n	4021fe <__svfiscanf_r+0x202>
  40224a:	f8db 3004 	ldr.w	r3, [fp, #4]
  40224e:	9202      	str	r2, [sp, #8]
  402250:	2b00      	cmp	r3, #0
  402252:	f340 8232 	ble.w	4026ba <__svfiscanf_r+0x6be>
  402256:	2602      	movs	r6, #2
  402258:	e7d1      	b.n	4021fe <__svfiscanf_r+0x202>
  40225a:	f8db 3004 	ldr.w	r3, [fp, #4]
  40225e:	9202      	str	r2, [sp, #8]
  402260:	2b00      	cmp	r3, #0
  402262:	f445 7508 	orr.w	r5, r5, #544	; 0x220
  402266:	f340 80aa 	ble.w	4023be <__svfiscanf_r+0x3c2>
  40226a:	4ba8      	ldr	r3, [pc, #672]	; (40250c <__svfiscanf_r+0x510>)
  40226c:	9306      	str	r3, [sp, #24]
  40226e:	2310      	movs	r3, #16
  402270:	9303      	str	r3, [sp, #12]
  402272:	2603      	movs	r6, #3
  402274:	e7c3      	b.n	4021fe <__svfiscanf_r+0x202>
  402276:	f8db 3004 	ldr.w	r3, [fp, #4]
  40227a:	9202      	str	r2, [sp, #8]
  40227c:	2b00      	cmp	r3, #0
  40227e:	f340 80cf 	ble.w	402420 <__svfiscanf_r+0x424>
  402282:	4ba2      	ldr	r3, [pc, #648]	; (40250c <__svfiscanf_r+0x510>)
  402284:	9306      	str	r3, [sp, #24]
  402286:	2308      	movs	r3, #8
  402288:	9303      	str	r3, [sp, #12]
  40228a:	2603      	movs	r6, #3
  40228c:	e7b7      	b.n	4021fe <__svfiscanf_r+0x202>
  40228e:	06eb      	lsls	r3, r5, #27
  402290:	9202      	str	r2, [sp, #8]
  402292:	f100 812c 	bmi.w	4024ee <__svfiscanf_r+0x4f2>
  402296:	076e      	lsls	r6, r5, #29
  402298:	f140 81e4 	bpl.w	402664 <__svfiscanf_r+0x668>
  40229c:	9905      	ldr	r1, [sp, #20]
  40229e:	680b      	ldr	r3, [r1, #0]
  4022a0:	f8a3 9000 	strh.w	r9, [r3]
  4022a4:	460b      	mov	r3, r1
  4022a6:	4616      	mov	r6, r2
  4022a8:	3304      	adds	r3, #4
  4022aa:	9305      	str	r3, [sp, #20]
  4022ac:	4632      	mov	r2, r6
  4022ae:	e6ee      	b.n	40208e <__svfiscanf_r+0x92>
  4022b0:	7873      	ldrb	r3, [r6, #1]
  4022b2:	2b6c      	cmp	r3, #108	; 0x6c
  4022b4:	f000 81cb 	beq.w	40264e <__svfiscanf_r+0x652>
  4022b8:	f045 0501 	orr.w	r5, r5, #1
  4022bc:	4616      	mov	r6, r2
  4022be:	e6f5      	b.n	4020ac <__svfiscanf_r+0xb0>
  4022c0:	7873      	ldrb	r3, [r6, #1]
  4022c2:	f045 0504 	orr.w	r5, r5, #4
  4022c6:	4616      	mov	r6, r2
  4022c8:	e6f0      	b.n	4020ac <__svfiscanf_r+0xb0>
  4022ca:	f8db 3004 	ldr.w	r3, [fp, #4]
  4022ce:	9202      	str	r2, [sp, #8]
  4022d0:	2b00      	cmp	r3, #0
  4022d2:	f340 8086 	ble.w	4023e2 <__svfiscanf_r+0x3e6>
  4022d6:	4b8e      	ldr	r3, [pc, #568]	; (402510 <__svfiscanf_r+0x514>)
  4022d8:	9306      	str	r3, [sp, #24]
  4022da:	230a      	movs	r3, #10
  4022dc:	9303      	str	r3, [sp, #12]
  4022de:	2603      	movs	r6, #3
  4022e0:	e78d      	b.n	4021fe <__svfiscanf_r+0x202>
  4022e2:	f8db 3004 	ldr.w	r3, [fp, #4]
  4022e6:	9202      	str	r2, [sp, #8]
  4022e8:	2b00      	cmp	r3, #0
  4022ea:	f340 81d4 	ble.w	402696 <__svfiscanf_r+0x69a>
  4022ee:	2c00      	cmp	r4, #0
  4022f0:	bf08      	it	eq
  4022f2:	2401      	moveq	r4, #1
  4022f4:	f015 0301 	ands.w	r3, r5, #1
  4022f8:	f040 80ad 	bne.w	402456 <__svfiscanf_r+0x45a>
  4022fc:	06ea      	lsls	r2, r5, #27
  4022fe:	f140 818a 	bpl.w	402616 <__svfiscanf_r+0x61a>
  402302:	461d      	mov	r5, r3
  402304:	e009      	b.n	40231a <__svfiscanf_r+0x31e>
  402306:	4413      	add	r3, r2
  402308:	f8cb 3000 	str.w	r3, [fp]
  40230c:	4415      	add	r5, r2
  40230e:	1aa4      	subs	r4, r4, r2
  402310:	f002 f8aa 	bl	404468 <__srefill_r>
  402314:	2800      	cmp	r0, #0
  402316:	f040 8175 	bne.w	402604 <__svfiscanf_r+0x608>
  40231a:	f8db 2004 	ldr.w	r2, [fp, #4]
  40231e:	f8db 3000 	ldr.w	r3, [fp]
  402322:	42a2      	cmp	r2, r4
  402324:	4659      	mov	r1, fp
  402326:	4638      	mov	r0, r7
  402328:	dbed      	blt.n	402306 <__svfiscanf_r+0x30a>
  40232a:	1b12      	subs	r2, r2, r4
  40232c:	4423      	add	r3, r4
  40232e:	f8cb 2004 	str.w	r2, [fp, #4]
  402332:	4425      	add	r5, r4
  402334:	f8cb 3000 	str.w	r3, [fp]
  402338:	9e02      	ldr	r6, [sp, #8]
  40233a:	44a9      	add	r9, r5
  40233c:	4632      	mov	r2, r6
  40233e:	e6a6      	b.n	40208e <__svfiscanf_r+0x92>
  402340:	f10d 0860 	add.w	r8, sp, #96	; 0x60
  402344:	4611      	mov	r1, r2
  402346:	4640      	mov	r0, r8
  402348:	f002 f92a 	bl	4045a0 <__sccl>
  40234c:	f8db 3004 	ldr.w	r3, [fp, #4]
  402350:	2b00      	cmp	r3, #0
  402352:	4606      	mov	r6, r0
  402354:	f340 81ca 	ble.w	4026ec <__svfiscanf_r+0x6f0>
  402358:	2c00      	cmp	r4, #0
  40235a:	f8db 1000 	ldr.w	r1, [fp]
  40235e:	bf08      	it	eq
  402360:	f04f 34ff 	moveq.w	r4, #4294967295
  402364:	06eb      	lsls	r3, r5, #27
  402366:	7808      	ldrb	r0, [r1, #0]
  402368:	f140 80c4 	bpl.w	4024f4 <__svfiscanf_r+0x4f8>
  40236c:	9402      	str	r4, [sp, #8]
  40236e:	2500      	movs	r5, #0
  402370:	e000      	b.n	402374 <__svfiscanf_r+0x378>
  402372:	7808      	ldrb	r0, [r1, #0]
  402374:	f818 3000 	ldrb.w	r3, [r8, r0]
  402378:	3101      	adds	r1, #1
  40237a:	2b00      	cmp	r3, #0
  40237c:	f000 8146 	beq.w	40260c <__svfiscanf_r+0x610>
  402380:	f8db 3004 	ldr.w	r3, [fp, #4]
  402384:	f8cb 1000 	str.w	r1, [fp]
  402388:	3501      	adds	r5, #1
  40238a:	3b01      	subs	r3, #1
  40238c:	42a5      	cmp	r5, r4
  40238e:	f8cb 3004 	str.w	r3, [fp, #4]
  402392:	f000 8110 	beq.w	4025b6 <__svfiscanf_r+0x5ba>
  402396:	2b00      	cmp	r3, #0
  402398:	dceb      	bgt.n	402372 <__svfiscanf_r+0x376>
  40239a:	4659      	mov	r1, fp
  40239c:	4638      	mov	r0, r7
  40239e:	f002 f863 	bl	404468 <__srefill_r>
  4023a2:	2800      	cmp	r0, #0
  4023a4:	f040 8106 	bne.w	4025b4 <__svfiscanf_r+0x5b8>
  4023a8:	f8db 1000 	ldr.w	r1, [fp]
  4023ac:	e7e1      	b.n	402372 <__svfiscanf_r+0x376>
  4023ae:	f8db 3004 	ldr.w	r3, [fp, #4]
  4023b2:	9202      	str	r2, [sp, #8]
  4023b4:	2b00      	cmp	r3, #0
  4023b6:	f445 7500 	orr.w	r5, r5, #512	; 0x200
  4023ba:	f73f af56 	bgt.w	40226a <__svfiscanf_r+0x26e>
  4023be:	4659      	mov	r1, fp
  4023c0:	4638      	mov	r0, r7
  4023c2:	f002 f851 	bl	404468 <__srefill_r>
  4023c6:	2800      	cmp	r0, #0
  4023c8:	f040 80c8 	bne.w	40255c <__svfiscanf_r+0x560>
  4023cc:	f8da c000 	ldr.w	ip, [sl]
  4023d0:	e74b      	b.n	40226a <__svfiscanf_r+0x26e>
  4023d2:	f8db 3004 	ldr.w	r3, [fp, #4]
  4023d6:	9202      	str	r2, [sp, #8]
  4023d8:	2b00      	cmp	r3, #0
  4023da:	f045 0501 	orr.w	r5, r5, #1
  4023de:	f73f af7a 	bgt.w	4022d6 <__svfiscanf_r+0x2da>
  4023e2:	4659      	mov	r1, fp
  4023e4:	4638      	mov	r0, r7
  4023e6:	f002 f83f 	bl	404468 <__srefill_r>
  4023ea:	2800      	cmp	r0, #0
  4023ec:	f040 80b6 	bne.w	40255c <__svfiscanf_r+0x560>
  4023f0:	f8da c000 	ldr.w	ip, [sl]
  4023f4:	e76f      	b.n	4022d6 <__svfiscanf_r+0x2da>
  4023f6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4023fa:	eb03 0444 	add.w	r4, r3, r4, lsl #1
  4023fe:	3c30      	subs	r4, #48	; 0x30
  402400:	7873      	ldrb	r3, [r6, #1]
  402402:	4616      	mov	r6, r2
  402404:	e652      	b.n	4020ac <__svfiscanf_r+0xb0>
  402406:	7873      	ldrb	r3, [r6, #1]
  402408:	f045 0510 	orr.w	r5, r5, #16
  40240c:	4616      	mov	r6, r2
  40240e:	e64d      	b.n	4020ac <__svfiscanf_r+0xb0>
  402410:	f8db 3004 	ldr.w	r3, [fp, #4]
  402414:	9202      	str	r2, [sp, #8]
  402416:	2b00      	cmp	r3, #0
  402418:	f045 0501 	orr.w	r5, r5, #1
  40241c:	f73f af31 	bgt.w	402282 <__svfiscanf_r+0x286>
  402420:	4659      	mov	r1, fp
  402422:	4638      	mov	r0, r7
  402424:	f002 f820 	bl	404468 <__srefill_r>
  402428:	2800      	cmp	r0, #0
  40242a:	f040 8097 	bne.w	40255c <__svfiscanf_r+0x560>
  40242e:	f8da c000 	ldr.w	ip, [sl]
  402432:	e726      	b.n	402282 <__svfiscanf_r+0x286>
  402434:	7873      	ldrb	r3, [r6, #1]
  402436:	f045 0502 	orr.w	r5, r5, #2
  40243a:	4616      	mov	r6, r2
  40243c:	e636      	b.n	4020ac <__svfiscanf_r+0xb0>
  40243e:	f8db 3004 	ldr.w	r3, [fp, #4]
  402442:	9202      	str	r2, [sp, #8]
  402444:	2b00      	cmp	r3, #0
  402446:	f340 8143 	ble.w	4026d0 <__svfiscanf_r+0x6d4>
  40244a:	4b31      	ldr	r3, [pc, #196]	; (402510 <__svfiscanf_r+0x514>)
  40244c:	9306      	str	r3, [sp, #24]
  40244e:	2300      	movs	r3, #0
  402450:	9303      	str	r3, [sp, #12]
  402452:	2603      	movs	r6, #3
  402454:	e6d3      	b.n	4021fe <__svfiscanf_r+0x202>
  402456:	ab0c      	add	r3, sp, #48	; 0x30
  402458:	4618      	mov	r0, r3
  40245a:	2208      	movs	r2, #8
  40245c:	2100      	movs	r1, #0
  40245e:	9308      	str	r3, [sp, #32]
  402460:	f7fe fcb4 	bl	400dcc <memset>
  402464:	f015 0310 	ands.w	r3, r5, #16
  402468:	9309      	str	r3, [sp, #36]	; 0x24
  40246a:	f000 80ab 	beq.w	4025c4 <__svfiscanf_r+0x5c8>
  40246e:	2300      	movs	r3, #0
  402470:	9304      	str	r3, [sp, #16]
  402472:	2500      	movs	r5, #0
  402474:	f10d 0838 	add.w	r8, sp, #56	; 0x38
  402478:	f001 f928 	bl	4036cc <__locale_mb_cur_max>
  40247c:	42a8      	cmp	r0, r5
  40247e:	d06d      	beq.n	40255c <__svfiscanf_r+0x560>
  402480:	e89b 000c 	ldmia.w	fp, {r2, r3}
  402484:	f812 0b01 	ldrb.w	r0, [r2], #1
  402488:	f8cb 2000 	str.w	r2, [fp]
  40248c:	3b01      	subs	r3, #1
  40248e:	9a08      	ldr	r2, [sp, #32]
  402490:	9200      	str	r2, [sp, #0]
  402492:	1c6e      	adds	r6, r5, #1
  402494:	f8cb 3004 	str.w	r3, [fp, #4]
  402498:	9904      	ldr	r1, [sp, #16]
  40249a:	f808 0005 	strb.w	r0, [r8, r5]
  40249e:	4633      	mov	r3, r6
  4024a0:	4642      	mov	r2, r8
  4024a2:	4638      	mov	r0, r7
  4024a4:	f001 fc4c 	bl	403d40 <_mbrtowc_r>
  4024a8:	1c41      	adds	r1, r0, #1
  4024aa:	d057      	beq.n	40255c <__svfiscanf_r+0x560>
  4024ac:	2800      	cmp	r0, #0
  4024ae:	f040 8090 	bne.w	4025d2 <__svfiscanf_r+0x5d6>
  4024b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4024b4:	2b00      	cmp	r3, #0
  4024b6:	f040 809b 	bne.w	4025f0 <__svfiscanf_r+0x5f4>
  4024ba:	9a04      	ldr	r2, [sp, #16]
  4024bc:	44b1      	add	r9, r6
  4024be:	6013      	str	r3, [r2, #0]
  4024c0:	3c01      	subs	r4, #1
  4024c2:	9b04      	ldr	r3, [sp, #16]
  4024c4:	3304      	adds	r3, #4
  4024c6:	9304      	str	r3, [sp, #16]
  4024c8:	f8db 3004 	ldr.w	r3, [fp, #4]
  4024cc:	2b00      	cmp	r3, #0
  4024ce:	f04f 0500 	mov.w	r5, #0
  4024d2:	dc73      	bgt.n	4025bc <__svfiscanf_r+0x5c0>
  4024d4:	4659      	mov	r1, fp
  4024d6:	4638      	mov	r0, r7
  4024d8:	f001 ffc6 	bl	404468 <__srefill_r>
  4024dc:	2800      	cmp	r0, #0
  4024de:	d06d      	beq.n	4025bc <__svfiscanf_r+0x5c0>
  4024e0:	2d00      	cmp	r5, #0
  4024e2:	d13b      	bne.n	40255c <__svfiscanf_r+0x560>
  4024e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4024e6:	b913      	cbnz	r3, 4024ee <__svfiscanf_r+0x4f2>
  4024e8:	9b07      	ldr	r3, [sp, #28]
  4024ea:	3301      	adds	r3, #1
  4024ec:	9307      	str	r3, [sp, #28]
  4024ee:	9e02      	ldr	r6, [sp, #8]
  4024f0:	4632      	mov	r2, r6
  4024f2:	e5cc      	b.n	40208e <__svfiscanf_r+0x92>
  4024f4:	9a05      	ldr	r2, [sp, #20]
  4024f6:	6815      	ldr	r5, [r2, #0]
  4024f8:	9504      	str	r5, [sp, #16]
  4024fa:	4613      	mov	r3, r2
  4024fc:	3304      	adds	r3, #4
  4024fe:	192a      	adds	r2, r5, r4
  402500:	9302      	str	r3, [sp, #8]
  402502:	462c      	mov	r4, r5
  402504:	4603      	mov	r3, r0
  402506:	463d      	mov	r5, r7
  402508:	4617      	mov	r7, r2
  40250a:	e008      	b.n	40251e <__svfiscanf_r+0x522>
  40250c:	00404975 	.word	0x00404975
  402510:	0040469d 	.word	0x0040469d
  402514:	20000434 	.word	0x20000434
  402518:	f8db 1000 	ldr.w	r1, [fp]
  40251c:	780b      	ldrb	r3, [r1, #0]
  40251e:	f818 3003 	ldrb.w	r3, [r8, r3]
  402522:	1c48      	adds	r0, r1, #1
  402524:	2b00      	cmp	r3, #0
  402526:	d036      	beq.n	402596 <__svfiscanf_r+0x59a>
  402528:	f8db 3004 	ldr.w	r3, [fp, #4]
  40252c:	f8cb 0000 	str.w	r0, [fp]
  402530:	3b01      	subs	r3, #1
  402532:	f8cb 3004 	str.w	r3, [fp, #4]
  402536:	780b      	ldrb	r3, [r1, #0]
  402538:	f804 3b01 	strb.w	r3, [r4], #1
  40253c:	42a7      	cmp	r7, r4
  40253e:	d02a      	beq.n	402596 <__svfiscanf_r+0x59a>
  402540:	f8db 3004 	ldr.w	r3, [fp, #4]
  402544:	2b00      	cmp	r3, #0
  402546:	dce7      	bgt.n	402518 <__svfiscanf_r+0x51c>
  402548:	4659      	mov	r1, fp
  40254a:	4628      	mov	r0, r5
  40254c:	f001 ff8c 	bl	404468 <__srefill_r>
  402550:	2800      	cmp	r0, #0
  402552:	d0e1      	beq.n	402518 <__svfiscanf_r+0x51c>
  402554:	462f      	mov	r7, r5
  402556:	9d04      	ldr	r5, [sp, #16]
  402558:	42a5      	cmp	r5, r4
  40255a:	d11e      	bne.n	40259a <__svfiscanf_r+0x59e>
  40255c:	9a07      	ldr	r2, [sp, #28]
  40255e:	2a00      	cmp	r2, #0
  402560:	f43f ae3d 	beq.w	4021de <__svfiscanf_r+0x1e2>
  402564:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  402568:	f013 0f40 	tst.w	r3, #64	; 0x40
  40256c:	4613      	mov	r3, r2
  40256e:	bf18      	it	ne
  402570:	f04f 33ff 	movne.w	r3, #4294967295
  402574:	4618      	mov	r0, r3
  402576:	b059      	add	sp, #356	; 0x164
  402578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40257c:	4463      	add	r3, ip
  40257e:	9202      	str	r2, [sp, #8]
  402580:	785b      	ldrb	r3, [r3, #1]
  402582:	f003 0303 	and.w	r3, r3, #3
  402586:	2b01      	cmp	r3, #1
  402588:	f8db 3004 	ldr.w	r3, [fp, #4]
  40258c:	d064      	beq.n	402658 <__svfiscanf_r+0x65c>
  40258e:	2b00      	cmp	r3, #0
  402590:	f73f aea1 	bgt.w	4022d6 <__svfiscanf_r+0x2da>
  402594:	e725      	b.n	4023e2 <__svfiscanf_r+0x3e6>
  402596:	462f      	mov	r7, r5
  402598:	9d04      	ldr	r5, [sp, #16]
  40259a:	1b65      	subs	r5, r4, r5
  40259c:	f43f ad7d 	beq.w	40209a <__svfiscanf_r+0x9e>
  4025a0:	9b07      	ldr	r3, [sp, #28]
  4025a2:	3301      	adds	r3, #1
  4025a4:	2200      	movs	r2, #0
  4025a6:	9307      	str	r3, [sp, #28]
  4025a8:	9b02      	ldr	r3, [sp, #8]
  4025aa:	9305      	str	r3, [sp, #20]
  4025ac:	7022      	strb	r2, [r4, #0]
  4025ae:	44a9      	add	r9, r5
  4025b0:	4632      	mov	r2, r6
  4025b2:	e56c      	b.n	40208e <__svfiscanf_r+0x92>
  4025b4:	9502      	str	r5, [sp, #8]
  4025b6:	9d02      	ldr	r5, [sp, #8]
  4025b8:	44a9      	add	r9, r5
  4025ba:	e7f9      	b.n	4025b0 <__svfiscanf_r+0x5b4>
  4025bc:	2c00      	cmp	r4, #0
  4025be:	f47f af5b 	bne.w	402478 <__svfiscanf_r+0x47c>
  4025c2:	e78f      	b.n	4024e4 <__svfiscanf_r+0x4e8>
  4025c4:	9a05      	ldr	r2, [sp, #20]
  4025c6:	6813      	ldr	r3, [r2, #0]
  4025c8:	9304      	str	r3, [sp, #16]
  4025ca:	4613      	mov	r3, r2
  4025cc:	3304      	adds	r3, #4
  4025ce:	9305      	str	r3, [sp, #20]
  4025d0:	e74f      	b.n	402472 <__svfiscanf_r+0x476>
  4025d2:	3002      	adds	r0, #2
  4025d4:	d10f      	bne.n	4025f6 <__svfiscanf_r+0x5fa>
  4025d6:	f8db 3004 	ldr.w	r3, [fp, #4]
  4025da:	2b00      	cmp	r3, #0
  4025dc:	4635      	mov	r5, r6
  4025de:	f73f af4b 	bgt.w	402478 <__svfiscanf_r+0x47c>
  4025e2:	4659      	mov	r1, fp
  4025e4:	4638      	mov	r0, r7
  4025e6:	f001 ff3f 	bl	404468 <__srefill_r>
  4025ea:	2800      	cmp	r0, #0
  4025ec:	d0e6      	beq.n	4025bc <__svfiscanf_r+0x5c0>
  4025ee:	e777      	b.n	4024e0 <__svfiscanf_r+0x4e4>
  4025f0:	44b1      	add	r9, r6
  4025f2:	3c01      	subs	r4, #1
  4025f4:	e768      	b.n	4024c8 <__svfiscanf_r+0x4cc>
  4025f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4025f8:	44b1      	add	r9, r6
  4025fa:	3c01      	subs	r4, #1
  4025fc:	2b00      	cmp	r3, #0
  4025fe:	f43f af60 	beq.w	4024c2 <__svfiscanf_r+0x4c6>
  402602:	e761      	b.n	4024c8 <__svfiscanf_r+0x4cc>
  402604:	2d00      	cmp	r5, #0
  402606:	f47f ae97 	bne.w	402338 <__svfiscanf_r+0x33c>
  40260a:	e7a7      	b.n	40255c <__svfiscanf_r+0x560>
  40260c:	2d00      	cmp	r5, #0
  40260e:	f43f ad44 	beq.w	40209a <__svfiscanf_r+0x9e>
  402612:	44a9      	add	r9, r5
  402614:	e7cc      	b.n	4025b0 <__svfiscanf_r+0x5b4>
  402616:	9d05      	ldr	r5, [sp, #20]
  402618:	4623      	mov	r3, r4
  40261a:	6829      	ldr	r1, [r5, #0]
  40261c:	f8cd b000 	str.w	fp, [sp]
  402620:	2201      	movs	r2, #1
  402622:	4638      	mov	r0, r7
  402624:	f000 fc6a 	bl	402efc <_fread_r>
  402628:	3504      	adds	r5, #4
  40262a:	2800      	cmp	r0, #0
  40262c:	d096      	beq.n	40255c <__svfiscanf_r+0x560>
  40262e:	9b07      	ldr	r3, [sp, #28]
  402630:	9e02      	ldr	r6, [sp, #8]
  402632:	9505      	str	r5, [sp, #20]
  402634:	3301      	adds	r3, #1
  402636:	4481      	add	r9, r0
  402638:	9307      	str	r3, [sp, #28]
  40263a:	4632      	mov	r2, r6
  40263c:	e527      	b.n	40208e <__svfiscanf_r+0x92>
  40263e:	4659      	mov	r1, fp
  402640:	4638      	mov	r0, r7
  402642:	f001 ff11 	bl	404468 <__srefill_r>
  402646:	2800      	cmp	r0, #0
  402648:	f43f adb5 	beq.w	4021b6 <__svfiscanf_r+0x1ba>
  40264c:	e786      	b.n	40255c <__svfiscanf_r+0x560>
  40264e:	78b3      	ldrb	r3, [r6, #2]
  402650:	f045 0502 	orr.w	r5, r5, #2
  402654:	3602      	adds	r6, #2
  402656:	e529      	b.n	4020ac <__svfiscanf_r+0xb0>
  402658:	2b00      	cmp	r3, #0
  40265a:	f045 0501 	orr.w	r5, r5, #1
  40265e:	f73f ae3a 	bgt.w	4022d6 <__svfiscanf_r+0x2da>
  402662:	e6be      	b.n	4023e2 <__svfiscanf_r+0x3e6>
  402664:	07ec      	lsls	r4, r5, #31
  402666:	d40c      	bmi.n	402682 <__svfiscanf_r+0x686>
  402668:	07a8      	lsls	r0, r5, #30
  40266a:	d50a      	bpl.n	402682 <__svfiscanf_r+0x686>
  40266c:	9805      	ldr	r0, [sp, #20]
  40266e:	9e02      	ldr	r6, [sp, #8]
  402670:	6801      	ldr	r1, [r0, #0]
  402672:	464a      	mov	r2, r9
  402674:	17d3      	asrs	r3, r2, #31
  402676:	3004      	adds	r0, #4
  402678:	e9c1 2300 	strd	r2, r3, [r1]
  40267c:	9005      	str	r0, [sp, #20]
  40267e:	4632      	mov	r2, r6
  402680:	e505      	b.n	40208e <__svfiscanf_r+0x92>
  402682:	9a05      	ldr	r2, [sp, #20]
  402684:	9e02      	ldr	r6, [sp, #8]
  402686:	6813      	ldr	r3, [r2, #0]
  402688:	f8c3 9000 	str.w	r9, [r3]
  40268c:	4613      	mov	r3, r2
  40268e:	3304      	adds	r3, #4
  402690:	9305      	str	r3, [sp, #20]
  402692:	4632      	mov	r2, r6
  402694:	e4fb      	b.n	40208e <__svfiscanf_r+0x92>
  402696:	4659      	mov	r1, fp
  402698:	4638      	mov	r0, r7
  40269a:	f001 fee5 	bl	404468 <__srefill_r>
  40269e:	2800      	cmp	r0, #0
  4026a0:	f43f ae25 	beq.w	4022ee <__svfiscanf_r+0x2f2>
  4026a4:	e75a      	b.n	40255c <__svfiscanf_r+0x560>
  4026a6:	4659      	mov	r1, fp
  4026a8:	4638      	mov	r0, r7
  4026aa:	f001 fedd 	bl	404468 <__srefill_r>
  4026ae:	2800      	cmp	r0, #0
  4026b0:	f47f af54 	bne.w	40255c <__svfiscanf_r+0x560>
  4026b4:	f8da c000 	ldr.w	ip, [sl]
  4026b8:	e59c      	b.n	4021f4 <__svfiscanf_r+0x1f8>
  4026ba:	4659      	mov	r1, fp
  4026bc:	4638      	mov	r0, r7
  4026be:	f001 fed3 	bl	404468 <__srefill_r>
  4026c2:	2800      	cmp	r0, #0
  4026c4:	f47f af4a 	bne.w	40255c <__svfiscanf_r+0x560>
  4026c8:	f8da c000 	ldr.w	ip, [sl]
  4026cc:	2602      	movs	r6, #2
  4026ce:	e596      	b.n	4021fe <__svfiscanf_r+0x202>
  4026d0:	4659      	mov	r1, fp
  4026d2:	4638      	mov	r0, r7
  4026d4:	f001 fec8 	bl	404468 <__srefill_r>
  4026d8:	2800      	cmp	r0, #0
  4026da:	f47f af3f 	bne.w	40255c <__svfiscanf_r+0x560>
  4026de:	4b8b      	ldr	r3, [pc, #556]	; (40290c <__svfiscanf_r+0x910>)
  4026e0:	9003      	str	r0, [sp, #12]
  4026e2:	f8da c000 	ldr.w	ip, [sl]
  4026e6:	9306      	str	r3, [sp, #24]
  4026e8:	2603      	movs	r6, #3
  4026ea:	e588      	b.n	4021fe <__svfiscanf_r+0x202>
  4026ec:	4659      	mov	r1, fp
  4026ee:	4638      	mov	r0, r7
  4026f0:	f001 feba 	bl	404468 <__srefill_r>
  4026f4:	2800      	cmp	r0, #0
  4026f6:	f43f ae2f 	beq.w	402358 <__svfiscanf_r+0x35c>
  4026fa:	e72f      	b.n	40255c <__svfiscanf_r+0x560>
  4026fc:	2e03      	cmp	r6, #3
  4026fe:	f040 8098 	bne.w	402832 <__svfiscanf_r+0x836>
  402702:	1e62      	subs	r2, r4, #1
  402704:	2a26      	cmp	r2, #38	; 0x26
  402706:	bf98      	it	ls
  402708:	460a      	movls	r2, r1
  40270a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
  40270e:	f04f 0100 	mov.w	r1, #0
  402712:	4618      	mov	r0, r3
  402714:	464b      	mov	r3, r9
  402716:	46b9      	mov	r9, r7
  402718:	9f03      	ldr	r7, [sp, #12]
  40271a:	9104      	str	r1, [sp, #16]
  40271c:	bf88      	it	hi
  40271e:	f1a4 0227 	subhi.w	r2, r4, #39	; 0x27
  402722:	f445 6558 	orr.w	r5, r5, #3456	; 0xd80
  402726:	bf88      	it	hi
  402728:	2427      	movhi	r4, #39	; 0x27
  40272a:	4646      	mov	r6, r8
  40272c:	f1ae 012b 	sub.w	r1, lr, #43	; 0x2b
  402730:	294d      	cmp	r1, #77	; 0x4d
  402732:	d850      	bhi.n	4027d6 <__svfiscanf_r+0x7da>
  402734:	e8df f001 	tbb	[pc, r1]
  402738:	4f784f78 	.word	0x4f784f78
  40273c:	7272664f 	.word	0x7272664f
  402740:	72727272 	.word	0x72727272
  402744:	4f4a4a72 	.word	0x4f4a4a72
  402748:	4f4f4f4f 	.word	0x4f4f4f4f
  40274c:	45454f4f 	.word	0x45454f4f
  402750:	45454545 	.word	0x45454545
  402754:	4f4f4f4f 	.word	0x4f4f4f4f
  402758:	4f4f4f4f 	.word	0x4f4f4f4f
  40275c:	4f4f4f4f 	.word	0x4f4f4f4f
  402760:	4f4f4f4f 	.word	0x4f4f4f4f
  402764:	4f4f274f 	.word	0x4f4f274f
  402768:	4f4f4f4f 	.word	0x4f4f4f4f
  40276c:	45454f4f 	.word	0x45454f4f
  402770:	45454545 	.word	0x45454545
  402774:	4f4f4f4f 	.word	0x4f4f4f4f
  402778:	4f4f4f4f 	.word	0x4f4f4f4f
  40277c:	4f4f4f4f 	.word	0x4f4f4f4f
  402780:	4f4f4f4f 	.word	0x4f4f4f4f
  402784:	274f      	.short	0x274f
  402786:	f405 61c0 	and.w	r1, r5, #1536	; 0x600
  40278a:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
  40278e:	d122      	bne.n	4027d6 <__svfiscanf_r+0x7da>
  402790:	f425 7500 	bic.w	r5, r5, #512	; 0x200
  402794:	f445 65a0 	orr.w	r5, r5, #1280	; 0x500
  402798:	2710      	movs	r7, #16
  40279a:	f886 e000 	strb.w	lr, [r6]
  40279e:	3601      	adds	r6, #1
  4027a0:	f8db 1004 	ldr.w	r1, [fp, #4]
  4027a4:	3901      	subs	r1, #1
  4027a6:	2900      	cmp	r1, #0
  4027a8:	f8cb 1004 	str.w	r1, [fp, #4]
  4027ac:	dd6e      	ble.n	40288c <__svfiscanf_r+0x890>
  4027ae:	3001      	adds	r0, #1
  4027b0:	f8cb 0000 	str.w	r0, [fp]
  4027b4:	3c01      	subs	r4, #1
  4027b6:	d00e      	beq.n	4027d6 <__svfiscanf_r+0x7da>
  4027b8:	f8db 0000 	ldr.w	r0, [fp]
  4027bc:	f890 e000 	ldrb.w	lr, [r0]
  4027c0:	e7b4      	b.n	40272c <__svfiscanf_r+0x730>
  4027c2:	2f0a      	cmp	r7, #10
  4027c4:	dd07      	ble.n	4027d6 <__svfiscanf_r+0x7da>
  4027c6:	f425 6538 	bic.w	r5, r5, #2944	; 0xb80
  4027ca:	e7e6      	b.n	40279a <__svfiscanf_r+0x79e>
  4027cc:	4950      	ldr	r1, [pc, #320]	; (402910 <__svfiscanf_r+0x914>)
  4027ce:	f931 7017 	ldrsh.w	r7, [r1, r7, lsl #1]
  4027d2:	2f08      	cmp	r7, #8
  4027d4:	dcf7      	bgt.n	4027c6 <__svfiscanf_r+0x7ca>
  4027d6:	05e8      	lsls	r0, r5, #23
  4027d8:	9703      	str	r7, [sp, #12]
  4027da:	464f      	mov	r7, r9
  4027dc:	4699      	mov	r9, r3
  4027de:	d505      	bpl.n	4027ec <__svfiscanf_r+0x7f0>
  4027e0:	4546      	cmp	r6, r8
  4027e2:	f200 80e0 	bhi.w	4029a6 <__svfiscanf_r+0x9aa>
  4027e6:	4546      	cmp	r6, r8
  4027e8:	f43f ac57 	beq.w	40209a <__svfiscanf_r+0x9e>
  4027ec:	f015 0410 	ands.w	r4, r5, #16
  4027f0:	f000 80b3 	beq.w	40295a <__svfiscanf_r+0x95e>
  4027f4:	9b04      	ldr	r3, [sp, #16]
  4027f6:	ebc8 0606 	rsb	r6, r8, r6
  4027fa:	441e      	add	r6, r3
  4027fc:	44b1      	add	r9, r6
  4027fe:	9e02      	ldr	r6, [sp, #8]
  402800:	4632      	mov	r2, r6
  402802:	e444      	b.n	40208e <__svfiscanf_r+0x92>
  402804:	0529      	lsls	r1, r5, #20
  402806:	d5c8      	bpl.n	40279a <__svfiscanf_r+0x79e>
  402808:	b917      	cbnz	r7, 402810 <__svfiscanf_r+0x814>
  40280a:	f445 7500 	orr.w	r5, r5, #512	; 0x200
  40280e:	2708      	movs	r7, #8
  402810:	0569      	lsls	r1, r5, #21
  402812:	f140 80b6 	bpl.w	402982 <__svfiscanf_r+0x986>
  402816:	f425 65b0 	bic.w	r5, r5, #1408	; 0x580
  40281a:	e7be      	b.n	40279a <__svfiscanf_r+0x79e>
  40281c:	493c      	ldr	r1, [pc, #240]	; (402910 <__svfiscanf_r+0x914>)
  40281e:	f425 6538 	bic.w	r5, r5, #2944	; 0xb80
  402822:	f931 7017 	ldrsh.w	r7, [r1, r7, lsl #1]
  402826:	e7b8      	b.n	40279a <__svfiscanf_r+0x79e>
  402828:	0629      	lsls	r1, r5, #24
  40282a:	d5d4      	bpl.n	4027d6 <__svfiscanf_r+0x7da>
  40282c:	f025 0580 	bic.w	r5, r5, #128	; 0x80
  402830:	e7b3      	b.n	40279a <__svfiscanf_r+0x79e>
  402832:	2c00      	cmp	r4, #0
  402834:	bf08      	it	eq
  402836:	f04f 34ff 	moveq.w	r4, #4294967295
  40283a:	f015 0201 	ands.w	r2, r5, #1
  40283e:	d169      	bne.n	402914 <__svfiscanf_r+0x918>
  402840:	06e9      	lsls	r1, r5, #27
  402842:	d52e      	bpl.n	4028a2 <__svfiscanf_r+0x8a6>
  402844:	4615      	mov	r5, r2
  402846:	4661      	mov	r1, ip
  402848:	e002      	b.n	402850 <__svfiscanf_r+0x854>
  40284a:	781a      	ldrb	r2, [r3, #0]
  40284c:	440a      	add	r2, r1
  40284e:	7850      	ldrb	r0, [r2, #1]
  402850:	0706      	lsls	r6, r0, #28
  402852:	f103 0301 	add.w	r3, r3, #1
  402856:	f53f ad6f 	bmi.w	402338 <__svfiscanf_r+0x33c>
  40285a:	f8db 2004 	ldr.w	r2, [fp, #4]
  40285e:	f8cb 3000 	str.w	r3, [fp]
  402862:	3501      	adds	r5, #1
  402864:	3a01      	subs	r2, #1
  402866:	42ac      	cmp	r4, r5
  402868:	f8cb 2004 	str.w	r2, [fp, #4]
  40286c:	f43f ad64 	beq.w	402338 <__svfiscanf_r+0x33c>
  402870:	2a00      	cmp	r2, #0
  402872:	dcea      	bgt.n	40284a <__svfiscanf_r+0x84e>
  402874:	4659      	mov	r1, fp
  402876:	4638      	mov	r0, r7
  402878:	f001 fdf6 	bl	404468 <__srefill_r>
  40287c:	2800      	cmp	r0, #0
  40287e:	f47f ad5b 	bne.w	402338 <__svfiscanf_r+0x33c>
  402882:	f8da 1000 	ldr.w	r1, [sl]
  402886:	f8db 3000 	ldr.w	r3, [fp]
  40288a:	e7de      	b.n	40284a <__svfiscanf_r+0x84e>
  40288c:	4659      	mov	r1, fp
  40288e:	4648      	mov	r0, r9
  402890:	9208      	str	r2, [sp, #32]
  402892:	9303      	str	r3, [sp, #12]
  402894:	f001 fde8 	bl	404468 <__srefill_r>
  402898:	9b03      	ldr	r3, [sp, #12]
  40289a:	9a08      	ldr	r2, [sp, #32]
  40289c:	2800      	cmp	r0, #0
  40289e:	d089      	beq.n	4027b4 <__svfiscanf_r+0x7b8>
  4028a0:	e799      	b.n	4027d6 <__svfiscanf_r+0x7da>
  4028a2:	9905      	ldr	r1, [sp, #20]
  4028a4:	680e      	ldr	r6, [r1, #0]
  4028a6:	1d0d      	adds	r5, r1, #4
  4028a8:	4434      	add	r4, r6
  4028aa:	46b0      	mov	r8, r6
  4028ac:	e006      	b.n	4028bc <__svfiscanf_r+0x8c0>
  4028ae:	f8db 3000 	ldr.w	r3, [fp]
  4028b2:	f8da 2000 	ldr.w	r2, [sl]
  4028b6:	7819      	ldrb	r1, [r3, #0]
  4028b8:	440a      	add	r2, r1
  4028ba:	7850      	ldrb	r0, [r2, #1]
  4028bc:	0700      	lsls	r0, r0, #28
  4028be:	f103 0101 	add.w	r1, r3, #1
  4028c2:	d415      	bmi.n	4028f0 <__svfiscanf_r+0x8f4>
  4028c4:	f8db 2004 	ldr.w	r2, [fp, #4]
  4028c8:	f8cb 1000 	str.w	r1, [fp]
  4028cc:	3a01      	subs	r2, #1
  4028ce:	f8cb 2004 	str.w	r2, [fp, #4]
  4028d2:	781b      	ldrb	r3, [r3, #0]
  4028d4:	f808 3b01 	strb.w	r3, [r8], #1
  4028d8:	4544      	cmp	r4, r8
  4028da:	d009      	beq.n	4028f0 <__svfiscanf_r+0x8f4>
  4028dc:	f8db 3004 	ldr.w	r3, [fp, #4]
  4028e0:	2b00      	cmp	r3, #0
  4028e2:	dce4      	bgt.n	4028ae <__svfiscanf_r+0x8b2>
  4028e4:	4659      	mov	r1, fp
  4028e6:	4638      	mov	r0, r7
  4028e8:	f001 fdbe 	bl	404468 <__srefill_r>
  4028ec:	2800      	cmp	r0, #0
  4028ee:	d0de      	beq.n	4028ae <__svfiscanf_r+0x8b2>
  4028f0:	ebc6 0608 	rsb	r6, r6, r8
  4028f4:	9a07      	ldr	r2, [sp, #28]
  4028f6:	9505      	str	r5, [sp, #20]
  4028f8:	44b1      	add	r9, r6
  4028fa:	9e02      	ldr	r6, [sp, #8]
  4028fc:	3201      	adds	r2, #1
  4028fe:	2300      	movs	r3, #0
  402900:	9207      	str	r2, [sp, #28]
  402902:	f888 3000 	strb.w	r3, [r8]
  402906:	4632      	mov	r2, r6
  402908:	f7ff bbc1 	b.w	40208e <__svfiscanf_r+0x92>
  40290c:	0040469d 	.word	0x0040469d
  402910:	004056e4 	.word	0x004056e4
  402914:	ab0c      	add	r3, sp, #48	; 0x30
  402916:	4618      	mov	r0, r3
  402918:	2208      	movs	r2, #8
  40291a:	9308      	str	r3, [sp, #32]
  40291c:	f7fe fa56 	bl	400dcc <memset>
  402920:	f015 0310 	ands.w	r3, r5, #16
  402924:	9304      	str	r3, [sp, #16]
  402926:	d13b      	bne.n	4029a0 <__svfiscanf_r+0x9a4>
  402928:	9a05      	ldr	r2, [sp, #20]
  40292a:	4613      	mov	r3, r2
  40292c:	3304      	adds	r3, #4
  40292e:	f8d2 8000 	ldr.w	r8, [r2]
  402932:	9305      	str	r3, [sp, #20]
  402934:	2600      	movs	r6, #0
  402936:	f8db 3000 	ldr.w	r3, [fp]
  40293a:	f8da 2000 	ldr.w	r2, [sl]
  40293e:	781b      	ldrb	r3, [r3, #0]
  402940:	4413      	add	r3, r2
  402942:	785b      	ldrb	r3, [r3, #1]
  402944:	0718      	lsls	r0, r3, #28
  402946:	d401      	bmi.n	40294c <__svfiscanf_r+0x950>
  402948:	2c00      	cmp	r4, #0
  40294a:	d149      	bne.n	4029e0 <__svfiscanf_r+0x9e4>
  40294c:	9b04      	ldr	r3, [sp, #16]
  40294e:	2b00      	cmp	r3, #0
  402950:	f47f adcd 	bne.w	4024ee <__svfiscanf_r+0x4f2>
  402954:	f8c8 3000 	str.w	r3, [r8]
  402958:	e5c6      	b.n	4024e8 <__svfiscanf_r+0x4ec>
  40295a:	4622      	mov	r2, r4
  40295c:	4641      	mov	r1, r8
  40295e:	7034      	strb	r4, [r6, #0]
  402960:	9b03      	ldr	r3, [sp, #12]
  402962:	9c06      	ldr	r4, [sp, #24]
  402964:	4638      	mov	r0, r7
  402966:	47a0      	blx	r4
  402968:	06a9      	lsls	r1, r5, #26
  40296a:	d413      	bmi.n	402994 <__svfiscanf_r+0x998>
  40296c:	076a      	lsls	r2, r5, #29
  40296e:	d522      	bpl.n	4029b6 <__svfiscanf_r+0x9ba>
  402970:	9a05      	ldr	r2, [sp, #20]
  402972:	6813      	ldr	r3, [r2, #0]
  402974:	3204      	adds	r2, #4
  402976:	9205      	str	r2, [sp, #20]
  402978:	8018      	strh	r0, [r3, #0]
  40297a:	9b07      	ldr	r3, [sp, #28]
  40297c:	3301      	adds	r3, #1
  40297e:	9307      	str	r3, [sp, #28]
  402980:	e738      	b.n	4027f4 <__svfiscanf_r+0x7f8>
  402982:	f425 7560 	bic.w	r5, r5, #896	; 0x380
  402986:	b10a      	cbz	r2, 40298c <__svfiscanf_r+0x990>
  402988:	3a01      	subs	r2, #1
  40298a:	3401      	adds	r4, #1
  40298c:	9904      	ldr	r1, [sp, #16]
  40298e:	3101      	adds	r1, #1
  402990:	9104      	str	r1, [sp, #16]
  402992:	e705      	b.n	4027a0 <__svfiscanf_r+0x7a4>
  402994:	9a05      	ldr	r2, [sp, #20]
  402996:	6813      	ldr	r3, [r2, #0]
  402998:	3204      	adds	r2, #4
  40299a:	9205      	str	r2, [sp, #20]
  40299c:	6018      	str	r0, [r3, #0]
  40299e:	e7ec      	b.n	40297a <__svfiscanf_r+0x97e>
  4029a0:	f10d 082c 	add.w	r8, sp, #44	; 0x2c
  4029a4:	e7c6      	b.n	402934 <__svfiscanf_r+0x938>
  4029a6:	f816 1c01 	ldrb.w	r1, [r6, #-1]
  4029aa:	465a      	mov	r2, fp
  4029ac:	4638      	mov	r0, r7
  4029ae:	f002 f99b 	bl	404ce8 <_ungetc_r>
  4029b2:	3e01      	subs	r6, #1
  4029b4:	e717      	b.n	4027e6 <__svfiscanf_r+0x7ea>
  4029b6:	f015 0201 	ands.w	r2, r5, #1
  4029ba:	d1eb      	bne.n	402994 <__svfiscanf_r+0x998>
  4029bc:	07ab      	lsls	r3, r5, #30
  4029be:	d5e9      	bpl.n	402994 <__svfiscanf_r+0x998>
  4029c0:	4b30      	ldr	r3, [pc, #192]	; (402a84 <__svfiscanf_r+0xa88>)
  4029c2:	9906      	ldr	r1, [sp, #24]
  4029c4:	4299      	cmp	r1, r3
  4029c6:	4638      	mov	r0, r7
  4029c8:	9b03      	ldr	r3, [sp, #12]
  4029ca:	4641      	mov	r1, r8
  4029cc:	d053      	beq.n	402a76 <__svfiscanf_r+0xa7a>
  4029ce:	f001 fef9 	bl	4047c4 <_strtoll_r>
  4029d2:	9a05      	ldr	r2, [sp, #20]
  4029d4:	6813      	ldr	r3, [r2, #0]
  4029d6:	3204      	adds	r2, #4
  4029d8:	9205      	str	r2, [sp, #20]
  4029da:	e9c3 0100 	strd	r0, r1, [r3]
  4029de:	e7cc      	b.n	40297a <__svfiscanf_r+0x97e>
  4029e0:	f000 fe74 	bl	4036cc <__locale_mb_cur_max>
  4029e4:	4286      	cmp	r6, r0
  4029e6:	f43f adb9 	beq.w	40255c <__svfiscanf_r+0x560>
  4029ea:	e89b 000c 	ldmia.w	fp, {r2, r3}
  4029ee:	f812 0b01 	ldrb.w	r0, [r2], #1
  4029f2:	f8cb 2000 	str.w	r2, [fp]
  4029f6:	9a08      	ldr	r2, [sp, #32]
  4029f8:	9200      	str	r2, [sp, #0]
  4029fa:	aa0e      	add	r2, sp, #56	; 0x38
  4029fc:	1c75      	adds	r5, r6, #1
  4029fe:	3b01      	subs	r3, #1
  402a00:	5590      	strb	r0, [r2, r6]
  402a02:	f8cb 3004 	str.w	r3, [fp, #4]
  402a06:	4641      	mov	r1, r8
  402a08:	462b      	mov	r3, r5
  402a0a:	4638      	mov	r0, r7
  402a0c:	f001 f998 	bl	403d40 <_mbrtowc_r>
  402a10:	1c46      	adds	r6, r0, #1
  402a12:	f43f ada3 	beq.w	40255c <__svfiscanf_r+0x560>
  402a16:	b188      	cbz	r0, 402a3c <__svfiscanf_r+0xa40>
  402a18:	3002      	adds	r0, #2
  402a1a:	bf08      	it	eq
  402a1c:	462e      	moveq	r6, r5
  402a1e:	d12d      	bne.n	402a7c <__svfiscanf_r+0xa80>
  402a20:	f8db 3004 	ldr.w	r3, [fp, #4]
  402a24:	2b00      	cmp	r3, #0
  402a26:	dc86      	bgt.n	402936 <__svfiscanf_r+0x93a>
  402a28:	4659      	mov	r1, fp
  402a2a:	4638      	mov	r0, r7
  402a2c:	f001 fd1c 	bl	404468 <__srefill_r>
  402a30:	2800      	cmp	r0, #0
  402a32:	d080      	beq.n	402936 <__svfiscanf_r+0x93a>
  402a34:	2e00      	cmp	r6, #0
  402a36:	f47f ad91 	bne.w	40255c <__svfiscanf_r+0x560>
  402a3a:	e787      	b.n	40294c <__svfiscanf_r+0x950>
  402a3c:	f8c8 0000 	str.w	r0, [r8]
  402a40:	f000 fe32 	bl	4036a8 <iswspace>
  402a44:	b168      	cbz	r0, 402a62 <__svfiscanf_r+0xa66>
  402a46:	2d00      	cmp	r5, #0
  402a48:	d080      	beq.n	40294c <__svfiscanf_r+0x950>
  402a4a:	ab0e      	add	r3, sp, #56	; 0x38
  402a4c:	195c      	adds	r4, r3, r5
  402a4e:	3d01      	subs	r5, #1
  402a50:	465a      	mov	r2, fp
  402a52:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
  402a56:	4638      	mov	r0, r7
  402a58:	f002 f946 	bl	404ce8 <_ungetc_r>
  402a5c:	2d00      	cmp	r5, #0
  402a5e:	d1f6      	bne.n	402a4e <__svfiscanf_r+0xa52>
  402a60:	e774      	b.n	40294c <__svfiscanf_r+0x950>
  402a62:	9b04      	ldr	r3, [sp, #16]
  402a64:	44a9      	add	r9, r5
  402a66:	3c01      	subs	r4, #1
  402a68:	b91b      	cbnz	r3, 402a72 <__svfiscanf_r+0xa76>
  402a6a:	f108 0804 	add.w	r8, r8, #4
  402a6e:	461e      	mov	r6, r3
  402a70:	e7d6      	b.n	402a20 <__svfiscanf_r+0xa24>
  402a72:	4606      	mov	r6, r0
  402a74:	e7d4      	b.n	402a20 <__svfiscanf_r+0xa24>
  402a76:	f002 f817 	bl	404aa8 <_strtoull_r>
  402a7a:	e7aa      	b.n	4029d2 <__svfiscanf_r+0x9d6>
  402a7c:	f8d8 0000 	ldr.w	r0, [r8]
  402a80:	e7de      	b.n	402a40 <__svfiscanf_r+0xa44>
  402a82:	bf00      	nop
  402a84:	00404975 	.word	0x00404975

00402a88 <__swsetup_r>:
  402a88:	b538      	push	{r3, r4, r5, lr}
  402a8a:	4b30      	ldr	r3, [pc, #192]	; (402b4c <__swsetup_r+0xc4>)
  402a8c:	681b      	ldr	r3, [r3, #0]
  402a8e:	4605      	mov	r5, r0
  402a90:	460c      	mov	r4, r1
  402a92:	b113      	cbz	r3, 402a9a <__swsetup_r+0x12>
  402a94:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  402a96:	2a00      	cmp	r2, #0
  402a98:	d038      	beq.n	402b0c <__swsetup_r+0x84>
  402a9a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402a9e:	b293      	uxth	r3, r2
  402aa0:	0718      	lsls	r0, r3, #28
  402aa2:	d50c      	bpl.n	402abe <__swsetup_r+0x36>
  402aa4:	6920      	ldr	r0, [r4, #16]
  402aa6:	b1a8      	cbz	r0, 402ad4 <__swsetup_r+0x4c>
  402aa8:	f013 0201 	ands.w	r2, r3, #1
  402aac:	d01e      	beq.n	402aec <__swsetup_r+0x64>
  402aae:	6963      	ldr	r3, [r4, #20]
  402ab0:	2200      	movs	r2, #0
  402ab2:	425b      	negs	r3, r3
  402ab4:	61a3      	str	r3, [r4, #24]
  402ab6:	60a2      	str	r2, [r4, #8]
  402ab8:	b1f0      	cbz	r0, 402af8 <__swsetup_r+0x70>
  402aba:	2000      	movs	r0, #0
  402abc:	bd38      	pop	{r3, r4, r5, pc}
  402abe:	06d9      	lsls	r1, r3, #27
  402ac0:	d53c      	bpl.n	402b3c <__swsetup_r+0xb4>
  402ac2:	0758      	lsls	r0, r3, #29
  402ac4:	d426      	bmi.n	402b14 <__swsetup_r+0x8c>
  402ac6:	6920      	ldr	r0, [r4, #16]
  402ac8:	f042 0308 	orr.w	r3, r2, #8
  402acc:	81a3      	strh	r3, [r4, #12]
  402ace:	b29b      	uxth	r3, r3
  402ad0:	2800      	cmp	r0, #0
  402ad2:	d1e9      	bne.n	402aa8 <__swsetup_r+0x20>
  402ad4:	f403 7220 	and.w	r2, r3, #640	; 0x280
  402ad8:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  402adc:	d0e4      	beq.n	402aa8 <__swsetup_r+0x20>
  402ade:	4628      	mov	r0, r5
  402ae0:	4621      	mov	r1, r4
  402ae2:	f000 fe29 	bl	403738 <__smakebuf_r>
  402ae6:	89a3      	ldrh	r3, [r4, #12]
  402ae8:	6920      	ldr	r0, [r4, #16]
  402aea:	e7dd      	b.n	402aa8 <__swsetup_r+0x20>
  402aec:	0799      	lsls	r1, r3, #30
  402aee:	bf58      	it	pl
  402af0:	6962      	ldrpl	r2, [r4, #20]
  402af2:	60a2      	str	r2, [r4, #8]
  402af4:	2800      	cmp	r0, #0
  402af6:	d1e0      	bne.n	402aba <__swsetup_r+0x32>
  402af8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402afc:	061a      	lsls	r2, r3, #24
  402afe:	d5dd      	bpl.n	402abc <__swsetup_r+0x34>
  402b00:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402b04:	81a3      	strh	r3, [r4, #12]
  402b06:	f04f 30ff 	mov.w	r0, #4294967295
  402b0a:	bd38      	pop	{r3, r4, r5, pc}
  402b0c:	4618      	mov	r0, r3
  402b0e:	f000 f979 	bl	402e04 <__sinit>
  402b12:	e7c2      	b.n	402a9a <__swsetup_r+0x12>
  402b14:	6b21      	ldr	r1, [r4, #48]	; 0x30
  402b16:	b151      	cbz	r1, 402b2e <__swsetup_r+0xa6>
  402b18:	f104 0340 	add.w	r3, r4, #64	; 0x40
  402b1c:	4299      	cmp	r1, r3
  402b1e:	d004      	beq.n	402b2a <__swsetup_r+0xa2>
  402b20:	4628      	mov	r0, r5
  402b22:	f000 fb07 	bl	403134 <_free_r>
  402b26:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402b2a:	2300      	movs	r3, #0
  402b2c:	6323      	str	r3, [r4, #48]	; 0x30
  402b2e:	2300      	movs	r3, #0
  402b30:	6920      	ldr	r0, [r4, #16]
  402b32:	6063      	str	r3, [r4, #4]
  402b34:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  402b38:	6020      	str	r0, [r4, #0]
  402b3a:	e7c5      	b.n	402ac8 <__swsetup_r+0x40>
  402b3c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  402b40:	2309      	movs	r3, #9
  402b42:	602b      	str	r3, [r5, #0]
  402b44:	f04f 30ff 	mov.w	r0, #4294967295
  402b48:	81a2      	strh	r2, [r4, #12]
  402b4a:	bd38      	pop	{r3, r4, r5, pc}
  402b4c:	20000430 	.word	0x20000430

00402b50 <register_fini>:
  402b50:	4b02      	ldr	r3, [pc, #8]	; (402b5c <register_fini+0xc>)
  402b52:	b113      	cbz	r3, 402b5a <register_fini+0xa>
  402b54:	4802      	ldr	r0, [pc, #8]	; (402b60 <register_fini+0x10>)
  402b56:	f000 b805 	b.w	402b64 <atexit>
  402b5a:	4770      	bx	lr
  402b5c:	00000000 	.word	0x00000000
  402b60:	00402e19 	.word	0x00402e19

00402b64 <atexit>:
  402b64:	2300      	movs	r3, #0
  402b66:	4601      	mov	r1, r0
  402b68:	461a      	mov	r2, r3
  402b6a:	4618      	mov	r0, r3
  402b6c:	f002 b9d0 	b.w	404f10 <__register_exitproc>

00402b70 <__sflush_r>:
  402b70:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  402b74:	b29a      	uxth	r2, r3
  402b76:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402b7a:	460d      	mov	r5, r1
  402b7c:	0711      	lsls	r1, r2, #28
  402b7e:	4680      	mov	r8, r0
  402b80:	d43c      	bmi.n	402bfc <__sflush_r+0x8c>
  402b82:	686a      	ldr	r2, [r5, #4]
  402b84:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  402b88:	2a00      	cmp	r2, #0
  402b8a:	81ab      	strh	r3, [r5, #12]
  402b8c:	dd73      	ble.n	402c76 <__sflush_r+0x106>
  402b8e:	6aac      	ldr	r4, [r5, #40]	; 0x28
  402b90:	2c00      	cmp	r4, #0
  402b92:	d04b      	beq.n	402c2c <__sflush_r+0xbc>
  402b94:	b29b      	uxth	r3, r3
  402b96:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
  402b9a:	2100      	movs	r1, #0
  402b9c:	b292      	uxth	r2, r2
  402b9e:	f8d8 6000 	ldr.w	r6, [r8]
  402ba2:	f8c8 1000 	str.w	r1, [r8]
  402ba6:	2a00      	cmp	r2, #0
  402ba8:	d069      	beq.n	402c7e <__sflush_r+0x10e>
  402baa:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  402bac:	075f      	lsls	r7, r3, #29
  402bae:	d505      	bpl.n	402bbc <__sflush_r+0x4c>
  402bb0:	6869      	ldr	r1, [r5, #4]
  402bb2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  402bb4:	1a52      	subs	r2, r2, r1
  402bb6:	b10b      	cbz	r3, 402bbc <__sflush_r+0x4c>
  402bb8:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  402bba:	1ad2      	subs	r2, r2, r3
  402bbc:	2300      	movs	r3, #0
  402bbe:	69e9      	ldr	r1, [r5, #28]
  402bc0:	4640      	mov	r0, r8
  402bc2:	47a0      	blx	r4
  402bc4:	1c44      	adds	r4, r0, #1
  402bc6:	d03c      	beq.n	402c42 <__sflush_r+0xd2>
  402bc8:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  402bcc:	692a      	ldr	r2, [r5, #16]
  402bce:	602a      	str	r2, [r5, #0]
  402bd0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  402bd4:	2200      	movs	r2, #0
  402bd6:	81ab      	strh	r3, [r5, #12]
  402bd8:	04db      	lsls	r3, r3, #19
  402bda:	606a      	str	r2, [r5, #4]
  402bdc:	d449      	bmi.n	402c72 <__sflush_r+0x102>
  402bde:	6b29      	ldr	r1, [r5, #48]	; 0x30
  402be0:	f8c8 6000 	str.w	r6, [r8]
  402be4:	b311      	cbz	r1, 402c2c <__sflush_r+0xbc>
  402be6:	f105 0340 	add.w	r3, r5, #64	; 0x40
  402bea:	4299      	cmp	r1, r3
  402bec:	d002      	beq.n	402bf4 <__sflush_r+0x84>
  402bee:	4640      	mov	r0, r8
  402bf0:	f000 faa0 	bl	403134 <_free_r>
  402bf4:	2000      	movs	r0, #0
  402bf6:	6328      	str	r0, [r5, #48]	; 0x30
  402bf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402bfc:	692e      	ldr	r6, [r5, #16]
  402bfe:	b1ae      	cbz	r6, 402c2c <__sflush_r+0xbc>
  402c00:	682c      	ldr	r4, [r5, #0]
  402c02:	602e      	str	r6, [r5, #0]
  402c04:	0790      	lsls	r0, r2, #30
  402c06:	bf0c      	ite	eq
  402c08:	696b      	ldreq	r3, [r5, #20]
  402c0a:	2300      	movne	r3, #0
  402c0c:	1ba4      	subs	r4, r4, r6
  402c0e:	60ab      	str	r3, [r5, #8]
  402c10:	e00a      	b.n	402c28 <__sflush_r+0xb8>
  402c12:	4623      	mov	r3, r4
  402c14:	4632      	mov	r2, r6
  402c16:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  402c18:	69e9      	ldr	r1, [r5, #28]
  402c1a:	4640      	mov	r0, r8
  402c1c:	47b8      	blx	r7
  402c1e:	2800      	cmp	r0, #0
  402c20:	eba4 0400 	sub.w	r4, r4, r0
  402c24:	4406      	add	r6, r0
  402c26:	dd04      	ble.n	402c32 <__sflush_r+0xc2>
  402c28:	2c00      	cmp	r4, #0
  402c2a:	dcf2      	bgt.n	402c12 <__sflush_r+0xa2>
  402c2c:	2000      	movs	r0, #0
  402c2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402c32:	89ab      	ldrh	r3, [r5, #12]
  402c34:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402c38:	81ab      	strh	r3, [r5, #12]
  402c3a:	f04f 30ff 	mov.w	r0, #4294967295
  402c3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402c42:	f8d8 2000 	ldr.w	r2, [r8]
  402c46:	2a1d      	cmp	r2, #29
  402c48:	d8f3      	bhi.n	402c32 <__sflush_r+0xc2>
  402c4a:	4b1a      	ldr	r3, [pc, #104]	; (402cb4 <__sflush_r+0x144>)
  402c4c:	40d3      	lsrs	r3, r2
  402c4e:	f003 0301 	and.w	r3, r3, #1
  402c52:	f083 0401 	eor.w	r4, r3, #1
  402c56:	2b00      	cmp	r3, #0
  402c58:	d0eb      	beq.n	402c32 <__sflush_r+0xc2>
  402c5a:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  402c5e:	6929      	ldr	r1, [r5, #16]
  402c60:	6029      	str	r1, [r5, #0]
  402c62:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  402c66:	04d9      	lsls	r1, r3, #19
  402c68:	606c      	str	r4, [r5, #4]
  402c6a:	81ab      	strh	r3, [r5, #12]
  402c6c:	d5b7      	bpl.n	402bde <__sflush_r+0x6e>
  402c6e:	2a00      	cmp	r2, #0
  402c70:	d1b5      	bne.n	402bde <__sflush_r+0x6e>
  402c72:	6528      	str	r0, [r5, #80]	; 0x50
  402c74:	e7b3      	b.n	402bde <__sflush_r+0x6e>
  402c76:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  402c78:	2a00      	cmp	r2, #0
  402c7a:	dc88      	bgt.n	402b8e <__sflush_r+0x1e>
  402c7c:	e7d6      	b.n	402c2c <__sflush_r+0xbc>
  402c7e:	2301      	movs	r3, #1
  402c80:	69e9      	ldr	r1, [r5, #28]
  402c82:	4640      	mov	r0, r8
  402c84:	47a0      	blx	r4
  402c86:	1c43      	adds	r3, r0, #1
  402c88:	4602      	mov	r2, r0
  402c8a:	d002      	beq.n	402c92 <__sflush_r+0x122>
  402c8c:	89ab      	ldrh	r3, [r5, #12]
  402c8e:	6aac      	ldr	r4, [r5, #40]	; 0x28
  402c90:	e78c      	b.n	402bac <__sflush_r+0x3c>
  402c92:	f8d8 3000 	ldr.w	r3, [r8]
  402c96:	2b00      	cmp	r3, #0
  402c98:	d0f8      	beq.n	402c8c <__sflush_r+0x11c>
  402c9a:	2b1d      	cmp	r3, #29
  402c9c:	d001      	beq.n	402ca2 <__sflush_r+0x132>
  402c9e:	2b16      	cmp	r3, #22
  402ca0:	d102      	bne.n	402ca8 <__sflush_r+0x138>
  402ca2:	f8c8 6000 	str.w	r6, [r8]
  402ca6:	e7c1      	b.n	402c2c <__sflush_r+0xbc>
  402ca8:	89ab      	ldrh	r3, [r5, #12]
  402caa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402cae:	81ab      	strh	r3, [r5, #12]
  402cb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402cb4:	20400001 	.word	0x20400001

00402cb8 <_fflush_r>:
  402cb8:	b510      	push	{r4, lr}
  402cba:	4604      	mov	r4, r0
  402cbc:	b082      	sub	sp, #8
  402cbe:	b108      	cbz	r0, 402cc4 <_fflush_r+0xc>
  402cc0:	6b83      	ldr	r3, [r0, #56]	; 0x38
  402cc2:	b153      	cbz	r3, 402cda <_fflush_r+0x22>
  402cc4:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
  402cc8:	b908      	cbnz	r0, 402cce <_fflush_r+0x16>
  402cca:	b002      	add	sp, #8
  402ccc:	bd10      	pop	{r4, pc}
  402cce:	4620      	mov	r0, r4
  402cd0:	b002      	add	sp, #8
  402cd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  402cd6:	f7ff bf4b 	b.w	402b70 <__sflush_r>
  402cda:	9101      	str	r1, [sp, #4]
  402cdc:	f000 f892 	bl	402e04 <__sinit>
  402ce0:	9901      	ldr	r1, [sp, #4]
  402ce2:	e7ef      	b.n	402cc4 <_fflush_r+0xc>

00402ce4 <fflush>:
  402ce4:	b120      	cbz	r0, 402cf0 <fflush+0xc>
  402ce6:	4b05      	ldr	r3, [pc, #20]	; (402cfc <fflush+0x18>)
  402ce8:	4601      	mov	r1, r0
  402cea:	6818      	ldr	r0, [r3, #0]
  402cec:	f7ff bfe4 	b.w	402cb8 <_fflush_r>
  402cf0:	4b03      	ldr	r3, [pc, #12]	; (402d00 <fflush+0x1c>)
  402cf2:	4904      	ldr	r1, [pc, #16]	; (402d04 <fflush+0x20>)
  402cf4:	6818      	ldr	r0, [r3, #0]
  402cf6:	f000 bcad 	b.w	403654 <_fwalk_reent>
  402cfa:	bf00      	nop
  402cfc:	20000430 	.word	0x20000430
  402d00:	0040568c 	.word	0x0040568c
  402d04:	00402cb9 	.word	0x00402cb9

00402d08 <_cleanup_r>:
  402d08:	4901      	ldr	r1, [pc, #4]	; (402d10 <_cleanup_r+0x8>)
  402d0a:	f000 bca3 	b.w	403654 <_fwalk_reent>
  402d0e:	bf00      	nop
  402d10:	00404fd9 	.word	0x00404fd9

00402d14 <__sinit.part.1>:
  402d14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402d18:	4b35      	ldr	r3, [pc, #212]	; (402df0 <__sinit.part.1+0xdc>)
  402d1a:	6845      	ldr	r5, [r0, #4]
  402d1c:	63c3      	str	r3, [r0, #60]	; 0x3c
  402d1e:	2400      	movs	r4, #0
  402d20:	4607      	mov	r7, r0
  402d22:	f500 723b 	add.w	r2, r0, #748	; 0x2ec
  402d26:	2304      	movs	r3, #4
  402d28:	2103      	movs	r1, #3
  402d2a:	f8c0 12e4 	str.w	r1, [r0, #740]	; 0x2e4
  402d2e:	f8c0 22e8 	str.w	r2, [r0, #744]	; 0x2e8
  402d32:	f8c0 42e0 	str.w	r4, [r0, #736]	; 0x2e0
  402d36:	b083      	sub	sp, #12
  402d38:	602c      	str	r4, [r5, #0]
  402d3a:	606c      	str	r4, [r5, #4]
  402d3c:	60ac      	str	r4, [r5, #8]
  402d3e:	666c      	str	r4, [r5, #100]	; 0x64
  402d40:	81ec      	strh	r4, [r5, #14]
  402d42:	612c      	str	r4, [r5, #16]
  402d44:	616c      	str	r4, [r5, #20]
  402d46:	61ac      	str	r4, [r5, #24]
  402d48:	81ab      	strh	r3, [r5, #12]
  402d4a:	4621      	mov	r1, r4
  402d4c:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  402d50:	2208      	movs	r2, #8
  402d52:	f7fe f83b 	bl	400dcc <memset>
  402d56:	68be      	ldr	r6, [r7, #8]
  402d58:	f8df b098 	ldr.w	fp, [pc, #152]	; 402df4 <__sinit.part.1+0xe0>
  402d5c:	f8df a098 	ldr.w	sl, [pc, #152]	; 402df8 <__sinit.part.1+0xe4>
  402d60:	f8df 9098 	ldr.w	r9, [pc, #152]	; 402dfc <__sinit.part.1+0xe8>
  402d64:	f8df 8098 	ldr.w	r8, [pc, #152]	; 402e00 <__sinit.part.1+0xec>
  402d68:	f8c5 b020 	str.w	fp, [r5, #32]
  402d6c:	2301      	movs	r3, #1
  402d6e:	2209      	movs	r2, #9
  402d70:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  402d74:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  402d78:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  402d7c:	61ed      	str	r5, [r5, #28]
  402d7e:	4621      	mov	r1, r4
  402d80:	81f3      	strh	r3, [r6, #14]
  402d82:	81b2      	strh	r2, [r6, #12]
  402d84:	f106 005c 	add.w	r0, r6, #92	; 0x5c
  402d88:	6034      	str	r4, [r6, #0]
  402d8a:	6074      	str	r4, [r6, #4]
  402d8c:	60b4      	str	r4, [r6, #8]
  402d8e:	6674      	str	r4, [r6, #100]	; 0x64
  402d90:	6134      	str	r4, [r6, #16]
  402d92:	6174      	str	r4, [r6, #20]
  402d94:	61b4      	str	r4, [r6, #24]
  402d96:	2208      	movs	r2, #8
  402d98:	9301      	str	r3, [sp, #4]
  402d9a:	f7fe f817 	bl	400dcc <memset>
  402d9e:	68fd      	ldr	r5, [r7, #12]
  402da0:	61f6      	str	r6, [r6, #28]
  402da2:	2012      	movs	r0, #18
  402da4:	2202      	movs	r2, #2
  402da6:	f8c6 b020 	str.w	fp, [r6, #32]
  402daa:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
  402dae:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
  402db2:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
  402db6:	4621      	mov	r1, r4
  402db8:	81a8      	strh	r0, [r5, #12]
  402dba:	81ea      	strh	r2, [r5, #14]
  402dbc:	602c      	str	r4, [r5, #0]
  402dbe:	606c      	str	r4, [r5, #4]
  402dc0:	60ac      	str	r4, [r5, #8]
  402dc2:	666c      	str	r4, [r5, #100]	; 0x64
  402dc4:	612c      	str	r4, [r5, #16]
  402dc6:	616c      	str	r4, [r5, #20]
  402dc8:	61ac      	str	r4, [r5, #24]
  402dca:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  402dce:	2208      	movs	r2, #8
  402dd0:	f7fd fffc 	bl	400dcc <memset>
  402dd4:	9b01      	ldr	r3, [sp, #4]
  402dd6:	61ed      	str	r5, [r5, #28]
  402dd8:	f8c5 b020 	str.w	fp, [r5, #32]
  402ddc:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  402de0:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  402de4:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  402de8:	63bb      	str	r3, [r7, #56]	; 0x38
  402dea:	b003      	add	sp, #12
  402dec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402df0:	00402d09 	.word	0x00402d09
  402df4:	00404615 	.word	0x00404615
  402df8:	00404639 	.word	0x00404639
  402dfc:	00404675 	.word	0x00404675
  402e00:	00404695 	.word	0x00404695

00402e04 <__sinit>:
  402e04:	6b83      	ldr	r3, [r0, #56]	; 0x38
  402e06:	b103      	cbz	r3, 402e0a <__sinit+0x6>
  402e08:	4770      	bx	lr
  402e0a:	f7ff bf83 	b.w	402d14 <__sinit.part.1>
  402e0e:	bf00      	nop

00402e10 <__sfp_lock_acquire>:
  402e10:	4770      	bx	lr
  402e12:	bf00      	nop

00402e14 <__sfp_lock_release>:
  402e14:	4770      	bx	lr
  402e16:	bf00      	nop

00402e18 <__libc_fini_array>:
  402e18:	b538      	push	{r3, r4, r5, lr}
  402e1a:	4d07      	ldr	r5, [pc, #28]	; (402e38 <__libc_fini_array+0x20>)
  402e1c:	4c07      	ldr	r4, [pc, #28]	; (402e3c <__libc_fini_array+0x24>)
  402e1e:	1b2c      	subs	r4, r5, r4
  402e20:	10a4      	asrs	r4, r4, #2
  402e22:	d005      	beq.n	402e30 <__libc_fini_array+0x18>
  402e24:	3c01      	subs	r4, #1
  402e26:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  402e2a:	4798      	blx	r3
  402e2c:	2c00      	cmp	r4, #0
  402e2e:	d1f9      	bne.n	402e24 <__libc_fini_array+0xc>
  402e30:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  402e34:	f002 bcf4 	b.w	405820 <_fini>
  402e38:	00405830 	.word	0x00405830
  402e3c:	0040582c 	.word	0x0040582c

00402e40 <__fputwc>:
  402e40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  402e44:	b082      	sub	sp, #8
  402e46:	4680      	mov	r8, r0
  402e48:	4689      	mov	r9, r1
  402e4a:	4614      	mov	r4, r2
  402e4c:	f000 fc3e 	bl	4036cc <__locale_mb_cur_max>
  402e50:	2801      	cmp	r0, #1
  402e52:	d033      	beq.n	402ebc <__fputwc+0x7c>
  402e54:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  402e58:	464a      	mov	r2, r9
  402e5a:	a901      	add	r1, sp, #4
  402e5c:	4640      	mov	r0, r8
  402e5e:	f002 f809 	bl	404e74 <_wcrtomb_r>
  402e62:	f1b0 3fff 	cmp.w	r0, #4294967295
  402e66:	4682      	mov	sl, r0
  402e68:	d021      	beq.n	402eae <__fputwc+0x6e>
  402e6a:	b388      	cbz	r0, 402ed0 <__fputwc+0x90>
  402e6c:	f89d 6004 	ldrb.w	r6, [sp, #4]
  402e70:	2500      	movs	r5, #0
  402e72:	e008      	b.n	402e86 <__fputwc+0x46>
  402e74:	6823      	ldr	r3, [r4, #0]
  402e76:	1c5a      	adds	r2, r3, #1
  402e78:	6022      	str	r2, [r4, #0]
  402e7a:	701e      	strb	r6, [r3, #0]
  402e7c:	3501      	adds	r5, #1
  402e7e:	4555      	cmp	r5, sl
  402e80:	d226      	bcs.n	402ed0 <__fputwc+0x90>
  402e82:	ab01      	add	r3, sp, #4
  402e84:	5d5e      	ldrb	r6, [r3, r5]
  402e86:	68a3      	ldr	r3, [r4, #8]
  402e88:	3b01      	subs	r3, #1
  402e8a:	2b00      	cmp	r3, #0
  402e8c:	60a3      	str	r3, [r4, #8]
  402e8e:	daf1      	bge.n	402e74 <__fputwc+0x34>
  402e90:	69a7      	ldr	r7, [r4, #24]
  402e92:	42bb      	cmp	r3, r7
  402e94:	4631      	mov	r1, r6
  402e96:	4622      	mov	r2, r4
  402e98:	4640      	mov	r0, r8
  402e9a:	db01      	blt.n	402ea0 <__fputwc+0x60>
  402e9c:	2e0a      	cmp	r6, #10
  402e9e:	d1e9      	bne.n	402e74 <__fputwc+0x34>
  402ea0:	f001 ff92 	bl	404dc8 <__swbuf_r>
  402ea4:	1c43      	adds	r3, r0, #1
  402ea6:	d1e9      	bne.n	402e7c <__fputwc+0x3c>
  402ea8:	b002      	add	sp, #8
  402eaa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  402eae:	89a3      	ldrh	r3, [r4, #12]
  402eb0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402eb4:	81a3      	strh	r3, [r4, #12]
  402eb6:	b002      	add	sp, #8
  402eb8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  402ebc:	f109 33ff 	add.w	r3, r9, #4294967295
  402ec0:	2bfe      	cmp	r3, #254	; 0xfe
  402ec2:	d8c7      	bhi.n	402e54 <__fputwc+0x14>
  402ec4:	fa5f f689 	uxtb.w	r6, r9
  402ec8:	4682      	mov	sl, r0
  402eca:	f88d 6004 	strb.w	r6, [sp, #4]
  402ece:	e7cf      	b.n	402e70 <__fputwc+0x30>
  402ed0:	4648      	mov	r0, r9
  402ed2:	b002      	add	sp, #8
  402ed4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00402ed8 <_fputwc_r>:
  402ed8:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  402edc:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  402ee0:	d10a      	bne.n	402ef8 <_fputwc_r+0x20>
  402ee2:	b410      	push	{r4}
  402ee4:	6e54      	ldr	r4, [r2, #100]	; 0x64
  402ee6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  402eea:	f444 5400 	orr.w	r4, r4, #8192	; 0x2000
  402eee:	6654      	str	r4, [r2, #100]	; 0x64
  402ef0:	8193      	strh	r3, [r2, #12]
  402ef2:	bc10      	pop	{r4}
  402ef4:	f7ff bfa4 	b.w	402e40 <__fputwc>
  402ef8:	f7ff bfa2 	b.w	402e40 <__fputwc>

00402efc <_fread_r>:
  402efc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402f00:	b083      	sub	sp, #12
  402f02:	fb02 f603 	mul.w	r6, r2, r3
  402f06:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402f0a:	2e00      	cmp	r6, #0
  402f0c:	d048      	beq.n	402fa0 <_fread_r+0xa4>
  402f0e:	4691      	mov	r9, r2
  402f10:	4698      	mov	r8, r3
  402f12:	460c      	mov	r4, r1
  402f14:	4605      	mov	r5, r0
  402f16:	b118      	cbz	r0, 402f20 <_fread_r+0x24>
  402f18:	6b82      	ldr	r2, [r0, #56]	; 0x38
  402f1a:	2a00      	cmp	r2, #0
  402f1c:	f000 80ab 	beq.w	403076 <_fread_r+0x17a>
  402f20:	f9bb 200c 	ldrsh.w	r2, [fp, #12]
  402f24:	b291      	uxth	r1, r2
  402f26:	0488      	lsls	r0, r1, #18
  402f28:	d40a      	bmi.n	402f40 <_fread_r+0x44>
  402f2a:	f8db 1064 	ldr.w	r1, [fp, #100]	; 0x64
  402f2e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  402f32:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
  402f36:	f8ab 200c 	strh.w	r2, [fp, #12]
  402f3a:	b291      	uxth	r1, r2
  402f3c:	f8cb 0064 	str.w	r0, [fp, #100]	; 0x64
  402f40:	f8db 7004 	ldr.w	r7, [fp, #4]
  402f44:	2f00      	cmp	r7, #0
  402f46:	db36      	blt.n	402fb6 <_fread_r+0xba>
  402f48:	078b      	lsls	r3, r1, #30
  402f4a:	463a      	mov	r2, r7
  402f4c:	d43a      	bmi.n	402fc4 <_fread_r+0xc8>
  402f4e:	46b2      	mov	sl, r6
  402f50:	e012      	b.n	402f78 <_fread_r+0x7c>
  402f52:	f8db 1000 	ldr.w	r1, [fp]
  402f56:	f000 ff8b 	bl	403e70 <memcpy>
  402f5a:	f8db 3000 	ldr.w	r3, [fp]
  402f5e:	443b      	add	r3, r7
  402f60:	f8cb 3000 	str.w	r3, [fp]
  402f64:	4659      	mov	r1, fp
  402f66:	4628      	mov	r0, r5
  402f68:	443c      	add	r4, r7
  402f6a:	ebc7 0a0a 	rsb	sl, r7, sl
  402f6e:	f001 fa7b 	bl	404468 <__srefill_r>
  402f72:	b9c8      	cbnz	r0, 402fa8 <_fread_r+0xac>
  402f74:	f8db 7004 	ldr.w	r7, [fp, #4]
  402f78:	45ba      	cmp	sl, r7
  402f7a:	463a      	mov	r2, r7
  402f7c:	4620      	mov	r0, r4
  402f7e:	d8e8      	bhi.n	402f52 <_fread_r+0x56>
  402f80:	4652      	mov	r2, sl
  402f82:	f8db 1000 	ldr.w	r1, [fp]
  402f86:	f000 ff73 	bl	403e70 <memcpy>
  402f8a:	e89b 0006 	ldmia.w	fp, {r1, r2}
  402f8e:	ebca 0202 	rsb	r2, sl, r2
  402f92:	4451      	add	r1, sl
  402f94:	e88b 0006 	stmia.w	fp, {r1, r2}
  402f98:	4640      	mov	r0, r8
  402f9a:	b003      	add	sp, #12
  402f9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402fa0:	4630      	mov	r0, r6
  402fa2:	b003      	add	sp, #12
  402fa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402fa8:	ebca 0606 	rsb	r6, sl, r6
  402fac:	fbb6 f0f9 	udiv	r0, r6, r9
  402fb0:	b003      	add	sp, #12
  402fb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402fb6:	2000      	movs	r0, #0
  402fb8:	078b      	lsls	r3, r1, #30
  402fba:	4602      	mov	r2, r0
  402fbc:	f8cb 0004 	str.w	r0, [fp, #4]
  402fc0:	4607      	mov	r7, r0
  402fc2:	d5c4      	bpl.n	402f4e <_fread_r+0x52>
  402fc4:	42b2      	cmp	r2, r6
  402fc6:	4613      	mov	r3, r2
  402fc8:	bf28      	it	cs
  402fca:	4633      	movcs	r3, r6
  402fcc:	461a      	mov	r2, r3
  402fce:	f8db 1000 	ldr.w	r1, [fp]
  402fd2:	9300      	str	r3, [sp, #0]
  402fd4:	4620      	mov	r0, r4
  402fd6:	f000 ff4b 	bl	403e70 <memcpy>
  402fda:	f8db 7000 	ldr.w	r7, [fp]
  402fde:	9b00      	ldr	r3, [sp, #0]
  402fe0:	f8db 2004 	ldr.w	r2, [fp, #4]
  402fe4:	f8db 1030 	ldr.w	r1, [fp, #48]	; 0x30
  402fe8:	eb07 0a03 	add.w	sl, r7, r3
  402fec:	1ad2      	subs	r2, r2, r3
  402fee:	f8cb a000 	str.w	sl, [fp]
  402ff2:	f8cb 2004 	str.w	r2, [fp, #4]
  402ff6:	1af7      	subs	r7, r6, r3
  402ff8:	2900      	cmp	r1, #0
  402ffa:	d049      	beq.n	403090 <_fread_r+0x194>
  402ffc:	2f00      	cmp	r7, #0
  402ffe:	d045      	beq.n	40308c <_fread_r+0x190>
  403000:	f10b 0040 	add.w	r0, fp, #64	; 0x40
  403004:	4281      	cmp	r1, r0
  403006:	d006      	beq.n	403016 <_fread_r+0x11a>
  403008:	4628      	mov	r0, r5
  40300a:	9300      	str	r3, [sp, #0]
  40300c:	f000 f892 	bl	403134 <_free_r>
  403010:	f8db a000 	ldr.w	sl, [fp]
  403014:	9b00      	ldr	r3, [sp, #0]
  403016:	2100      	movs	r1, #0
  403018:	f8cb 1030 	str.w	r1, [fp, #48]	; 0x30
  40301c:	f8db 2010 	ldr.w	r2, [fp, #16]
  403020:	f8db 1014 	ldr.w	r1, [fp, #20]
  403024:	9600      	str	r6, [sp, #0]
  403026:	441c      	add	r4, r3
  403028:	f8cd 8004 	str.w	r8, [sp, #4]
  40302c:	4616      	mov	r6, r2
  40302e:	46a0      	mov	r8, r4
  403030:	4654      	mov	r4, sl
  403032:	46aa      	mov	sl, r5
  403034:	460d      	mov	r5, r1
  403036:	e000      	b.n	40303a <_fread_r+0x13e>
  403038:	b337      	cbz	r7, 403088 <_fread_r+0x18c>
  40303a:	f8cb 8010 	str.w	r8, [fp, #16]
  40303e:	f8cb 7014 	str.w	r7, [fp, #20]
  403042:	f8cb 8000 	str.w	r8, [fp]
  403046:	4659      	mov	r1, fp
  403048:	4650      	mov	r0, sl
  40304a:	f001 fa0d 	bl	404468 <__srefill_r>
  40304e:	f8db 1004 	ldr.w	r1, [fp, #4]
  403052:	f8cb 6010 	str.w	r6, [fp, #16]
  403056:	2300      	movs	r3, #0
  403058:	f8cb 5014 	str.w	r5, [fp, #20]
  40305c:	f8cb 4000 	str.w	r4, [fp]
  403060:	1a7f      	subs	r7, r7, r1
  403062:	4488      	add	r8, r1
  403064:	f8cb 3004 	str.w	r3, [fp, #4]
  403068:	2800      	cmp	r0, #0
  40306a:	d0e5      	beq.n	403038 <_fread_r+0x13c>
  40306c:	9e00      	ldr	r6, [sp, #0]
  40306e:	1bf6      	subs	r6, r6, r7
  403070:	fbb6 f0f9 	udiv	r0, r6, r9
  403074:	e791      	b.n	402f9a <_fread_r+0x9e>
  403076:	f7ff fec5 	bl	402e04 <__sinit>
  40307a:	f9bb 200c 	ldrsh.w	r2, [fp, #12]
  40307e:	b291      	uxth	r1, r2
  403080:	0488      	lsls	r0, r1, #18
  403082:	f53f af5d 	bmi.w	402f40 <_fread_r+0x44>
  403086:	e750      	b.n	402f2a <_fread_r+0x2e>
  403088:	f8dd 8004 	ldr.w	r8, [sp, #4]
  40308c:	4640      	mov	r0, r8
  40308e:	e784      	b.n	402f9a <_fread_r+0x9e>
  403090:	2f00      	cmp	r7, #0
  403092:	d1c3      	bne.n	40301c <_fread_r+0x120>
  403094:	4640      	mov	r0, r8
  403096:	e780      	b.n	402f9a <_fread_r+0x9e>

00403098 <_malloc_trim_r>:
  403098:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40309a:	4f23      	ldr	r7, [pc, #140]	; (403128 <_malloc_trim_r+0x90>)
  40309c:	460c      	mov	r4, r1
  40309e:	4606      	mov	r6, r0
  4030a0:	f000 ffe4 	bl	40406c <__malloc_lock>
  4030a4:	68bb      	ldr	r3, [r7, #8]
  4030a6:	685d      	ldr	r5, [r3, #4]
  4030a8:	f025 0503 	bic.w	r5, r5, #3
  4030ac:	1b29      	subs	r1, r5, r4
  4030ae:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
  4030b2:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  4030b6:	f021 010f 	bic.w	r1, r1, #15
  4030ba:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4030be:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4030c2:	db07      	blt.n	4030d4 <_malloc_trim_r+0x3c>
  4030c4:	2100      	movs	r1, #0
  4030c6:	4630      	mov	r0, r6
  4030c8:	f001 fa58 	bl	40457c <_sbrk_r>
  4030cc:	68bb      	ldr	r3, [r7, #8]
  4030ce:	442b      	add	r3, r5
  4030d0:	4298      	cmp	r0, r3
  4030d2:	d004      	beq.n	4030de <_malloc_trim_r+0x46>
  4030d4:	4630      	mov	r0, r6
  4030d6:	f000 ffcb 	bl	404070 <__malloc_unlock>
  4030da:	2000      	movs	r0, #0
  4030dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4030de:	4261      	negs	r1, r4
  4030e0:	4630      	mov	r0, r6
  4030e2:	f001 fa4b 	bl	40457c <_sbrk_r>
  4030e6:	3001      	adds	r0, #1
  4030e8:	d00d      	beq.n	403106 <_malloc_trim_r+0x6e>
  4030ea:	4b10      	ldr	r3, [pc, #64]	; (40312c <_malloc_trim_r+0x94>)
  4030ec:	68ba      	ldr	r2, [r7, #8]
  4030ee:	6819      	ldr	r1, [r3, #0]
  4030f0:	1b2d      	subs	r5, r5, r4
  4030f2:	f045 0501 	orr.w	r5, r5, #1
  4030f6:	4630      	mov	r0, r6
  4030f8:	1b09      	subs	r1, r1, r4
  4030fa:	6055      	str	r5, [r2, #4]
  4030fc:	6019      	str	r1, [r3, #0]
  4030fe:	f000 ffb7 	bl	404070 <__malloc_unlock>
  403102:	2001      	movs	r0, #1
  403104:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403106:	2100      	movs	r1, #0
  403108:	4630      	mov	r0, r6
  40310a:	f001 fa37 	bl	40457c <_sbrk_r>
  40310e:	68ba      	ldr	r2, [r7, #8]
  403110:	1a83      	subs	r3, r0, r2
  403112:	2b0f      	cmp	r3, #15
  403114:	ddde      	ble.n	4030d4 <_malloc_trim_r+0x3c>
  403116:	4c06      	ldr	r4, [pc, #24]	; (403130 <_malloc_trim_r+0x98>)
  403118:	4904      	ldr	r1, [pc, #16]	; (40312c <_malloc_trim_r+0x94>)
  40311a:	6824      	ldr	r4, [r4, #0]
  40311c:	f043 0301 	orr.w	r3, r3, #1
  403120:	1b00      	subs	r0, r0, r4
  403122:	6053      	str	r3, [r2, #4]
  403124:	6008      	str	r0, [r1, #0]
  403126:	e7d5      	b.n	4030d4 <_malloc_trim_r+0x3c>
  403128:	2000045c 	.word	0x2000045c
  40312c:	200008ac 	.word	0x200008ac
  403130:	20000868 	.word	0x20000868

00403134 <_free_r>:
  403134:	2900      	cmp	r1, #0
  403136:	d045      	beq.n	4031c4 <_free_r+0x90>
  403138:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40313c:	460d      	mov	r5, r1
  40313e:	4680      	mov	r8, r0
  403140:	f000 ff94 	bl	40406c <__malloc_lock>
  403144:	f855 7c04 	ldr.w	r7, [r5, #-4]
  403148:	496a      	ldr	r1, [pc, #424]	; (4032f4 <_free_r+0x1c0>)
  40314a:	f027 0301 	bic.w	r3, r7, #1
  40314e:	f1a5 0408 	sub.w	r4, r5, #8
  403152:	18e2      	adds	r2, r4, r3
  403154:	688e      	ldr	r6, [r1, #8]
  403156:	6850      	ldr	r0, [r2, #4]
  403158:	42b2      	cmp	r2, r6
  40315a:	f020 0003 	bic.w	r0, r0, #3
  40315e:	d062      	beq.n	403226 <_free_r+0xf2>
  403160:	07fe      	lsls	r6, r7, #31
  403162:	6050      	str	r0, [r2, #4]
  403164:	d40b      	bmi.n	40317e <_free_r+0x4a>
  403166:	f855 7c08 	ldr.w	r7, [r5, #-8]
  40316a:	1be4      	subs	r4, r4, r7
  40316c:	f101 0e08 	add.w	lr, r1, #8
  403170:	68a5      	ldr	r5, [r4, #8]
  403172:	4575      	cmp	r5, lr
  403174:	443b      	add	r3, r7
  403176:	d06f      	beq.n	403258 <_free_r+0x124>
  403178:	68e7      	ldr	r7, [r4, #12]
  40317a:	60ef      	str	r7, [r5, #12]
  40317c:	60bd      	str	r5, [r7, #8]
  40317e:	1815      	adds	r5, r2, r0
  403180:	686d      	ldr	r5, [r5, #4]
  403182:	07ed      	lsls	r5, r5, #31
  403184:	d542      	bpl.n	40320c <_free_r+0xd8>
  403186:	f043 0201 	orr.w	r2, r3, #1
  40318a:	6062      	str	r2, [r4, #4]
  40318c:	50e3      	str	r3, [r4, r3]
  40318e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  403192:	d218      	bcs.n	4031c6 <_free_r+0x92>
  403194:	08db      	lsrs	r3, r3, #3
  403196:	1c5a      	adds	r2, r3, #1
  403198:	684d      	ldr	r5, [r1, #4]
  40319a:	f851 7032 	ldr.w	r7, [r1, r2, lsl #3]
  40319e:	60a7      	str	r7, [r4, #8]
  4031a0:	2001      	movs	r0, #1
  4031a2:	109b      	asrs	r3, r3, #2
  4031a4:	fa00 f303 	lsl.w	r3, r0, r3
  4031a8:	eb01 00c2 	add.w	r0, r1, r2, lsl #3
  4031ac:	431d      	orrs	r5, r3
  4031ae:	3808      	subs	r0, #8
  4031b0:	60e0      	str	r0, [r4, #12]
  4031b2:	604d      	str	r5, [r1, #4]
  4031b4:	f841 4032 	str.w	r4, [r1, r2, lsl #3]
  4031b8:	60fc      	str	r4, [r7, #12]
  4031ba:	4640      	mov	r0, r8
  4031bc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4031c0:	f000 bf56 	b.w	404070 <__malloc_unlock>
  4031c4:	4770      	bx	lr
  4031c6:	0a5a      	lsrs	r2, r3, #9
  4031c8:	2a04      	cmp	r2, #4
  4031ca:	d853      	bhi.n	403274 <_free_r+0x140>
  4031cc:	099a      	lsrs	r2, r3, #6
  4031ce:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4031d2:	007f      	lsls	r7, r7, #1
  4031d4:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4031d8:	eb01 0087 	add.w	r0, r1, r7, lsl #2
  4031dc:	f851 2027 	ldr.w	r2, [r1, r7, lsl #2]
  4031e0:	4944      	ldr	r1, [pc, #272]	; (4032f4 <_free_r+0x1c0>)
  4031e2:	3808      	subs	r0, #8
  4031e4:	4290      	cmp	r0, r2
  4031e6:	d04d      	beq.n	403284 <_free_r+0x150>
  4031e8:	6851      	ldr	r1, [r2, #4]
  4031ea:	f021 0103 	bic.w	r1, r1, #3
  4031ee:	428b      	cmp	r3, r1
  4031f0:	d202      	bcs.n	4031f8 <_free_r+0xc4>
  4031f2:	6892      	ldr	r2, [r2, #8]
  4031f4:	4290      	cmp	r0, r2
  4031f6:	d1f7      	bne.n	4031e8 <_free_r+0xb4>
  4031f8:	68d0      	ldr	r0, [r2, #12]
  4031fa:	60e0      	str	r0, [r4, #12]
  4031fc:	60a2      	str	r2, [r4, #8]
  4031fe:	6084      	str	r4, [r0, #8]
  403200:	60d4      	str	r4, [r2, #12]
  403202:	4640      	mov	r0, r8
  403204:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  403208:	f000 bf32 	b.w	404070 <__malloc_unlock>
  40320c:	6895      	ldr	r5, [r2, #8]
  40320e:	4f3a      	ldr	r7, [pc, #232]	; (4032f8 <_free_r+0x1c4>)
  403210:	42bd      	cmp	r5, r7
  403212:	4403      	add	r3, r0
  403214:	d03f      	beq.n	403296 <_free_r+0x162>
  403216:	68d0      	ldr	r0, [r2, #12]
  403218:	60e8      	str	r0, [r5, #12]
  40321a:	f043 0201 	orr.w	r2, r3, #1
  40321e:	6085      	str	r5, [r0, #8]
  403220:	6062      	str	r2, [r4, #4]
  403222:	50e3      	str	r3, [r4, r3]
  403224:	e7b3      	b.n	40318e <_free_r+0x5a>
  403226:	07ff      	lsls	r7, r7, #31
  403228:	4403      	add	r3, r0
  40322a:	d407      	bmi.n	40323c <_free_r+0x108>
  40322c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  403230:	1aa4      	subs	r4, r4, r2
  403232:	4413      	add	r3, r2
  403234:	68a0      	ldr	r0, [r4, #8]
  403236:	68e2      	ldr	r2, [r4, #12]
  403238:	60c2      	str	r2, [r0, #12]
  40323a:	6090      	str	r0, [r2, #8]
  40323c:	4a2f      	ldr	r2, [pc, #188]	; (4032fc <_free_r+0x1c8>)
  40323e:	6812      	ldr	r2, [r2, #0]
  403240:	f043 0001 	orr.w	r0, r3, #1
  403244:	4293      	cmp	r3, r2
  403246:	6060      	str	r0, [r4, #4]
  403248:	608c      	str	r4, [r1, #8]
  40324a:	d3b6      	bcc.n	4031ba <_free_r+0x86>
  40324c:	4b2c      	ldr	r3, [pc, #176]	; (403300 <_free_r+0x1cc>)
  40324e:	4640      	mov	r0, r8
  403250:	6819      	ldr	r1, [r3, #0]
  403252:	f7ff ff21 	bl	403098 <_malloc_trim_r>
  403256:	e7b0      	b.n	4031ba <_free_r+0x86>
  403258:	1811      	adds	r1, r2, r0
  40325a:	6849      	ldr	r1, [r1, #4]
  40325c:	07c9      	lsls	r1, r1, #31
  40325e:	d444      	bmi.n	4032ea <_free_r+0x1b6>
  403260:	6891      	ldr	r1, [r2, #8]
  403262:	68d2      	ldr	r2, [r2, #12]
  403264:	60ca      	str	r2, [r1, #12]
  403266:	4403      	add	r3, r0
  403268:	f043 0001 	orr.w	r0, r3, #1
  40326c:	6091      	str	r1, [r2, #8]
  40326e:	6060      	str	r0, [r4, #4]
  403270:	50e3      	str	r3, [r4, r3]
  403272:	e7a2      	b.n	4031ba <_free_r+0x86>
  403274:	2a14      	cmp	r2, #20
  403276:	d817      	bhi.n	4032a8 <_free_r+0x174>
  403278:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  40327c:	007f      	lsls	r7, r7, #1
  40327e:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  403282:	e7a9      	b.n	4031d8 <_free_r+0xa4>
  403284:	10aa      	asrs	r2, r5, #2
  403286:	684b      	ldr	r3, [r1, #4]
  403288:	2501      	movs	r5, #1
  40328a:	fa05 f202 	lsl.w	r2, r5, r2
  40328e:	4313      	orrs	r3, r2
  403290:	604b      	str	r3, [r1, #4]
  403292:	4602      	mov	r2, r0
  403294:	e7b1      	b.n	4031fa <_free_r+0xc6>
  403296:	f043 0201 	orr.w	r2, r3, #1
  40329a:	614c      	str	r4, [r1, #20]
  40329c:	610c      	str	r4, [r1, #16]
  40329e:	60e5      	str	r5, [r4, #12]
  4032a0:	60a5      	str	r5, [r4, #8]
  4032a2:	6062      	str	r2, [r4, #4]
  4032a4:	50e3      	str	r3, [r4, r3]
  4032a6:	e788      	b.n	4031ba <_free_r+0x86>
  4032a8:	2a54      	cmp	r2, #84	; 0x54
  4032aa:	d806      	bhi.n	4032ba <_free_r+0x186>
  4032ac:	0b1a      	lsrs	r2, r3, #12
  4032ae:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  4032b2:	007f      	lsls	r7, r7, #1
  4032b4:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  4032b8:	e78e      	b.n	4031d8 <_free_r+0xa4>
  4032ba:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4032be:	d806      	bhi.n	4032ce <_free_r+0x19a>
  4032c0:	0bda      	lsrs	r2, r3, #15
  4032c2:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4032c6:	007f      	lsls	r7, r7, #1
  4032c8:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4032cc:	e784      	b.n	4031d8 <_free_r+0xa4>
  4032ce:	f240 5054 	movw	r0, #1364	; 0x554
  4032d2:	4282      	cmp	r2, r0
  4032d4:	d806      	bhi.n	4032e4 <_free_r+0x1b0>
  4032d6:	0c9a      	lsrs	r2, r3, #18
  4032d8:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4032dc:	007f      	lsls	r7, r7, #1
  4032de:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4032e2:	e779      	b.n	4031d8 <_free_r+0xa4>
  4032e4:	27fe      	movs	r7, #254	; 0xfe
  4032e6:	257e      	movs	r5, #126	; 0x7e
  4032e8:	e776      	b.n	4031d8 <_free_r+0xa4>
  4032ea:	f043 0201 	orr.w	r2, r3, #1
  4032ee:	6062      	str	r2, [r4, #4]
  4032f0:	50e3      	str	r3, [r4, r3]
  4032f2:	e762      	b.n	4031ba <_free_r+0x86>
  4032f4:	2000045c 	.word	0x2000045c
  4032f8:	20000464 	.word	0x20000464
  4032fc:	20000864 	.word	0x20000864
  403300:	200008a8 	.word	0x200008a8

00403304 <__sfvwrite_r>:
  403304:	6893      	ldr	r3, [r2, #8]
  403306:	2b00      	cmp	r3, #0
  403308:	d076      	beq.n	4033f8 <__sfvwrite_r+0xf4>
  40330a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40330e:	898b      	ldrh	r3, [r1, #12]
  403310:	b085      	sub	sp, #20
  403312:	460c      	mov	r4, r1
  403314:	0719      	lsls	r1, r3, #28
  403316:	9001      	str	r0, [sp, #4]
  403318:	4616      	mov	r6, r2
  40331a:	d529      	bpl.n	403370 <__sfvwrite_r+0x6c>
  40331c:	6922      	ldr	r2, [r4, #16]
  40331e:	b33a      	cbz	r2, 403370 <__sfvwrite_r+0x6c>
  403320:	f003 0802 	and.w	r8, r3, #2
  403324:	fa1f f088 	uxth.w	r0, r8
  403328:	6835      	ldr	r5, [r6, #0]
  40332a:	2800      	cmp	r0, #0
  40332c:	d02f      	beq.n	40338e <__sfvwrite_r+0x8a>
  40332e:	f04f 0900 	mov.w	r9, #0
  403332:	4fb4      	ldr	r7, [pc, #720]	; (403604 <__sfvwrite_r+0x300>)
  403334:	46c8      	mov	r8, r9
  403336:	46b2      	mov	sl, r6
  403338:	45b8      	cmp	r8, r7
  40333a:	4643      	mov	r3, r8
  40333c:	464a      	mov	r2, r9
  40333e:	bf28      	it	cs
  403340:	463b      	movcs	r3, r7
  403342:	9801      	ldr	r0, [sp, #4]
  403344:	f1b8 0f00 	cmp.w	r8, #0
  403348:	d050      	beq.n	4033ec <__sfvwrite_r+0xe8>
  40334a:	69e1      	ldr	r1, [r4, #28]
  40334c:	6a66      	ldr	r6, [r4, #36]	; 0x24
  40334e:	47b0      	blx	r6
  403350:	2800      	cmp	r0, #0
  403352:	dd71      	ble.n	403438 <__sfvwrite_r+0x134>
  403354:	f8da 3008 	ldr.w	r3, [sl, #8]
  403358:	1a1b      	subs	r3, r3, r0
  40335a:	4481      	add	r9, r0
  40335c:	ebc0 0808 	rsb	r8, r0, r8
  403360:	f8ca 3008 	str.w	r3, [sl, #8]
  403364:	2b00      	cmp	r3, #0
  403366:	d1e7      	bne.n	403338 <__sfvwrite_r+0x34>
  403368:	2000      	movs	r0, #0
  40336a:	b005      	add	sp, #20
  40336c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403370:	4621      	mov	r1, r4
  403372:	9801      	ldr	r0, [sp, #4]
  403374:	f7ff fb88 	bl	402a88 <__swsetup_r>
  403378:	2800      	cmp	r0, #0
  40337a:	f040 813a 	bne.w	4035f2 <__sfvwrite_r+0x2ee>
  40337e:	89a3      	ldrh	r3, [r4, #12]
  403380:	6835      	ldr	r5, [r6, #0]
  403382:	f003 0802 	and.w	r8, r3, #2
  403386:	fa1f f088 	uxth.w	r0, r8
  40338a:	2800      	cmp	r0, #0
  40338c:	d1cf      	bne.n	40332e <__sfvwrite_r+0x2a>
  40338e:	f013 0901 	ands.w	r9, r3, #1
  403392:	d15b      	bne.n	40344c <__sfvwrite_r+0x148>
  403394:	464f      	mov	r7, r9
  403396:	9602      	str	r6, [sp, #8]
  403398:	b31f      	cbz	r7, 4033e2 <__sfvwrite_r+0xde>
  40339a:	059a      	lsls	r2, r3, #22
  40339c:	f8d4 8008 	ldr.w	r8, [r4, #8]
  4033a0:	d52c      	bpl.n	4033fc <__sfvwrite_r+0xf8>
  4033a2:	4547      	cmp	r7, r8
  4033a4:	46c2      	mov	sl, r8
  4033a6:	f0c0 80a4 	bcc.w	4034f2 <__sfvwrite_r+0x1ee>
  4033aa:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4033ae:	f040 80b1 	bne.w	403514 <__sfvwrite_r+0x210>
  4033b2:	6820      	ldr	r0, [r4, #0]
  4033b4:	4652      	mov	r2, sl
  4033b6:	4649      	mov	r1, r9
  4033b8:	f000 fdf4 	bl	403fa4 <memmove>
  4033bc:	68a0      	ldr	r0, [r4, #8]
  4033be:	6823      	ldr	r3, [r4, #0]
  4033c0:	ebc8 0000 	rsb	r0, r8, r0
  4033c4:	4453      	add	r3, sl
  4033c6:	60a0      	str	r0, [r4, #8]
  4033c8:	6023      	str	r3, [r4, #0]
  4033ca:	4638      	mov	r0, r7
  4033cc:	9a02      	ldr	r2, [sp, #8]
  4033ce:	6893      	ldr	r3, [r2, #8]
  4033d0:	1a1b      	subs	r3, r3, r0
  4033d2:	4481      	add	r9, r0
  4033d4:	1a3f      	subs	r7, r7, r0
  4033d6:	6093      	str	r3, [r2, #8]
  4033d8:	2b00      	cmp	r3, #0
  4033da:	d0c5      	beq.n	403368 <__sfvwrite_r+0x64>
  4033dc:	89a3      	ldrh	r3, [r4, #12]
  4033de:	2f00      	cmp	r7, #0
  4033e0:	d1db      	bne.n	40339a <__sfvwrite_r+0x96>
  4033e2:	f8d5 9000 	ldr.w	r9, [r5]
  4033e6:	686f      	ldr	r7, [r5, #4]
  4033e8:	3508      	adds	r5, #8
  4033ea:	e7d5      	b.n	403398 <__sfvwrite_r+0x94>
  4033ec:	f8d5 9000 	ldr.w	r9, [r5]
  4033f0:	f8d5 8004 	ldr.w	r8, [r5, #4]
  4033f4:	3508      	adds	r5, #8
  4033f6:	e79f      	b.n	403338 <__sfvwrite_r+0x34>
  4033f8:	2000      	movs	r0, #0
  4033fa:	4770      	bx	lr
  4033fc:	6820      	ldr	r0, [r4, #0]
  4033fe:	6923      	ldr	r3, [r4, #16]
  403400:	4298      	cmp	r0, r3
  403402:	d803      	bhi.n	40340c <__sfvwrite_r+0x108>
  403404:	6961      	ldr	r1, [r4, #20]
  403406:	428f      	cmp	r7, r1
  403408:	f080 80b7 	bcs.w	40357a <__sfvwrite_r+0x276>
  40340c:	45b8      	cmp	r8, r7
  40340e:	bf28      	it	cs
  403410:	46b8      	movcs	r8, r7
  403412:	4642      	mov	r2, r8
  403414:	4649      	mov	r1, r9
  403416:	f000 fdc5 	bl	403fa4 <memmove>
  40341a:	68a3      	ldr	r3, [r4, #8]
  40341c:	6822      	ldr	r2, [r4, #0]
  40341e:	ebc8 0303 	rsb	r3, r8, r3
  403422:	4442      	add	r2, r8
  403424:	60a3      	str	r3, [r4, #8]
  403426:	6022      	str	r2, [r4, #0]
  403428:	2b00      	cmp	r3, #0
  40342a:	d149      	bne.n	4034c0 <__sfvwrite_r+0x1bc>
  40342c:	4621      	mov	r1, r4
  40342e:	9801      	ldr	r0, [sp, #4]
  403430:	f7ff fc42 	bl	402cb8 <_fflush_r>
  403434:	2800      	cmp	r0, #0
  403436:	d043      	beq.n	4034c0 <__sfvwrite_r+0x1bc>
  403438:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40343c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403440:	f04f 30ff 	mov.w	r0, #4294967295
  403444:	81a3      	strh	r3, [r4, #12]
  403446:	b005      	add	sp, #20
  403448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40344c:	4680      	mov	r8, r0
  40344e:	9002      	str	r0, [sp, #8]
  403450:	4682      	mov	sl, r0
  403452:	4681      	mov	r9, r0
  403454:	f1b9 0f00 	cmp.w	r9, #0
  403458:	d02a      	beq.n	4034b0 <__sfvwrite_r+0x1ac>
  40345a:	9b02      	ldr	r3, [sp, #8]
  40345c:	2b00      	cmp	r3, #0
  40345e:	d04c      	beq.n	4034fa <__sfvwrite_r+0x1f6>
  403460:	6820      	ldr	r0, [r4, #0]
  403462:	6923      	ldr	r3, [r4, #16]
  403464:	6962      	ldr	r2, [r4, #20]
  403466:	45c8      	cmp	r8, r9
  403468:	46c3      	mov	fp, r8
  40346a:	bf28      	it	cs
  40346c:	46cb      	movcs	fp, r9
  40346e:	4298      	cmp	r0, r3
  403470:	465f      	mov	r7, fp
  403472:	d904      	bls.n	40347e <__sfvwrite_r+0x17a>
  403474:	68a3      	ldr	r3, [r4, #8]
  403476:	4413      	add	r3, r2
  403478:	459b      	cmp	fp, r3
  40347a:	f300 8090 	bgt.w	40359e <__sfvwrite_r+0x29a>
  40347e:	4593      	cmp	fp, r2
  403480:	db20      	blt.n	4034c4 <__sfvwrite_r+0x1c0>
  403482:	4613      	mov	r3, r2
  403484:	6a67      	ldr	r7, [r4, #36]	; 0x24
  403486:	69e1      	ldr	r1, [r4, #28]
  403488:	9801      	ldr	r0, [sp, #4]
  40348a:	4652      	mov	r2, sl
  40348c:	47b8      	blx	r7
  40348e:	1e07      	subs	r7, r0, #0
  403490:	ddd2      	ble.n	403438 <__sfvwrite_r+0x134>
  403492:	ebb8 0807 	subs.w	r8, r8, r7
  403496:	d023      	beq.n	4034e0 <__sfvwrite_r+0x1dc>
  403498:	68b3      	ldr	r3, [r6, #8]
  40349a:	1bdb      	subs	r3, r3, r7
  40349c:	44ba      	add	sl, r7
  40349e:	ebc7 0909 	rsb	r9, r7, r9
  4034a2:	60b3      	str	r3, [r6, #8]
  4034a4:	2b00      	cmp	r3, #0
  4034a6:	f43f af5f 	beq.w	403368 <__sfvwrite_r+0x64>
  4034aa:	f1b9 0f00 	cmp.w	r9, #0
  4034ae:	d1d4      	bne.n	40345a <__sfvwrite_r+0x156>
  4034b0:	2300      	movs	r3, #0
  4034b2:	f8d5 a000 	ldr.w	sl, [r5]
  4034b6:	f8d5 9004 	ldr.w	r9, [r5, #4]
  4034ba:	9302      	str	r3, [sp, #8]
  4034bc:	3508      	adds	r5, #8
  4034be:	e7c9      	b.n	403454 <__sfvwrite_r+0x150>
  4034c0:	4640      	mov	r0, r8
  4034c2:	e783      	b.n	4033cc <__sfvwrite_r+0xc8>
  4034c4:	465a      	mov	r2, fp
  4034c6:	4651      	mov	r1, sl
  4034c8:	f000 fd6c 	bl	403fa4 <memmove>
  4034cc:	68a2      	ldr	r2, [r4, #8]
  4034ce:	6823      	ldr	r3, [r4, #0]
  4034d0:	ebcb 0202 	rsb	r2, fp, r2
  4034d4:	445b      	add	r3, fp
  4034d6:	ebb8 0807 	subs.w	r8, r8, r7
  4034da:	60a2      	str	r2, [r4, #8]
  4034dc:	6023      	str	r3, [r4, #0]
  4034de:	d1db      	bne.n	403498 <__sfvwrite_r+0x194>
  4034e0:	4621      	mov	r1, r4
  4034e2:	9801      	ldr	r0, [sp, #4]
  4034e4:	f7ff fbe8 	bl	402cb8 <_fflush_r>
  4034e8:	2800      	cmp	r0, #0
  4034ea:	d1a5      	bne.n	403438 <__sfvwrite_r+0x134>
  4034ec:	f8cd 8008 	str.w	r8, [sp, #8]
  4034f0:	e7d2      	b.n	403498 <__sfvwrite_r+0x194>
  4034f2:	6820      	ldr	r0, [r4, #0]
  4034f4:	46b8      	mov	r8, r7
  4034f6:	46ba      	mov	sl, r7
  4034f8:	e75c      	b.n	4033b4 <__sfvwrite_r+0xb0>
  4034fa:	464a      	mov	r2, r9
  4034fc:	210a      	movs	r1, #10
  4034fe:	4650      	mov	r0, sl
  403500:	f000 fc66 	bl	403dd0 <memchr>
  403504:	2800      	cmp	r0, #0
  403506:	d06f      	beq.n	4035e8 <__sfvwrite_r+0x2e4>
  403508:	3001      	adds	r0, #1
  40350a:	2301      	movs	r3, #1
  40350c:	ebca 0800 	rsb	r8, sl, r0
  403510:	9302      	str	r3, [sp, #8]
  403512:	e7a5      	b.n	403460 <__sfvwrite_r+0x15c>
  403514:	6962      	ldr	r2, [r4, #20]
  403516:	6820      	ldr	r0, [r4, #0]
  403518:	6921      	ldr	r1, [r4, #16]
  40351a:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  40351e:	ebc1 0a00 	rsb	sl, r1, r0
  403522:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  403526:	f10a 0001 	add.w	r0, sl, #1
  40352a:	ea4f 0868 	mov.w	r8, r8, asr #1
  40352e:	4438      	add	r0, r7
  403530:	4540      	cmp	r0, r8
  403532:	4642      	mov	r2, r8
  403534:	bf84      	itt	hi
  403536:	4680      	movhi	r8, r0
  403538:	4642      	movhi	r2, r8
  40353a:	055b      	lsls	r3, r3, #21
  40353c:	d542      	bpl.n	4035c4 <__sfvwrite_r+0x2c0>
  40353e:	4611      	mov	r1, r2
  403540:	9801      	ldr	r0, [sp, #4]
  403542:	f000 f945 	bl	4037d0 <_malloc_r>
  403546:	4683      	mov	fp, r0
  403548:	2800      	cmp	r0, #0
  40354a:	d055      	beq.n	4035f8 <__sfvwrite_r+0x2f4>
  40354c:	4652      	mov	r2, sl
  40354e:	6921      	ldr	r1, [r4, #16]
  403550:	f000 fc8e 	bl	403e70 <memcpy>
  403554:	89a3      	ldrh	r3, [r4, #12]
  403556:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  40355a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40355e:	81a3      	strh	r3, [r4, #12]
  403560:	ebca 0308 	rsb	r3, sl, r8
  403564:	eb0b 000a 	add.w	r0, fp, sl
  403568:	f8c4 8014 	str.w	r8, [r4, #20]
  40356c:	f8c4 b010 	str.w	fp, [r4, #16]
  403570:	6020      	str	r0, [r4, #0]
  403572:	60a3      	str	r3, [r4, #8]
  403574:	46b8      	mov	r8, r7
  403576:	46ba      	mov	sl, r7
  403578:	e71c      	b.n	4033b4 <__sfvwrite_r+0xb0>
  40357a:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
  40357e:	42bb      	cmp	r3, r7
  403580:	bf28      	it	cs
  403582:	463b      	movcs	r3, r7
  403584:	464a      	mov	r2, r9
  403586:	fb93 f3f1 	sdiv	r3, r3, r1
  40358a:	9801      	ldr	r0, [sp, #4]
  40358c:	6a66      	ldr	r6, [r4, #36]	; 0x24
  40358e:	fb01 f303 	mul.w	r3, r1, r3
  403592:	69e1      	ldr	r1, [r4, #28]
  403594:	47b0      	blx	r6
  403596:	2800      	cmp	r0, #0
  403598:	f73f af18 	bgt.w	4033cc <__sfvwrite_r+0xc8>
  40359c:	e74c      	b.n	403438 <__sfvwrite_r+0x134>
  40359e:	461a      	mov	r2, r3
  4035a0:	4651      	mov	r1, sl
  4035a2:	9303      	str	r3, [sp, #12]
  4035a4:	f000 fcfe 	bl	403fa4 <memmove>
  4035a8:	6822      	ldr	r2, [r4, #0]
  4035aa:	9b03      	ldr	r3, [sp, #12]
  4035ac:	9801      	ldr	r0, [sp, #4]
  4035ae:	441a      	add	r2, r3
  4035b0:	6022      	str	r2, [r4, #0]
  4035b2:	4621      	mov	r1, r4
  4035b4:	f7ff fb80 	bl	402cb8 <_fflush_r>
  4035b8:	9b03      	ldr	r3, [sp, #12]
  4035ba:	2800      	cmp	r0, #0
  4035bc:	f47f af3c 	bne.w	403438 <__sfvwrite_r+0x134>
  4035c0:	461f      	mov	r7, r3
  4035c2:	e766      	b.n	403492 <__sfvwrite_r+0x18e>
  4035c4:	9801      	ldr	r0, [sp, #4]
  4035c6:	f000 fd55 	bl	404074 <_realloc_r>
  4035ca:	4683      	mov	fp, r0
  4035cc:	2800      	cmp	r0, #0
  4035ce:	d1c7      	bne.n	403560 <__sfvwrite_r+0x25c>
  4035d0:	9d01      	ldr	r5, [sp, #4]
  4035d2:	6921      	ldr	r1, [r4, #16]
  4035d4:	4628      	mov	r0, r5
  4035d6:	f7ff fdad 	bl	403134 <_free_r>
  4035da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4035de:	220c      	movs	r2, #12
  4035e0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4035e4:	602a      	str	r2, [r5, #0]
  4035e6:	e729      	b.n	40343c <__sfvwrite_r+0x138>
  4035e8:	2301      	movs	r3, #1
  4035ea:	f109 0801 	add.w	r8, r9, #1
  4035ee:	9302      	str	r3, [sp, #8]
  4035f0:	e736      	b.n	403460 <__sfvwrite_r+0x15c>
  4035f2:	f04f 30ff 	mov.w	r0, #4294967295
  4035f6:	e6b8      	b.n	40336a <__sfvwrite_r+0x66>
  4035f8:	9a01      	ldr	r2, [sp, #4]
  4035fa:	230c      	movs	r3, #12
  4035fc:	6013      	str	r3, [r2, #0]
  4035fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403602:	e71b      	b.n	40343c <__sfvwrite_r+0x138>
  403604:	7ffffc00 	.word	0x7ffffc00

00403608 <_fwalk>:
  403608:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40360c:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  403610:	d01b      	beq.n	40364a <_fwalk+0x42>
  403612:	4688      	mov	r8, r1
  403614:	2600      	movs	r6, #0
  403616:	687d      	ldr	r5, [r7, #4]
  403618:	68bc      	ldr	r4, [r7, #8]
  40361a:	3d01      	subs	r5, #1
  40361c:	d40f      	bmi.n	40363e <_fwalk+0x36>
  40361e:	89a3      	ldrh	r3, [r4, #12]
  403620:	2b01      	cmp	r3, #1
  403622:	f105 35ff 	add.w	r5, r5, #4294967295
  403626:	d906      	bls.n	403636 <_fwalk+0x2e>
  403628:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  40362c:	3301      	adds	r3, #1
  40362e:	4620      	mov	r0, r4
  403630:	d001      	beq.n	403636 <_fwalk+0x2e>
  403632:	47c0      	blx	r8
  403634:	4306      	orrs	r6, r0
  403636:	1c6b      	adds	r3, r5, #1
  403638:	f104 0468 	add.w	r4, r4, #104	; 0x68
  40363c:	d1ef      	bne.n	40361e <_fwalk+0x16>
  40363e:	683f      	ldr	r7, [r7, #0]
  403640:	2f00      	cmp	r7, #0
  403642:	d1e8      	bne.n	403616 <_fwalk+0xe>
  403644:	4630      	mov	r0, r6
  403646:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40364a:	463e      	mov	r6, r7
  40364c:	4630      	mov	r0, r6
  40364e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403652:	bf00      	nop

00403654 <_fwalk_reent>:
  403654:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  403658:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  40365c:	d01f      	beq.n	40369e <_fwalk_reent+0x4a>
  40365e:	4688      	mov	r8, r1
  403660:	4606      	mov	r6, r0
  403662:	f04f 0900 	mov.w	r9, #0
  403666:	687d      	ldr	r5, [r7, #4]
  403668:	68bc      	ldr	r4, [r7, #8]
  40366a:	3d01      	subs	r5, #1
  40366c:	d411      	bmi.n	403692 <_fwalk_reent+0x3e>
  40366e:	89a3      	ldrh	r3, [r4, #12]
  403670:	2b01      	cmp	r3, #1
  403672:	f105 35ff 	add.w	r5, r5, #4294967295
  403676:	d908      	bls.n	40368a <_fwalk_reent+0x36>
  403678:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  40367c:	3301      	adds	r3, #1
  40367e:	4621      	mov	r1, r4
  403680:	4630      	mov	r0, r6
  403682:	d002      	beq.n	40368a <_fwalk_reent+0x36>
  403684:	47c0      	blx	r8
  403686:	ea49 0900 	orr.w	r9, r9, r0
  40368a:	1c6b      	adds	r3, r5, #1
  40368c:	f104 0468 	add.w	r4, r4, #104	; 0x68
  403690:	d1ed      	bne.n	40366e <_fwalk_reent+0x1a>
  403692:	683f      	ldr	r7, [r7, #0]
  403694:	2f00      	cmp	r7, #0
  403696:	d1e6      	bne.n	403666 <_fwalk_reent+0x12>
  403698:	4648      	mov	r0, r9
  40369a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40369e:	46b9      	mov	r9, r7
  4036a0:	4648      	mov	r0, r9
  4036a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4036a6:	bf00      	nop

004036a8 <iswspace>:
  4036a8:	28ff      	cmp	r0, #255	; 0xff
  4036aa:	d807      	bhi.n	4036bc <iswspace+0x14>
  4036ac:	4b04      	ldr	r3, [pc, #16]	; (4036c0 <iswspace+0x18>)
  4036ae:	681b      	ldr	r3, [r3, #0]
  4036b0:	4418      	add	r0, r3
  4036b2:	7840      	ldrb	r0, [r0, #1]
  4036b4:	f000 0008 	and.w	r0, r0, #8
  4036b8:	b2c0      	uxtb	r0, r0
  4036ba:	4770      	bx	lr
  4036bc:	2000      	movs	r0, #0
  4036be:	4770      	bx	lr
  4036c0:	20000434 	.word	0x20000434

004036c4 <__locale_charset>:
  4036c4:	4800      	ldr	r0, [pc, #0]	; (4036c8 <__locale_charset+0x4>)
  4036c6:	4770      	bx	lr
  4036c8:	20000438 	.word	0x20000438

004036cc <__locale_mb_cur_max>:
  4036cc:	4b01      	ldr	r3, [pc, #4]	; (4036d4 <__locale_mb_cur_max+0x8>)
  4036ce:	6818      	ldr	r0, [r3, #0]
  4036d0:	4770      	bx	lr
  4036d2:	bf00      	nop
  4036d4:	20000458 	.word	0x20000458

004036d8 <__swhatbuf_r>:
  4036d8:	b570      	push	{r4, r5, r6, lr}
  4036da:	460d      	mov	r5, r1
  4036dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4036e0:	2900      	cmp	r1, #0
  4036e2:	b090      	sub	sp, #64	; 0x40
  4036e4:	4614      	mov	r4, r2
  4036e6:	461e      	mov	r6, r3
  4036e8:	db14      	blt.n	403714 <__swhatbuf_r+0x3c>
  4036ea:	aa01      	add	r2, sp, #4
  4036ec:	f001 fcb6 	bl	40505c <_fstat_r>
  4036f0:	2800      	cmp	r0, #0
  4036f2:	db0f      	blt.n	403714 <__swhatbuf_r+0x3c>
  4036f4:	9a02      	ldr	r2, [sp, #8]
  4036f6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  4036fa:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  4036fe:	fab2 f282 	clz	r2, r2
  403702:	0952      	lsrs	r2, r2, #5
  403704:	f44f 6380 	mov.w	r3, #1024	; 0x400
  403708:	f44f 6000 	mov.w	r0, #2048	; 0x800
  40370c:	6032      	str	r2, [r6, #0]
  40370e:	6023      	str	r3, [r4, #0]
  403710:	b010      	add	sp, #64	; 0x40
  403712:	bd70      	pop	{r4, r5, r6, pc}
  403714:	89a8      	ldrh	r0, [r5, #12]
  403716:	f000 0080 	and.w	r0, r0, #128	; 0x80
  40371a:	b282      	uxth	r2, r0
  40371c:	2000      	movs	r0, #0
  40371e:	6030      	str	r0, [r6, #0]
  403720:	b11a      	cbz	r2, 40372a <__swhatbuf_r+0x52>
  403722:	2340      	movs	r3, #64	; 0x40
  403724:	6023      	str	r3, [r4, #0]
  403726:	b010      	add	sp, #64	; 0x40
  403728:	bd70      	pop	{r4, r5, r6, pc}
  40372a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40372e:	4610      	mov	r0, r2
  403730:	6023      	str	r3, [r4, #0]
  403732:	b010      	add	sp, #64	; 0x40
  403734:	bd70      	pop	{r4, r5, r6, pc}
  403736:	bf00      	nop

00403738 <__smakebuf_r>:
  403738:	898a      	ldrh	r2, [r1, #12]
  40373a:	0792      	lsls	r2, r2, #30
  40373c:	460b      	mov	r3, r1
  40373e:	d506      	bpl.n	40374e <__smakebuf_r+0x16>
  403740:	f101 0243 	add.w	r2, r1, #67	; 0x43
  403744:	2101      	movs	r1, #1
  403746:	601a      	str	r2, [r3, #0]
  403748:	611a      	str	r2, [r3, #16]
  40374a:	6159      	str	r1, [r3, #20]
  40374c:	4770      	bx	lr
  40374e:	b5f0      	push	{r4, r5, r6, r7, lr}
  403750:	b083      	sub	sp, #12
  403752:	ab01      	add	r3, sp, #4
  403754:	466a      	mov	r2, sp
  403756:	460c      	mov	r4, r1
  403758:	4605      	mov	r5, r0
  40375a:	f7ff ffbd 	bl	4036d8 <__swhatbuf_r>
  40375e:	9900      	ldr	r1, [sp, #0]
  403760:	4606      	mov	r6, r0
  403762:	4628      	mov	r0, r5
  403764:	f000 f834 	bl	4037d0 <_malloc_r>
  403768:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40376c:	b1d0      	cbz	r0, 4037a4 <__smakebuf_r+0x6c>
  40376e:	9a01      	ldr	r2, [sp, #4]
  403770:	4f12      	ldr	r7, [pc, #72]	; (4037bc <__smakebuf_r+0x84>)
  403772:	9900      	ldr	r1, [sp, #0]
  403774:	63ef      	str	r7, [r5, #60]	; 0x3c
  403776:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40377a:	81a3      	strh	r3, [r4, #12]
  40377c:	6020      	str	r0, [r4, #0]
  40377e:	6120      	str	r0, [r4, #16]
  403780:	6161      	str	r1, [r4, #20]
  403782:	b91a      	cbnz	r2, 40378c <__smakebuf_r+0x54>
  403784:	4333      	orrs	r3, r6
  403786:	81a3      	strh	r3, [r4, #12]
  403788:	b003      	add	sp, #12
  40378a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40378c:	4628      	mov	r0, r5
  40378e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403792:	f001 fc77 	bl	405084 <_isatty_r>
  403796:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40379a:	2800      	cmp	r0, #0
  40379c:	d0f2      	beq.n	403784 <__smakebuf_r+0x4c>
  40379e:	f043 0301 	orr.w	r3, r3, #1
  4037a2:	e7ef      	b.n	403784 <__smakebuf_r+0x4c>
  4037a4:	059a      	lsls	r2, r3, #22
  4037a6:	d4ef      	bmi.n	403788 <__smakebuf_r+0x50>
  4037a8:	f104 0243 	add.w	r2, r4, #67	; 0x43
  4037ac:	f043 0302 	orr.w	r3, r3, #2
  4037b0:	2101      	movs	r1, #1
  4037b2:	81a3      	strh	r3, [r4, #12]
  4037b4:	6022      	str	r2, [r4, #0]
  4037b6:	6122      	str	r2, [r4, #16]
  4037b8:	6161      	str	r1, [r4, #20]
  4037ba:	e7e5      	b.n	403788 <__smakebuf_r+0x50>
  4037bc:	00402d09 	.word	0x00402d09

004037c0 <malloc>:
  4037c0:	4b02      	ldr	r3, [pc, #8]	; (4037cc <malloc+0xc>)
  4037c2:	4601      	mov	r1, r0
  4037c4:	6818      	ldr	r0, [r3, #0]
  4037c6:	f000 b803 	b.w	4037d0 <_malloc_r>
  4037ca:	bf00      	nop
  4037cc:	20000430 	.word	0x20000430

004037d0 <_malloc_r>:
  4037d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4037d4:	f101 050b 	add.w	r5, r1, #11
  4037d8:	2d16      	cmp	r5, #22
  4037da:	b083      	sub	sp, #12
  4037dc:	4606      	mov	r6, r0
  4037de:	f240 809f 	bls.w	403920 <_malloc_r+0x150>
  4037e2:	f035 0507 	bics.w	r5, r5, #7
  4037e6:	f100 80bf 	bmi.w	403968 <_malloc_r+0x198>
  4037ea:	42a9      	cmp	r1, r5
  4037ec:	f200 80bc 	bhi.w	403968 <_malloc_r+0x198>
  4037f0:	f000 fc3c 	bl	40406c <__malloc_lock>
  4037f4:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
  4037f8:	f0c0 829c 	bcc.w	403d34 <_malloc_r+0x564>
  4037fc:	0a6b      	lsrs	r3, r5, #9
  4037fe:	f000 80ba 	beq.w	403976 <_malloc_r+0x1a6>
  403802:	2b04      	cmp	r3, #4
  403804:	f200 8183 	bhi.w	403b0e <_malloc_r+0x33e>
  403808:	09a8      	lsrs	r0, r5, #6
  40380a:	f100 0e39 	add.w	lr, r0, #57	; 0x39
  40380e:	ea4f 034e 	mov.w	r3, lr, lsl #1
  403812:	3038      	adds	r0, #56	; 0x38
  403814:	4fc4      	ldr	r7, [pc, #784]	; (403b28 <_malloc_r+0x358>)
  403816:	eb07 0383 	add.w	r3, r7, r3, lsl #2
  40381a:	f1a3 0108 	sub.w	r1, r3, #8
  40381e:	685c      	ldr	r4, [r3, #4]
  403820:	42a1      	cmp	r1, r4
  403822:	d107      	bne.n	403834 <_malloc_r+0x64>
  403824:	e0ac      	b.n	403980 <_malloc_r+0x1b0>
  403826:	2a00      	cmp	r2, #0
  403828:	f280 80ac 	bge.w	403984 <_malloc_r+0x1b4>
  40382c:	68e4      	ldr	r4, [r4, #12]
  40382e:	42a1      	cmp	r1, r4
  403830:	f000 80a6 	beq.w	403980 <_malloc_r+0x1b0>
  403834:	6863      	ldr	r3, [r4, #4]
  403836:	f023 0303 	bic.w	r3, r3, #3
  40383a:	1b5a      	subs	r2, r3, r5
  40383c:	2a0f      	cmp	r2, #15
  40383e:	ddf2      	ble.n	403826 <_malloc_r+0x56>
  403840:	49b9      	ldr	r1, [pc, #740]	; (403b28 <_malloc_r+0x358>)
  403842:	693c      	ldr	r4, [r7, #16]
  403844:	f101 0e08 	add.w	lr, r1, #8
  403848:	4574      	cmp	r4, lr
  40384a:	f000 81b3 	beq.w	403bb4 <_malloc_r+0x3e4>
  40384e:	6863      	ldr	r3, [r4, #4]
  403850:	f023 0303 	bic.w	r3, r3, #3
  403854:	1b5a      	subs	r2, r3, r5
  403856:	2a0f      	cmp	r2, #15
  403858:	f300 8199 	bgt.w	403b8e <_malloc_r+0x3be>
  40385c:	2a00      	cmp	r2, #0
  40385e:	f8c1 e014 	str.w	lr, [r1, #20]
  403862:	f8c1 e010 	str.w	lr, [r1, #16]
  403866:	f280 809e 	bge.w	4039a6 <_malloc_r+0x1d6>
  40386a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40386e:	f080 8167 	bcs.w	403b40 <_malloc_r+0x370>
  403872:	08db      	lsrs	r3, r3, #3
  403874:	f103 0c01 	add.w	ip, r3, #1
  403878:	2201      	movs	r2, #1
  40387a:	109b      	asrs	r3, r3, #2
  40387c:	fa02 f303 	lsl.w	r3, r2, r3
  403880:	684a      	ldr	r2, [r1, #4]
  403882:	f851 803c 	ldr.w	r8, [r1, ip, lsl #3]
  403886:	f8c4 8008 	str.w	r8, [r4, #8]
  40388a:	eb01 09cc 	add.w	r9, r1, ip, lsl #3
  40388e:	431a      	orrs	r2, r3
  403890:	f1a9 0308 	sub.w	r3, r9, #8
  403894:	60e3      	str	r3, [r4, #12]
  403896:	604a      	str	r2, [r1, #4]
  403898:	f841 403c 	str.w	r4, [r1, ip, lsl #3]
  40389c:	f8c8 400c 	str.w	r4, [r8, #12]
  4038a0:	1083      	asrs	r3, r0, #2
  4038a2:	2401      	movs	r4, #1
  4038a4:	409c      	lsls	r4, r3
  4038a6:	4294      	cmp	r4, r2
  4038a8:	f200 808a 	bhi.w	4039c0 <_malloc_r+0x1f0>
  4038ac:	4214      	tst	r4, r2
  4038ae:	d106      	bne.n	4038be <_malloc_r+0xee>
  4038b0:	f020 0003 	bic.w	r0, r0, #3
  4038b4:	0064      	lsls	r4, r4, #1
  4038b6:	4214      	tst	r4, r2
  4038b8:	f100 0004 	add.w	r0, r0, #4
  4038bc:	d0fa      	beq.n	4038b4 <_malloc_r+0xe4>
  4038be:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4038c2:	46cc      	mov	ip, r9
  4038c4:	4680      	mov	r8, r0
  4038c6:	f8dc 100c 	ldr.w	r1, [ip, #12]
  4038ca:	458c      	cmp	ip, r1
  4038cc:	d107      	bne.n	4038de <_malloc_r+0x10e>
  4038ce:	e173      	b.n	403bb8 <_malloc_r+0x3e8>
  4038d0:	2a00      	cmp	r2, #0
  4038d2:	f280 8181 	bge.w	403bd8 <_malloc_r+0x408>
  4038d6:	68c9      	ldr	r1, [r1, #12]
  4038d8:	458c      	cmp	ip, r1
  4038da:	f000 816d 	beq.w	403bb8 <_malloc_r+0x3e8>
  4038de:	684b      	ldr	r3, [r1, #4]
  4038e0:	f023 0303 	bic.w	r3, r3, #3
  4038e4:	1b5a      	subs	r2, r3, r5
  4038e6:	2a0f      	cmp	r2, #15
  4038e8:	ddf2      	ble.n	4038d0 <_malloc_r+0x100>
  4038ea:	460c      	mov	r4, r1
  4038ec:	f8d1 c00c 	ldr.w	ip, [r1, #12]
  4038f0:	f854 8f08 	ldr.w	r8, [r4, #8]!
  4038f4:	194b      	adds	r3, r1, r5
  4038f6:	f045 0501 	orr.w	r5, r5, #1
  4038fa:	604d      	str	r5, [r1, #4]
  4038fc:	f042 0101 	orr.w	r1, r2, #1
  403900:	f8c8 c00c 	str.w	ip, [r8, #12]
  403904:	4630      	mov	r0, r6
  403906:	f8cc 8008 	str.w	r8, [ip, #8]
  40390a:	617b      	str	r3, [r7, #20]
  40390c:	613b      	str	r3, [r7, #16]
  40390e:	f8c3 e00c 	str.w	lr, [r3, #12]
  403912:	f8c3 e008 	str.w	lr, [r3, #8]
  403916:	6059      	str	r1, [r3, #4]
  403918:	509a      	str	r2, [r3, r2]
  40391a:	f000 fba9 	bl	404070 <__malloc_unlock>
  40391e:	e01f      	b.n	403960 <_malloc_r+0x190>
  403920:	2910      	cmp	r1, #16
  403922:	d821      	bhi.n	403968 <_malloc_r+0x198>
  403924:	f000 fba2 	bl	40406c <__malloc_lock>
  403928:	2510      	movs	r5, #16
  40392a:	2306      	movs	r3, #6
  40392c:	2002      	movs	r0, #2
  40392e:	4f7e      	ldr	r7, [pc, #504]	; (403b28 <_malloc_r+0x358>)
  403930:	eb07 0383 	add.w	r3, r7, r3, lsl #2
  403934:	f1a3 0208 	sub.w	r2, r3, #8
  403938:	685c      	ldr	r4, [r3, #4]
  40393a:	4294      	cmp	r4, r2
  40393c:	f000 8145 	beq.w	403bca <_malloc_r+0x3fa>
  403940:	6863      	ldr	r3, [r4, #4]
  403942:	68e1      	ldr	r1, [r4, #12]
  403944:	68a5      	ldr	r5, [r4, #8]
  403946:	f023 0303 	bic.w	r3, r3, #3
  40394a:	4423      	add	r3, r4
  40394c:	4630      	mov	r0, r6
  40394e:	685a      	ldr	r2, [r3, #4]
  403950:	60e9      	str	r1, [r5, #12]
  403952:	f042 0201 	orr.w	r2, r2, #1
  403956:	608d      	str	r5, [r1, #8]
  403958:	605a      	str	r2, [r3, #4]
  40395a:	f000 fb89 	bl	404070 <__malloc_unlock>
  40395e:	3408      	adds	r4, #8
  403960:	4620      	mov	r0, r4
  403962:	b003      	add	sp, #12
  403964:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403968:	2400      	movs	r4, #0
  40396a:	230c      	movs	r3, #12
  40396c:	4620      	mov	r0, r4
  40396e:	6033      	str	r3, [r6, #0]
  403970:	b003      	add	sp, #12
  403972:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403976:	2380      	movs	r3, #128	; 0x80
  403978:	f04f 0e40 	mov.w	lr, #64	; 0x40
  40397c:	203f      	movs	r0, #63	; 0x3f
  40397e:	e749      	b.n	403814 <_malloc_r+0x44>
  403980:	4670      	mov	r0, lr
  403982:	e75d      	b.n	403840 <_malloc_r+0x70>
  403984:	4423      	add	r3, r4
  403986:	68e1      	ldr	r1, [r4, #12]
  403988:	685a      	ldr	r2, [r3, #4]
  40398a:	68a5      	ldr	r5, [r4, #8]
  40398c:	f042 0201 	orr.w	r2, r2, #1
  403990:	60e9      	str	r1, [r5, #12]
  403992:	4630      	mov	r0, r6
  403994:	608d      	str	r5, [r1, #8]
  403996:	605a      	str	r2, [r3, #4]
  403998:	f000 fb6a 	bl	404070 <__malloc_unlock>
  40399c:	3408      	adds	r4, #8
  40399e:	4620      	mov	r0, r4
  4039a0:	b003      	add	sp, #12
  4039a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4039a6:	4423      	add	r3, r4
  4039a8:	4630      	mov	r0, r6
  4039aa:	685a      	ldr	r2, [r3, #4]
  4039ac:	f042 0201 	orr.w	r2, r2, #1
  4039b0:	605a      	str	r2, [r3, #4]
  4039b2:	f000 fb5d 	bl	404070 <__malloc_unlock>
  4039b6:	3408      	adds	r4, #8
  4039b8:	4620      	mov	r0, r4
  4039ba:	b003      	add	sp, #12
  4039bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4039c0:	68bc      	ldr	r4, [r7, #8]
  4039c2:	6863      	ldr	r3, [r4, #4]
  4039c4:	f023 0803 	bic.w	r8, r3, #3
  4039c8:	45a8      	cmp	r8, r5
  4039ca:	d304      	bcc.n	4039d6 <_malloc_r+0x206>
  4039cc:	ebc5 0308 	rsb	r3, r5, r8
  4039d0:	2b0f      	cmp	r3, #15
  4039d2:	f300 808c 	bgt.w	403aee <_malloc_r+0x31e>
  4039d6:	4b55      	ldr	r3, [pc, #340]	; (403b2c <_malloc_r+0x35c>)
  4039d8:	f8df 9160 	ldr.w	r9, [pc, #352]	; 403b3c <_malloc_r+0x36c>
  4039dc:	681a      	ldr	r2, [r3, #0]
  4039de:	f8d9 3000 	ldr.w	r3, [r9]
  4039e2:	3301      	adds	r3, #1
  4039e4:	442a      	add	r2, r5
  4039e6:	eb04 0a08 	add.w	sl, r4, r8
  4039ea:	f000 8160 	beq.w	403cae <_malloc_r+0x4de>
  4039ee:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
  4039f2:	320f      	adds	r2, #15
  4039f4:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
  4039f8:	f022 020f 	bic.w	r2, r2, #15
  4039fc:	4611      	mov	r1, r2
  4039fe:	4630      	mov	r0, r6
  403a00:	9201      	str	r2, [sp, #4]
  403a02:	f000 fdbb 	bl	40457c <_sbrk_r>
  403a06:	f1b0 3fff 	cmp.w	r0, #4294967295
  403a0a:	4683      	mov	fp, r0
  403a0c:	9a01      	ldr	r2, [sp, #4]
  403a0e:	f000 8158 	beq.w	403cc2 <_malloc_r+0x4f2>
  403a12:	4582      	cmp	sl, r0
  403a14:	f200 80fc 	bhi.w	403c10 <_malloc_r+0x440>
  403a18:	4b45      	ldr	r3, [pc, #276]	; (403b30 <_malloc_r+0x360>)
  403a1a:	6819      	ldr	r1, [r3, #0]
  403a1c:	45da      	cmp	sl, fp
  403a1e:	4411      	add	r1, r2
  403a20:	6019      	str	r1, [r3, #0]
  403a22:	f000 8153 	beq.w	403ccc <_malloc_r+0x4fc>
  403a26:	f8d9 0000 	ldr.w	r0, [r9]
  403a2a:	f8df e110 	ldr.w	lr, [pc, #272]	; 403b3c <_malloc_r+0x36c>
  403a2e:	3001      	adds	r0, #1
  403a30:	bf1b      	ittet	ne
  403a32:	ebca 0a0b 	rsbne	sl, sl, fp
  403a36:	4451      	addne	r1, sl
  403a38:	f8ce b000 	streq.w	fp, [lr]
  403a3c:	6019      	strne	r1, [r3, #0]
  403a3e:	f01b 0107 	ands.w	r1, fp, #7
  403a42:	f000 8117 	beq.w	403c74 <_malloc_r+0x4a4>
  403a46:	f1c1 0008 	rsb	r0, r1, #8
  403a4a:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  403a4e:	4483      	add	fp, r0
  403a50:	3108      	adds	r1, #8
  403a52:	445a      	add	r2, fp
  403a54:	f3c2 020b 	ubfx	r2, r2, #0, #12
  403a58:	ebc2 0901 	rsb	r9, r2, r1
  403a5c:	4649      	mov	r1, r9
  403a5e:	4630      	mov	r0, r6
  403a60:	9301      	str	r3, [sp, #4]
  403a62:	f000 fd8b 	bl	40457c <_sbrk_r>
  403a66:	1c43      	adds	r3, r0, #1
  403a68:	9b01      	ldr	r3, [sp, #4]
  403a6a:	f000 813f 	beq.w	403cec <_malloc_r+0x51c>
  403a6e:	ebcb 0200 	rsb	r2, fp, r0
  403a72:	444a      	add	r2, r9
  403a74:	f042 0201 	orr.w	r2, r2, #1
  403a78:	6819      	ldr	r1, [r3, #0]
  403a7a:	f8c7 b008 	str.w	fp, [r7, #8]
  403a7e:	4449      	add	r1, r9
  403a80:	42bc      	cmp	r4, r7
  403a82:	f8cb 2004 	str.w	r2, [fp, #4]
  403a86:	6019      	str	r1, [r3, #0]
  403a88:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 403b30 <_malloc_r+0x360>
  403a8c:	d016      	beq.n	403abc <_malloc_r+0x2ec>
  403a8e:	f1b8 0f0f 	cmp.w	r8, #15
  403a92:	f240 80fd 	bls.w	403c90 <_malloc_r+0x4c0>
  403a96:	6862      	ldr	r2, [r4, #4]
  403a98:	f1a8 030c 	sub.w	r3, r8, #12
  403a9c:	f023 0307 	bic.w	r3, r3, #7
  403aa0:	18e0      	adds	r0, r4, r3
  403aa2:	f002 0201 	and.w	r2, r2, #1
  403aa6:	f04f 0e05 	mov.w	lr, #5
  403aaa:	431a      	orrs	r2, r3
  403aac:	2b0f      	cmp	r3, #15
  403aae:	6062      	str	r2, [r4, #4]
  403ab0:	f8c0 e004 	str.w	lr, [r0, #4]
  403ab4:	f8c0 e008 	str.w	lr, [r0, #8]
  403ab8:	f200 811c 	bhi.w	403cf4 <_malloc_r+0x524>
  403abc:	4b1d      	ldr	r3, [pc, #116]	; (403b34 <_malloc_r+0x364>)
  403abe:	68bc      	ldr	r4, [r7, #8]
  403ac0:	681a      	ldr	r2, [r3, #0]
  403ac2:	4291      	cmp	r1, r2
  403ac4:	bf88      	it	hi
  403ac6:	6019      	strhi	r1, [r3, #0]
  403ac8:	4b1b      	ldr	r3, [pc, #108]	; (403b38 <_malloc_r+0x368>)
  403aca:	681a      	ldr	r2, [r3, #0]
  403acc:	4291      	cmp	r1, r2
  403ace:	6862      	ldr	r2, [r4, #4]
  403ad0:	bf88      	it	hi
  403ad2:	6019      	strhi	r1, [r3, #0]
  403ad4:	f022 0203 	bic.w	r2, r2, #3
  403ad8:	4295      	cmp	r5, r2
  403ada:	eba2 0305 	sub.w	r3, r2, r5
  403ade:	d801      	bhi.n	403ae4 <_malloc_r+0x314>
  403ae0:	2b0f      	cmp	r3, #15
  403ae2:	dc04      	bgt.n	403aee <_malloc_r+0x31e>
  403ae4:	4630      	mov	r0, r6
  403ae6:	f000 fac3 	bl	404070 <__malloc_unlock>
  403aea:	2400      	movs	r4, #0
  403aec:	e738      	b.n	403960 <_malloc_r+0x190>
  403aee:	1962      	adds	r2, r4, r5
  403af0:	f043 0301 	orr.w	r3, r3, #1
  403af4:	f045 0501 	orr.w	r5, r5, #1
  403af8:	6065      	str	r5, [r4, #4]
  403afa:	4630      	mov	r0, r6
  403afc:	60ba      	str	r2, [r7, #8]
  403afe:	6053      	str	r3, [r2, #4]
  403b00:	f000 fab6 	bl	404070 <__malloc_unlock>
  403b04:	3408      	adds	r4, #8
  403b06:	4620      	mov	r0, r4
  403b08:	b003      	add	sp, #12
  403b0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403b0e:	2b14      	cmp	r3, #20
  403b10:	d971      	bls.n	403bf6 <_malloc_r+0x426>
  403b12:	2b54      	cmp	r3, #84	; 0x54
  403b14:	f200 80a4 	bhi.w	403c60 <_malloc_r+0x490>
  403b18:	0b28      	lsrs	r0, r5, #12
  403b1a:	f100 0e6f 	add.w	lr, r0, #111	; 0x6f
  403b1e:	ea4f 034e 	mov.w	r3, lr, lsl #1
  403b22:	306e      	adds	r0, #110	; 0x6e
  403b24:	e676      	b.n	403814 <_malloc_r+0x44>
  403b26:	bf00      	nop
  403b28:	2000045c 	.word	0x2000045c
  403b2c:	200008a8 	.word	0x200008a8
  403b30:	200008ac 	.word	0x200008ac
  403b34:	200008a4 	.word	0x200008a4
  403b38:	200008a0 	.word	0x200008a0
  403b3c:	20000868 	.word	0x20000868
  403b40:	0a5a      	lsrs	r2, r3, #9
  403b42:	2a04      	cmp	r2, #4
  403b44:	d95e      	bls.n	403c04 <_malloc_r+0x434>
  403b46:	2a14      	cmp	r2, #20
  403b48:	f200 80b3 	bhi.w	403cb2 <_malloc_r+0x4e2>
  403b4c:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  403b50:	0049      	lsls	r1, r1, #1
  403b52:	325b      	adds	r2, #91	; 0x5b
  403b54:	eb07 0c81 	add.w	ip, r7, r1, lsl #2
  403b58:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
  403b5c:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 403d3c <_malloc_r+0x56c>
  403b60:	f1ac 0c08 	sub.w	ip, ip, #8
  403b64:	458c      	cmp	ip, r1
  403b66:	f000 8088 	beq.w	403c7a <_malloc_r+0x4aa>
  403b6a:	684a      	ldr	r2, [r1, #4]
  403b6c:	f022 0203 	bic.w	r2, r2, #3
  403b70:	4293      	cmp	r3, r2
  403b72:	d202      	bcs.n	403b7a <_malloc_r+0x3aa>
  403b74:	6889      	ldr	r1, [r1, #8]
  403b76:	458c      	cmp	ip, r1
  403b78:	d1f7      	bne.n	403b6a <_malloc_r+0x39a>
  403b7a:	f8d1 c00c 	ldr.w	ip, [r1, #12]
  403b7e:	687a      	ldr	r2, [r7, #4]
  403b80:	f8c4 c00c 	str.w	ip, [r4, #12]
  403b84:	60a1      	str	r1, [r4, #8]
  403b86:	f8cc 4008 	str.w	r4, [ip, #8]
  403b8a:	60cc      	str	r4, [r1, #12]
  403b8c:	e688      	b.n	4038a0 <_malloc_r+0xd0>
  403b8e:	1963      	adds	r3, r4, r5
  403b90:	f042 0701 	orr.w	r7, r2, #1
  403b94:	f045 0501 	orr.w	r5, r5, #1
  403b98:	6065      	str	r5, [r4, #4]
  403b9a:	4630      	mov	r0, r6
  403b9c:	614b      	str	r3, [r1, #20]
  403b9e:	610b      	str	r3, [r1, #16]
  403ba0:	f8c3 e00c 	str.w	lr, [r3, #12]
  403ba4:	f8c3 e008 	str.w	lr, [r3, #8]
  403ba8:	605f      	str	r7, [r3, #4]
  403baa:	509a      	str	r2, [r3, r2]
  403bac:	3408      	adds	r4, #8
  403bae:	f000 fa5f 	bl	404070 <__malloc_unlock>
  403bb2:	e6d5      	b.n	403960 <_malloc_r+0x190>
  403bb4:	684a      	ldr	r2, [r1, #4]
  403bb6:	e673      	b.n	4038a0 <_malloc_r+0xd0>
  403bb8:	f108 0801 	add.w	r8, r8, #1
  403bbc:	f018 0f03 	tst.w	r8, #3
  403bc0:	f10c 0c08 	add.w	ip, ip, #8
  403bc4:	f47f ae7f 	bne.w	4038c6 <_malloc_r+0xf6>
  403bc8:	e030      	b.n	403c2c <_malloc_r+0x45c>
  403bca:	68dc      	ldr	r4, [r3, #12]
  403bcc:	42a3      	cmp	r3, r4
  403bce:	bf08      	it	eq
  403bd0:	3002      	addeq	r0, #2
  403bd2:	f43f ae35 	beq.w	403840 <_malloc_r+0x70>
  403bd6:	e6b3      	b.n	403940 <_malloc_r+0x170>
  403bd8:	440b      	add	r3, r1
  403bda:	460c      	mov	r4, r1
  403bdc:	685a      	ldr	r2, [r3, #4]
  403bde:	68c9      	ldr	r1, [r1, #12]
  403be0:	f854 5f08 	ldr.w	r5, [r4, #8]!
  403be4:	f042 0201 	orr.w	r2, r2, #1
  403be8:	605a      	str	r2, [r3, #4]
  403bea:	4630      	mov	r0, r6
  403bec:	60e9      	str	r1, [r5, #12]
  403bee:	608d      	str	r5, [r1, #8]
  403bf0:	f000 fa3e 	bl	404070 <__malloc_unlock>
  403bf4:	e6b4      	b.n	403960 <_malloc_r+0x190>
  403bf6:	f103 0e5c 	add.w	lr, r3, #92	; 0x5c
  403bfa:	f103 005b 	add.w	r0, r3, #91	; 0x5b
  403bfe:	ea4f 034e 	mov.w	r3, lr, lsl #1
  403c02:	e607      	b.n	403814 <_malloc_r+0x44>
  403c04:	099a      	lsrs	r2, r3, #6
  403c06:	f102 0139 	add.w	r1, r2, #57	; 0x39
  403c0a:	0049      	lsls	r1, r1, #1
  403c0c:	3238      	adds	r2, #56	; 0x38
  403c0e:	e7a1      	b.n	403b54 <_malloc_r+0x384>
  403c10:	42bc      	cmp	r4, r7
  403c12:	4b4a      	ldr	r3, [pc, #296]	; (403d3c <_malloc_r+0x56c>)
  403c14:	f43f af00 	beq.w	403a18 <_malloc_r+0x248>
  403c18:	689c      	ldr	r4, [r3, #8]
  403c1a:	6862      	ldr	r2, [r4, #4]
  403c1c:	f022 0203 	bic.w	r2, r2, #3
  403c20:	e75a      	b.n	403ad8 <_malloc_r+0x308>
  403c22:	f859 3908 	ldr.w	r3, [r9], #-8
  403c26:	4599      	cmp	r9, r3
  403c28:	f040 8082 	bne.w	403d30 <_malloc_r+0x560>
  403c2c:	f010 0f03 	tst.w	r0, #3
  403c30:	f100 30ff 	add.w	r0, r0, #4294967295
  403c34:	d1f5      	bne.n	403c22 <_malloc_r+0x452>
  403c36:	687b      	ldr	r3, [r7, #4]
  403c38:	ea23 0304 	bic.w	r3, r3, r4
  403c3c:	607b      	str	r3, [r7, #4]
  403c3e:	0064      	lsls	r4, r4, #1
  403c40:	429c      	cmp	r4, r3
  403c42:	f63f aebd 	bhi.w	4039c0 <_malloc_r+0x1f0>
  403c46:	2c00      	cmp	r4, #0
  403c48:	f43f aeba 	beq.w	4039c0 <_malloc_r+0x1f0>
  403c4c:	421c      	tst	r4, r3
  403c4e:	4640      	mov	r0, r8
  403c50:	f47f ae35 	bne.w	4038be <_malloc_r+0xee>
  403c54:	0064      	lsls	r4, r4, #1
  403c56:	421c      	tst	r4, r3
  403c58:	f100 0004 	add.w	r0, r0, #4
  403c5c:	d0fa      	beq.n	403c54 <_malloc_r+0x484>
  403c5e:	e62e      	b.n	4038be <_malloc_r+0xee>
  403c60:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  403c64:	d818      	bhi.n	403c98 <_malloc_r+0x4c8>
  403c66:	0be8      	lsrs	r0, r5, #15
  403c68:	f100 0e78 	add.w	lr, r0, #120	; 0x78
  403c6c:	ea4f 034e 	mov.w	r3, lr, lsl #1
  403c70:	3077      	adds	r0, #119	; 0x77
  403c72:	e5cf      	b.n	403814 <_malloc_r+0x44>
  403c74:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  403c78:	e6eb      	b.n	403a52 <_malloc_r+0x282>
  403c7a:	2101      	movs	r1, #1
  403c7c:	f8d8 3004 	ldr.w	r3, [r8, #4]
  403c80:	1092      	asrs	r2, r2, #2
  403c82:	fa01 f202 	lsl.w	r2, r1, r2
  403c86:	431a      	orrs	r2, r3
  403c88:	f8c8 2004 	str.w	r2, [r8, #4]
  403c8c:	4661      	mov	r1, ip
  403c8e:	e777      	b.n	403b80 <_malloc_r+0x3b0>
  403c90:	2301      	movs	r3, #1
  403c92:	f8cb 3004 	str.w	r3, [fp, #4]
  403c96:	e725      	b.n	403ae4 <_malloc_r+0x314>
  403c98:	f240 5254 	movw	r2, #1364	; 0x554
  403c9c:	4293      	cmp	r3, r2
  403c9e:	d820      	bhi.n	403ce2 <_malloc_r+0x512>
  403ca0:	0ca8      	lsrs	r0, r5, #18
  403ca2:	f100 0e7d 	add.w	lr, r0, #125	; 0x7d
  403ca6:	ea4f 034e 	mov.w	r3, lr, lsl #1
  403caa:	307c      	adds	r0, #124	; 0x7c
  403cac:	e5b2      	b.n	403814 <_malloc_r+0x44>
  403cae:	3210      	adds	r2, #16
  403cb0:	e6a4      	b.n	4039fc <_malloc_r+0x22c>
  403cb2:	2a54      	cmp	r2, #84	; 0x54
  403cb4:	d826      	bhi.n	403d04 <_malloc_r+0x534>
  403cb6:	0b1a      	lsrs	r2, r3, #12
  403cb8:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  403cbc:	0049      	lsls	r1, r1, #1
  403cbe:	326e      	adds	r2, #110	; 0x6e
  403cc0:	e748      	b.n	403b54 <_malloc_r+0x384>
  403cc2:	68bc      	ldr	r4, [r7, #8]
  403cc4:	6862      	ldr	r2, [r4, #4]
  403cc6:	f022 0203 	bic.w	r2, r2, #3
  403cca:	e705      	b.n	403ad8 <_malloc_r+0x308>
  403ccc:	f3ca 000b 	ubfx	r0, sl, #0, #12
  403cd0:	2800      	cmp	r0, #0
  403cd2:	f47f aea8 	bne.w	403a26 <_malloc_r+0x256>
  403cd6:	4442      	add	r2, r8
  403cd8:	68bb      	ldr	r3, [r7, #8]
  403cda:	f042 0201 	orr.w	r2, r2, #1
  403cde:	605a      	str	r2, [r3, #4]
  403ce0:	e6ec      	b.n	403abc <_malloc_r+0x2ec>
  403ce2:	23fe      	movs	r3, #254	; 0xfe
  403ce4:	f04f 0e7f 	mov.w	lr, #127	; 0x7f
  403ce8:	207e      	movs	r0, #126	; 0x7e
  403cea:	e593      	b.n	403814 <_malloc_r+0x44>
  403cec:	2201      	movs	r2, #1
  403cee:	f04f 0900 	mov.w	r9, #0
  403cf2:	e6c1      	b.n	403a78 <_malloc_r+0x2a8>
  403cf4:	f104 0108 	add.w	r1, r4, #8
  403cf8:	4630      	mov	r0, r6
  403cfa:	f7ff fa1b 	bl	403134 <_free_r>
  403cfe:	f8d9 1000 	ldr.w	r1, [r9]
  403d02:	e6db      	b.n	403abc <_malloc_r+0x2ec>
  403d04:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  403d08:	d805      	bhi.n	403d16 <_malloc_r+0x546>
  403d0a:	0bda      	lsrs	r2, r3, #15
  403d0c:	f102 0178 	add.w	r1, r2, #120	; 0x78
  403d10:	0049      	lsls	r1, r1, #1
  403d12:	3277      	adds	r2, #119	; 0x77
  403d14:	e71e      	b.n	403b54 <_malloc_r+0x384>
  403d16:	f240 5154 	movw	r1, #1364	; 0x554
  403d1a:	428a      	cmp	r2, r1
  403d1c:	d805      	bhi.n	403d2a <_malloc_r+0x55a>
  403d1e:	0c9a      	lsrs	r2, r3, #18
  403d20:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  403d24:	0049      	lsls	r1, r1, #1
  403d26:	327c      	adds	r2, #124	; 0x7c
  403d28:	e714      	b.n	403b54 <_malloc_r+0x384>
  403d2a:	21fe      	movs	r1, #254	; 0xfe
  403d2c:	227e      	movs	r2, #126	; 0x7e
  403d2e:	e711      	b.n	403b54 <_malloc_r+0x384>
  403d30:	687b      	ldr	r3, [r7, #4]
  403d32:	e784      	b.n	403c3e <_malloc_r+0x46e>
  403d34:	08e8      	lsrs	r0, r5, #3
  403d36:	1c43      	adds	r3, r0, #1
  403d38:	005b      	lsls	r3, r3, #1
  403d3a:	e5f8      	b.n	40392e <_malloc_r+0x15e>
  403d3c:	2000045c 	.word	0x2000045c

00403d40 <_mbrtowc_r>:
  403d40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  403d44:	b083      	sub	sp, #12
  403d46:	4605      	mov	r5, r0
  403d48:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403d4a:	4614      	mov	r4, r2
  403d4c:	b1b2      	cbz	r2, 403d7c <_mbrtowc_r+0x3c>
  403d4e:	4698      	mov	r8, r3
  403d50:	4b10      	ldr	r3, [pc, #64]	; (403d94 <_mbrtowc_r+0x54>)
  403d52:	460f      	mov	r7, r1
  403d54:	f8d3 9000 	ldr.w	r9, [r3]
  403d58:	f7ff fcb4 	bl	4036c4 <__locale_charset>
  403d5c:	4643      	mov	r3, r8
  403d5e:	e88d 0041 	stmia.w	sp, {r0, r6}
  403d62:	4622      	mov	r2, r4
  403d64:	4639      	mov	r1, r7
  403d66:	4628      	mov	r0, r5
  403d68:	47c8      	blx	r9
  403d6a:	1c43      	adds	r3, r0, #1
  403d6c:	d103      	bne.n	403d76 <_mbrtowc_r+0x36>
  403d6e:	2200      	movs	r2, #0
  403d70:	238a      	movs	r3, #138	; 0x8a
  403d72:	6032      	str	r2, [r6, #0]
  403d74:	602b      	str	r3, [r5, #0]
  403d76:	b003      	add	sp, #12
  403d78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  403d7c:	4b05      	ldr	r3, [pc, #20]	; (403d94 <_mbrtowc_r+0x54>)
  403d7e:	681f      	ldr	r7, [r3, #0]
  403d80:	f7ff fca0 	bl	4036c4 <__locale_charset>
  403d84:	4621      	mov	r1, r4
  403d86:	e88d 0041 	stmia.w	sp, {r0, r6}
  403d8a:	2301      	movs	r3, #1
  403d8c:	4a02      	ldr	r2, [pc, #8]	; (403d98 <_mbrtowc_r+0x58>)
  403d8e:	4628      	mov	r0, r5
  403d90:	47b8      	blx	r7
  403d92:	e7ea      	b.n	403d6a <_mbrtowc_r+0x2a>
  403d94:	2000086c 	.word	0x2000086c
  403d98:	004056b4 	.word	0x004056b4

00403d9c <__ascii_mbtowc>:
  403d9c:	b082      	sub	sp, #8
  403d9e:	b149      	cbz	r1, 403db4 <__ascii_mbtowc+0x18>
  403da0:	b15a      	cbz	r2, 403dba <__ascii_mbtowc+0x1e>
  403da2:	b16b      	cbz	r3, 403dc0 <__ascii_mbtowc+0x24>
  403da4:	7813      	ldrb	r3, [r2, #0]
  403da6:	600b      	str	r3, [r1, #0]
  403da8:	7812      	ldrb	r2, [r2, #0]
  403daa:	1c10      	adds	r0, r2, #0
  403dac:	bf18      	it	ne
  403dae:	2001      	movne	r0, #1
  403db0:	b002      	add	sp, #8
  403db2:	4770      	bx	lr
  403db4:	a901      	add	r1, sp, #4
  403db6:	2a00      	cmp	r2, #0
  403db8:	d1f3      	bne.n	403da2 <__ascii_mbtowc+0x6>
  403dba:	4610      	mov	r0, r2
  403dbc:	b002      	add	sp, #8
  403dbe:	4770      	bx	lr
  403dc0:	f06f 0001 	mvn.w	r0, #1
  403dc4:	e7f4      	b.n	403db0 <__ascii_mbtowc+0x14>
  403dc6:	bf00      	nop
	...

00403dd0 <memchr>:
  403dd0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  403dd4:	2a10      	cmp	r2, #16
  403dd6:	db2b      	blt.n	403e30 <memchr+0x60>
  403dd8:	f010 0f07 	tst.w	r0, #7
  403ddc:	d008      	beq.n	403df0 <memchr+0x20>
  403dde:	f810 3b01 	ldrb.w	r3, [r0], #1
  403de2:	3a01      	subs	r2, #1
  403de4:	428b      	cmp	r3, r1
  403de6:	d02d      	beq.n	403e44 <memchr+0x74>
  403de8:	f010 0f07 	tst.w	r0, #7
  403dec:	b342      	cbz	r2, 403e40 <memchr+0x70>
  403dee:	d1f6      	bne.n	403dde <memchr+0xe>
  403df0:	b4f0      	push	{r4, r5, r6, r7}
  403df2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  403df6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  403dfa:	f022 0407 	bic.w	r4, r2, #7
  403dfe:	f07f 0700 	mvns.w	r7, #0
  403e02:	2300      	movs	r3, #0
  403e04:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  403e08:	3c08      	subs	r4, #8
  403e0a:	ea85 0501 	eor.w	r5, r5, r1
  403e0e:	ea86 0601 	eor.w	r6, r6, r1
  403e12:	fa85 f547 	uadd8	r5, r5, r7
  403e16:	faa3 f587 	sel	r5, r3, r7
  403e1a:	fa86 f647 	uadd8	r6, r6, r7
  403e1e:	faa5 f687 	sel	r6, r5, r7
  403e22:	b98e      	cbnz	r6, 403e48 <memchr+0x78>
  403e24:	d1ee      	bne.n	403e04 <memchr+0x34>
  403e26:	bcf0      	pop	{r4, r5, r6, r7}
  403e28:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  403e2c:	f002 0207 	and.w	r2, r2, #7
  403e30:	b132      	cbz	r2, 403e40 <memchr+0x70>
  403e32:	f810 3b01 	ldrb.w	r3, [r0], #1
  403e36:	3a01      	subs	r2, #1
  403e38:	ea83 0301 	eor.w	r3, r3, r1
  403e3c:	b113      	cbz	r3, 403e44 <memchr+0x74>
  403e3e:	d1f8      	bne.n	403e32 <memchr+0x62>
  403e40:	2000      	movs	r0, #0
  403e42:	4770      	bx	lr
  403e44:	3801      	subs	r0, #1
  403e46:	4770      	bx	lr
  403e48:	2d00      	cmp	r5, #0
  403e4a:	bf06      	itte	eq
  403e4c:	4635      	moveq	r5, r6
  403e4e:	3803      	subeq	r0, #3
  403e50:	3807      	subne	r0, #7
  403e52:	f015 0f01 	tst.w	r5, #1
  403e56:	d107      	bne.n	403e68 <memchr+0x98>
  403e58:	3001      	adds	r0, #1
  403e5a:	f415 7f80 	tst.w	r5, #256	; 0x100
  403e5e:	bf02      	ittt	eq
  403e60:	3001      	addeq	r0, #1
  403e62:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  403e66:	3001      	addeq	r0, #1
  403e68:	bcf0      	pop	{r4, r5, r6, r7}
  403e6a:	3801      	subs	r0, #1
  403e6c:	4770      	bx	lr
  403e6e:	bf00      	nop

00403e70 <memcpy>:
  403e70:	4684      	mov	ip, r0
  403e72:	ea41 0300 	orr.w	r3, r1, r0
  403e76:	f013 0303 	ands.w	r3, r3, #3
  403e7a:	d16d      	bne.n	403f58 <memcpy+0xe8>
  403e7c:	3a40      	subs	r2, #64	; 0x40
  403e7e:	d341      	bcc.n	403f04 <memcpy+0x94>
  403e80:	f851 3b04 	ldr.w	r3, [r1], #4
  403e84:	f840 3b04 	str.w	r3, [r0], #4
  403e88:	f851 3b04 	ldr.w	r3, [r1], #4
  403e8c:	f840 3b04 	str.w	r3, [r0], #4
  403e90:	f851 3b04 	ldr.w	r3, [r1], #4
  403e94:	f840 3b04 	str.w	r3, [r0], #4
  403e98:	f851 3b04 	ldr.w	r3, [r1], #4
  403e9c:	f840 3b04 	str.w	r3, [r0], #4
  403ea0:	f851 3b04 	ldr.w	r3, [r1], #4
  403ea4:	f840 3b04 	str.w	r3, [r0], #4
  403ea8:	f851 3b04 	ldr.w	r3, [r1], #4
  403eac:	f840 3b04 	str.w	r3, [r0], #4
  403eb0:	f851 3b04 	ldr.w	r3, [r1], #4
  403eb4:	f840 3b04 	str.w	r3, [r0], #4
  403eb8:	f851 3b04 	ldr.w	r3, [r1], #4
  403ebc:	f840 3b04 	str.w	r3, [r0], #4
  403ec0:	f851 3b04 	ldr.w	r3, [r1], #4
  403ec4:	f840 3b04 	str.w	r3, [r0], #4
  403ec8:	f851 3b04 	ldr.w	r3, [r1], #4
  403ecc:	f840 3b04 	str.w	r3, [r0], #4
  403ed0:	f851 3b04 	ldr.w	r3, [r1], #4
  403ed4:	f840 3b04 	str.w	r3, [r0], #4
  403ed8:	f851 3b04 	ldr.w	r3, [r1], #4
  403edc:	f840 3b04 	str.w	r3, [r0], #4
  403ee0:	f851 3b04 	ldr.w	r3, [r1], #4
  403ee4:	f840 3b04 	str.w	r3, [r0], #4
  403ee8:	f851 3b04 	ldr.w	r3, [r1], #4
  403eec:	f840 3b04 	str.w	r3, [r0], #4
  403ef0:	f851 3b04 	ldr.w	r3, [r1], #4
  403ef4:	f840 3b04 	str.w	r3, [r0], #4
  403ef8:	f851 3b04 	ldr.w	r3, [r1], #4
  403efc:	f840 3b04 	str.w	r3, [r0], #4
  403f00:	3a40      	subs	r2, #64	; 0x40
  403f02:	d2bd      	bcs.n	403e80 <memcpy+0x10>
  403f04:	3230      	adds	r2, #48	; 0x30
  403f06:	d311      	bcc.n	403f2c <memcpy+0xbc>
  403f08:	f851 3b04 	ldr.w	r3, [r1], #4
  403f0c:	f840 3b04 	str.w	r3, [r0], #4
  403f10:	f851 3b04 	ldr.w	r3, [r1], #4
  403f14:	f840 3b04 	str.w	r3, [r0], #4
  403f18:	f851 3b04 	ldr.w	r3, [r1], #4
  403f1c:	f840 3b04 	str.w	r3, [r0], #4
  403f20:	f851 3b04 	ldr.w	r3, [r1], #4
  403f24:	f840 3b04 	str.w	r3, [r0], #4
  403f28:	3a10      	subs	r2, #16
  403f2a:	d2ed      	bcs.n	403f08 <memcpy+0x98>
  403f2c:	320c      	adds	r2, #12
  403f2e:	d305      	bcc.n	403f3c <memcpy+0xcc>
  403f30:	f851 3b04 	ldr.w	r3, [r1], #4
  403f34:	f840 3b04 	str.w	r3, [r0], #4
  403f38:	3a04      	subs	r2, #4
  403f3a:	d2f9      	bcs.n	403f30 <memcpy+0xc0>
  403f3c:	3204      	adds	r2, #4
  403f3e:	d008      	beq.n	403f52 <memcpy+0xe2>
  403f40:	07d2      	lsls	r2, r2, #31
  403f42:	bf1c      	itt	ne
  403f44:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403f48:	f800 3b01 	strbne.w	r3, [r0], #1
  403f4c:	d301      	bcc.n	403f52 <memcpy+0xe2>
  403f4e:	880b      	ldrh	r3, [r1, #0]
  403f50:	8003      	strh	r3, [r0, #0]
  403f52:	4660      	mov	r0, ip
  403f54:	4770      	bx	lr
  403f56:	bf00      	nop
  403f58:	2a08      	cmp	r2, #8
  403f5a:	d313      	bcc.n	403f84 <memcpy+0x114>
  403f5c:	078b      	lsls	r3, r1, #30
  403f5e:	d08d      	beq.n	403e7c <memcpy+0xc>
  403f60:	f010 0303 	ands.w	r3, r0, #3
  403f64:	d08a      	beq.n	403e7c <memcpy+0xc>
  403f66:	f1c3 0304 	rsb	r3, r3, #4
  403f6a:	1ad2      	subs	r2, r2, r3
  403f6c:	07db      	lsls	r3, r3, #31
  403f6e:	bf1c      	itt	ne
  403f70:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403f74:	f800 3b01 	strbne.w	r3, [r0], #1
  403f78:	d380      	bcc.n	403e7c <memcpy+0xc>
  403f7a:	f831 3b02 	ldrh.w	r3, [r1], #2
  403f7e:	f820 3b02 	strh.w	r3, [r0], #2
  403f82:	e77b      	b.n	403e7c <memcpy+0xc>
  403f84:	3a04      	subs	r2, #4
  403f86:	d3d9      	bcc.n	403f3c <memcpy+0xcc>
  403f88:	3a01      	subs	r2, #1
  403f8a:	f811 3b01 	ldrb.w	r3, [r1], #1
  403f8e:	f800 3b01 	strb.w	r3, [r0], #1
  403f92:	d2f9      	bcs.n	403f88 <memcpy+0x118>
  403f94:	780b      	ldrb	r3, [r1, #0]
  403f96:	7003      	strb	r3, [r0, #0]
  403f98:	784b      	ldrb	r3, [r1, #1]
  403f9a:	7043      	strb	r3, [r0, #1]
  403f9c:	788b      	ldrb	r3, [r1, #2]
  403f9e:	7083      	strb	r3, [r0, #2]
  403fa0:	4660      	mov	r0, ip
  403fa2:	4770      	bx	lr

00403fa4 <memmove>:
  403fa4:	4288      	cmp	r0, r1
  403fa6:	b5f0      	push	{r4, r5, r6, r7, lr}
  403fa8:	d90d      	bls.n	403fc6 <memmove+0x22>
  403faa:	188b      	adds	r3, r1, r2
  403fac:	4298      	cmp	r0, r3
  403fae:	d20a      	bcs.n	403fc6 <memmove+0x22>
  403fb0:	1881      	adds	r1, r0, r2
  403fb2:	2a00      	cmp	r2, #0
  403fb4:	d051      	beq.n	40405a <memmove+0xb6>
  403fb6:	1a9a      	subs	r2, r3, r2
  403fb8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  403fbc:	f801 4d01 	strb.w	r4, [r1, #-1]!
  403fc0:	4293      	cmp	r3, r2
  403fc2:	d1f9      	bne.n	403fb8 <memmove+0x14>
  403fc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403fc6:	2a0f      	cmp	r2, #15
  403fc8:	d948      	bls.n	40405c <memmove+0xb8>
  403fca:	ea41 0300 	orr.w	r3, r1, r0
  403fce:	079b      	lsls	r3, r3, #30
  403fd0:	d146      	bne.n	404060 <memmove+0xbc>
  403fd2:	f100 0410 	add.w	r4, r0, #16
  403fd6:	f101 0310 	add.w	r3, r1, #16
  403fda:	4615      	mov	r5, r2
  403fdc:	f853 6c10 	ldr.w	r6, [r3, #-16]
  403fe0:	f844 6c10 	str.w	r6, [r4, #-16]
  403fe4:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  403fe8:	f844 6c0c 	str.w	r6, [r4, #-12]
  403fec:	f853 6c08 	ldr.w	r6, [r3, #-8]
  403ff0:	f844 6c08 	str.w	r6, [r4, #-8]
  403ff4:	3d10      	subs	r5, #16
  403ff6:	f853 6c04 	ldr.w	r6, [r3, #-4]
  403ffa:	f844 6c04 	str.w	r6, [r4, #-4]
  403ffe:	2d0f      	cmp	r5, #15
  404000:	f103 0310 	add.w	r3, r3, #16
  404004:	f104 0410 	add.w	r4, r4, #16
  404008:	d8e8      	bhi.n	403fdc <memmove+0x38>
  40400a:	f1a2 0310 	sub.w	r3, r2, #16
  40400e:	f023 030f 	bic.w	r3, r3, #15
  404012:	f002 0e0f 	and.w	lr, r2, #15
  404016:	3310      	adds	r3, #16
  404018:	f1be 0f03 	cmp.w	lr, #3
  40401c:	4419      	add	r1, r3
  40401e:	4403      	add	r3, r0
  404020:	d921      	bls.n	404066 <memmove+0xc2>
  404022:	1f1e      	subs	r6, r3, #4
  404024:	460d      	mov	r5, r1
  404026:	4674      	mov	r4, lr
  404028:	3c04      	subs	r4, #4
  40402a:	f855 7b04 	ldr.w	r7, [r5], #4
  40402e:	f846 7f04 	str.w	r7, [r6, #4]!
  404032:	2c03      	cmp	r4, #3
  404034:	d8f8      	bhi.n	404028 <memmove+0x84>
  404036:	f1ae 0404 	sub.w	r4, lr, #4
  40403a:	f024 0403 	bic.w	r4, r4, #3
  40403e:	3404      	adds	r4, #4
  404040:	4423      	add	r3, r4
  404042:	4421      	add	r1, r4
  404044:	f002 0203 	and.w	r2, r2, #3
  404048:	b162      	cbz	r2, 404064 <memmove+0xc0>
  40404a:	3b01      	subs	r3, #1
  40404c:	440a      	add	r2, r1
  40404e:	f811 4b01 	ldrb.w	r4, [r1], #1
  404052:	f803 4f01 	strb.w	r4, [r3, #1]!
  404056:	428a      	cmp	r2, r1
  404058:	d1f9      	bne.n	40404e <memmove+0xaa>
  40405a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40405c:	4603      	mov	r3, r0
  40405e:	e7f3      	b.n	404048 <memmove+0xa4>
  404060:	4603      	mov	r3, r0
  404062:	e7f2      	b.n	40404a <memmove+0xa6>
  404064:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404066:	4672      	mov	r2, lr
  404068:	e7ee      	b.n	404048 <memmove+0xa4>
  40406a:	bf00      	nop

0040406c <__malloc_lock>:
  40406c:	4770      	bx	lr
  40406e:	bf00      	nop

00404070 <__malloc_unlock>:
  404070:	4770      	bx	lr
  404072:	bf00      	nop

00404074 <_realloc_r>:
  404074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404078:	4617      	mov	r7, r2
  40407a:	b083      	sub	sp, #12
  40407c:	2900      	cmp	r1, #0
  40407e:	f000 80c1 	beq.w	404204 <_realloc_r+0x190>
  404082:	460e      	mov	r6, r1
  404084:	4681      	mov	r9, r0
  404086:	f107 050b 	add.w	r5, r7, #11
  40408a:	f7ff ffef 	bl	40406c <__malloc_lock>
  40408e:	f856 ec04 	ldr.w	lr, [r6, #-4]
  404092:	2d16      	cmp	r5, #22
  404094:	f02e 0403 	bic.w	r4, lr, #3
  404098:	f1a6 0808 	sub.w	r8, r6, #8
  40409c:	d840      	bhi.n	404120 <_realloc_r+0xac>
  40409e:	2210      	movs	r2, #16
  4040a0:	4615      	mov	r5, r2
  4040a2:	42af      	cmp	r7, r5
  4040a4:	d841      	bhi.n	40412a <_realloc_r+0xb6>
  4040a6:	4294      	cmp	r4, r2
  4040a8:	da75      	bge.n	404196 <_realloc_r+0x122>
  4040aa:	4bc9      	ldr	r3, [pc, #804]	; (4043d0 <_realloc_r+0x35c>)
  4040ac:	6899      	ldr	r1, [r3, #8]
  4040ae:	eb08 0004 	add.w	r0, r8, r4
  4040b2:	4288      	cmp	r0, r1
  4040b4:	6841      	ldr	r1, [r0, #4]
  4040b6:	f000 80d9 	beq.w	40426c <_realloc_r+0x1f8>
  4040ba:	f021 0301 	bic.w	r3, r1, #1
  4040be:	4403      	add	r3, r0
  4040c0:	685b      	ldr	r3, [r3, #4]
  4040c2:	07db      	lsls	r3, r3, #31
  4040c4:	d57d      	bpl.n	4041c2 <_realloc_r+0x14e>
  4040c6:	f01e 0f01 	tst.w	lr, #1
  4040ca:	d035      	beq.n	404138 <_realloc_r+0xc4>
  4040cc:	4639      	mov	r1, r7
  4040ce:	4648      	mov	r0, r9
  4040d0:	f7ff fb7e 	bl	4037d0 <_malloc_r>
  4040d4:	4607      	mov	r7, r0
  4040d6:	b1e0      	cbz	r0, 404112 <_realloc_r+0x9e>
  4040d8:	f856 3c04 	ldr.w	r3, [r6, #-4]
  4040dc:	f023 0301 	bic.w	r3, r3, #1
  4040e0:	4443      	add	r3, r8
  4040e2:	f1a0 0208 	sub.w	r2, r0, #8
  4040e6:	429a      	cmp	r2, r3
  4040e8:	f000 8144 	beq.w	404374 <_realloc_r+0x300>
  4040ec:	1f22      	subs	r2, r4, #4
  4040ee:	2a24      	cmp	r2, #36	; 0x24
  4040f0:	f200 8131 	bhi.w	404356 <_realloc_r+0x2e2>
  4040f4:	2a13      	cmp	r2, #19
  4040f6:	f200 8104 	bhi.w	404302 <_realloc_r+0x28e>
  4040fa:	4603      	mov	r3, r0
  4040fc:	4632      	mov	r2, r6
  4040fe:	6811      	ldr	r1, [r2, #0]
  404100:	6019      	str	r1, [r3, #0]
  404102:	6851      	ldr	r1, [r2, #4]
  404104:	6059      	str	r1, [r3, #4]
  404106:	6892      	ldr	r2, [r2, #8]
  404108:	609a      	str	r2, [r3, #8]
  40410a:	4631      	mov	r1, r6
  40410c:	4648      	mov	r0, r9
  40410e:	f7ff f811 	bl	403134 <_free_r>
  404112:	4648      	mov	r0, r9
  404114:	f7ff ffac 	bl	404070 <__malloc_unlock>
  404118:	4638      	mov	r0, r7
  40411a:	b003      	add	sp, #12
  40411c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404120:	f025 0507 	bic.w	r5, r5, #7
  404124:	2d00      	cmp	r5, #0
  404126:	462a      	mov	r2, r5
  404128:	dabb      	bge.n	4040a2 <_realloc_r+0x2e>
  40412a:	230c      	movs	r3, #12
  40412c:	2000      	movs	r0, #0
  40412e:	f8c9 3000 	str.w	r3, [r9]
  404132:	b003      	add	sp, #12
  404134:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404138:	f856 3c08 	ldr.w	r3, [r6, #-8]
  40413c:	ebc3 0a08 	rsb	sl, r3, r8
  404140:	f8da 3004 	ldr.w	r3, [sl, #4]
  404144:	f023 0c03 	bic.w	ip, r3, #3
  404148:	eb04 030c 	add.w	r3, r4, ip
  40414c:	4293      	cmp	r3, r2
  40414e:	dbbd      	blt.n	4040cc <_realloc_r+0x58>
  404150:	4657      	mov	r7, sl
  404152:	f8da 100c 	ldr.w	r1, [sl, #12]
  404156:	f857 0f08 	ldr.w	r0, [r7, #8]!
  40415a:	1f22      	subs	r2, r4, #4
  40415c:	2a24      	cmp	r2, #36	; 0x24
  40415e:	60c1      	str	r1, [r0, #12]
  404160:	6088      	str	r0, [r1, #8]
  404162:	f200 8117 	bhi.w	404394 <_realloc_r+0x320>
  404166:	2a13      	cmp	r2, #19
  404168:	f240 8112 	bls.w	404390 <_realloc_r+0x31c>
  40416c:	6831      	ldr	r1, [r6, #0]
  40416e:	f8ca 1008 	str.w	r1, [sl, #8]
  404172:	6871      	ldr	r1, [r6, #4]
  404174:	f8ca 100c 	str.w	r1, [sl, #12]
  404178:	2a1b      	cmp	r2, #27
  40417a:	f200 812b 	bhi.w	4043d4 <_realloc_r+0x360>
  40417e:	3608      	adds	r6, #8
  404180:	f10a 0210 	add.w	r2, sl, #16
  404184:	6831      	ldr	r1, [r6, #0]
  404186:	6011      	str	r1, [r2, #0]
  404188:	6871      	ldr	r1, [r6, #4]
  40418a:	6051      	str	r1, [r2, #4]
  40418c:	68b1      	ldr	r1, [r6, #8]
  40418e:	6091      	str	r1, [r2, #8]
  404190:	463e      	mov	r6, r7
  404192:	461c      	mov	r4, r3
  404194:	46d0      	mov	r8, sl
  404196:	1b63      	subs	r3, r4, r5
  404198:	2b0f      	cmp	r3, #15
  40419a:	d81d      	bhi.n	4041d8 <_realloc_r+0x164>
  40419c:	f8d8 3004 	ldr.w	r3, [r8, #4]
  4041a0:	f003 0301 	and.w	r3, r3, #1
  4041a4:	4323      	orrs	r3, r4
  4041a6:	4444      	add	r4, r8
  4041a8:	f8c8 3004 	str.w	r3, [r8, #4]
  4041ac:	6863      	ldr	r3, [r4, #4]
  4041ae:	f043 0301 	orr.w	r3, r3, #1
  4041b2:	6063      	str	r3, [r4, #4]
  4041b4:	4648      	mov	r0, r9
  4041b6:	f7ff ff5b 	bl	404070 <__malloc_unlock>
  4041ba:	4630      	mov	r0, r6
  4041bc:	b003      	add	sp, #12
  4041be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4041c2:	f021 0103 	bic.w	r1, r1, #3
  4041c6:	4421      	add	r1, r4
  4041c8:	4291      	cmp	r1, r2
  4041ca:	db21      	blt.n	404210 <_realloc_r+0x19c>
  4041cc:	68c3      	ldr	r3, [r0, #12]
  4041ce:	6882      	ldr	r2, [r0, #8]
  4041d0:	460c      	mov	r4, r1
  4041d2:	60d3      	str	r3, [r2, #12]
  4041d4:	609a      	str	r2, [r3, #8]
  4041d6:	e7de      	b.n	404196 <_realloc_r+0x122>
  4041d8:	f8d8 2004 	ldr.w	r2, [r8, #4]
  4041dc:	eb08 0105 	add.w	r1, r8, r5
  4041e0:	f002 0201 	and.w	r2, r2, #1
  4041e4:	4315      	orrs	r5, r2
  4041e6:	f043 0201 	orr.w	r2, r3, #1
  4041ea:	440b      	add	r3, r1
  4041ec:	f8c8 5004 	str.w	r5, [r8, #4]
  4041f0:	604a      	str	r2, [r1, #4]
  4041f2:	685a      	ldr	r2, [r3, #4]
  4041f4:	f042 0201 	orr.w	r2, r2, #1
  4041f8:	3108      	adds	r1, #8
  4041fa:	605a      	str	r2, [r3, #4]
  4041fc:	4648      	mov	r0, r9
  4041fe:	f7fe ff99 	bl	403134 <_free_r>
  404202:	e7d7      	b.n	4041b4 <_realloc_r+0x140>
  404204:	4611      	mov	r1, r2
  404206:	b003      	add	sp, #12
  404208:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40420c:	f7ff bae0 	b.w	4037d0 <_malloc_r>
  404210:	f01e 0f01 	tst.w	lr, #1
  404214:	f47f af5a 	bne.w	4040cc <_realloc_r+0x58>
  404218:	f856 3c08 	ldr.w	r3, [r6, #-8]
  40421c:	ebc3 0a08 	rsb	sl, r3, r8
  404220:	f8da 3004 	ldr.w	r3, [sl, #4]
  404224:	f023 0c03 	bic.w	ip, r3, #3
  404228:	eb01 0e0c 	add.w	lr, r1, ip
  40422c:	4596      	cmp	lr, r2
  40422e:	db8b      	blt.n	404148 <_realloc_r+0xd4>
  404230:	68c3      	ldr	r3, [r0, #12]
  404232:	6882      	ldr	r2, [r0, #8]
  404234:	4657      	mov	r7, sl
  404236:	60d3      	str	r3, [r2, #12]
  404238:	609a      	str	r2, [r3, #8]
  40423a:	f857 1f08 	ldr.w	r1, [r7, #8]!
  40423e:	f8da 300c 	ldr.w	r3, [sl, #12]
  404242:	60cb      	str	r3, [r1, #12]
  404244:	1f22      	subs	r2, r4, #4
  404246:	2a24      	cmp	r2, #36	; 0x24
  404248:	6099      	str	r1, [r3, #8]
  40424a:	f200 8099 	bhi.w	404380 <_realloc_r+0x30c>
  40424e:	2a13      	cmp	r2, #19
  404250:	d962      	bls.n	404318 <_realloc_r+0x2a4>
  404252:	6833      	ldr	r3, [r6, #0]
  404254:	f8ca 3008 	str.w	r3, [sl, #8]
  404258:	6873      	ldr	r3, [r6, #4]
  40425a:	f8ca 300c 	str.w	r3, [sl, #12]
  40425e:	2a1b      	cmp	r2, #27
  404260:	f200 80a0 	bhi.w	4043a4 <_realloc_r+0x330>
  404264:	3608      	adds	r6, #8
  404266:	f10a 0310 	add.w	r3, sl, #16
  40426a:	e056      	b.n	40431a <_realloc_r+0x2a6>
  40426c:	f021 0b03 	bic.w	fp, r1, #3
  404270:	44a3      	add	fp, r4
  404272:	f105 0010 	add.w	r0, r5, #16
  404276:	4583      	cmp	fp, r0
  404278:	da59      	bge.n	40432e <_realloc_r+0x2ba>
  40427a:	f01e 0f01 	tst.w	lr, #1
  40427e:	f47f af25 	bne.w	4040cc <_realloc_r+0x58>
  404282:	f856 1c08 	ldr.w	r1, [r6, #-8]
  404286:	ebc1 0a08 	rsb	sl, r1, r8
  40428a:	f8da 1004 	ldr.w	r1, [sl, #4]
  40428e:	f021 0c03 	bic.w	ip, r1, #3
  404292:	44e3      	add	fp, ip
  404294:	4558      	cmp	r0, fp
  404296:	f73f af57 	bgt.w	404148 <_realloc_r+0xd4>
  40429a:	4657      	mov	r7, sl
  40429c:	f8da 100c 	ldr.w	r1, [sl, #12]
  4042a0:	f857 0f08 	ldr.w	r0, [r7, #8]!
  4042a4:	1f22      	subs	r2, r4, #4
  4042a6:	2a24      	cmp	r2, #36	; 0x24
  4042a8:	60c1      	str	r1, [r0, #12]
  4042aa:	6088      	str	r0, [r1, #8]
  4042ac:	f200 80b4 	bhi.w	404418 <_realloc_r+0x3a4>
  4042b0:	2a13      	cmp	r2, #19
  4042b2:	f240 80a5 	bls.w	404400 <_realloc_r+0x38c>
  4042b6:	6831      	ldr	r1, [r6, #0]
  4042b8:	f8ca 1008 	str.w	r1, [sl, #8]
  4042bc:	6871      	ldr	r1, [r6, #4]
  4042be:	f8ca 100c 	str.w	r1, [sl, #12]
  4042c2:	2a1b      	cmp	r2, #27
  4042c4:	f200 80af 	bhi.w	404426 <_realloc_r+0x3b2>
  4042c8:	3608      	adds	r6, #8
  4042ca:	f10a 0210 	add.w	r2, sl, #16
  4042ce:	6831      	ldr	r1, [r6, #0]
  4042d0:	6011      	str	r1, [r2, #0]
  4042d2:	6871      	ldr	r1, [r6, #4]
  4042d4:	6051      	str	r1, [r2, #4]
  4042d6:	68b1      	ldr	r1, [r6, #8]
  4042d8:	6091      	str	r1, [r2, #8]
  4042da:	eb0a 0105 	add.w	r1, sl, r5
  4042de:	ebc5 020b 	rsb	r2, r5, fp
  4042e2:	f042 0201 	orr.w	r2, r2, #1
  4042e6:	6099      	str	r1, [r3, #8]
  4042e8:	604a      	str	r2, [r1, #4]
  4042ea:	f8da 3004 	ldr.w	r3, [sl, #4]
  4042ee:	f003 0301 	and.w	r3, r3, #1
  4042f2:	431d      	orrs	r5, r3
  4042f4:	4648      	mov	r0, r9
  4042f6:	f8ca 5004 	str.w	r5, [sl, #4]
  4042fa:	f7ff feb9 	bl	404070 <__malloc_unlock>
  4042fe:	4638      	mov	r0, r7
  404300:	e75c      	b.n	4041bc <_realloc_r+0x148>
  404302:	6833      	ldr	r3, [r6, #0]
  404304:	6003      	str	r3, [r0, #0]
  404306:	6873      	ldr	r3, [r6, #4]
  404308:	6043      	str	r3, [r0, #4]
  40430a:	2a1b      	cmp	r2, #27
  40430c:	d827      	bhi.n	40435e <_realloc_r+0x2ea>
  40430e:	f100 0308 	add.w	r3, r0, #8
  404312:	f106 0208 	add.w	r2, r6, #8
  404316:	e6f2      	b.n	4040fe <_realloc_r+0x8a>
  404318:	463b      	mov	r3, r7
  40431a:	6832      	ldr	r2, [r6, #0]
  40431c:	601a      	str	r2, [r3, #0]
  40431e:	6872      	ldr	r2, [r6, #4]
  404320:	605a      	str	r2, [r3, #4]
  404322:	68b2      	ldr	r2, [r6, #8]
  404324:	609a      	str	r2, [r3, #8]
  404326:	463e      	mov	r6, r7
  404328:	4674      	mov	r4, lr
  40432a:	46d0      	mov	r8, sl
  40432c:	e733      	b.n	404196 <_realloc_r+0x122>
  40432e:	eb08 0105 	add.w	r1, r8, r5
  404332:	ebc5 0b0b 	rsb	fp, r5, fp
  404336:	f04b 0201 	orr.w	r2, fp, #1
  40433a:	6099      	str	r1, [r3, #8]
  40433c:	604a      	str	r2, [r1, #4]
  40433e:	f856 3c04 	ldr.w	r3, [r6, #-4]
  404342:	f003 0301 	and.w	r3, r3, #1
  404346:	431d      	orrs	r5, r3
  404348:	4648      	mov	r0, r9
  40434a:	f846 5c04 	str.w	r5, [r6, #-4]
  40434e:	f7ff fe8f 	bl	404070 <__malloc_unlock>
  404352:	4630      	mov	r0, r6
  404354:	e732      	b.n	4041bc <_realloc_r+0x148>
  404356:	4631      	mov	r1, r6
  404358:	f7ff fe24 	bl	403fa4 <memmove>
  40435c:	e6d5      	b.n	40410a <_realloc_r+0x96>
  40435e:	68b3      	ldr	r3, [r6, #8]
  404360:	6083      	str	r3, [r0, #8]
  404362:	68f3      	ldr	r3, [r6, #12]
  404364:	60c3      	str	r3, [r0, #12]
  404366:	2a24      	cmp	r2, #36	; 0x24
  404368:	d028      	beq.n	4043bc <_realloc_r+0x348>
  40436a:	f100 0310 	add.w	r3, r0, #16
  40436e:	f106 0210 	add.w	r2, r6, #16
  404372:	e6c4      	b.n	4040fe <_realloc_r+0x8a>
  404374:	f850 3c04 	ldr.w	r3, [r0, #-4]
  404378:	f023 0303 	bic.w	r3, r3, #3
  40437c:	441c      	add	r4, r3
  40437e:	e70a      	b.n	404196 <_realloc_r+0x122>
  404380:	4631      	mov	r1, r6
  404382:	4638      	mov	r0, r7
  404384:	4674      	mov	r4, lr
  404386:	46d0      	mov	r8, sl
  404388:	f7ff fe0c 	bl	403fa4 <memmove>
  40438c:	463e      	mov	r6, r7
  40438e:	e702      	b.n	404196 <_realloc_r+0x122>
  404390:	463a      	mov	r2, r7
  404392:	e6f7      	b.n	404184 <_realloc_r+0x110>
  404394:	4631      	mov	r1, r6
  404396:	4638      	mov	r0, r7
  404398:	461c      	mov	r4, r3
  40439a:	46d0      	mov	r8, sl
  40439c:	f7ff fe02 	bl	403fa4 <memmove>
  4043a0:	463e      	mov	r6, r7
  4043a2:	e6f8      	b.n	404196 <_realloc_r+0x122>
  4043a4:	68b3      	ldr	r3, [r6, #8]
  4043a6:	f8ca 3010 	str.w	r3, [sl, #16]
  4043aa:	68f3      	ldr	r3, [r6, #12]
  4043ac:	f8ca 3014 	str.w	r3, [sl, #20]
  4043b0:	2a24      	cmp	r2, #36	; 0x24
  4043b2:	d01b      	beq.n	4043ec <_realloc_r+0x378>
  4043b4:	3610      	adds	r6, #16
  4043b6:	f10a 0318 	add.w	r3, sl, #24
  4043ba:	e7ae      	b.n	40431a <_realloc_r+0x2a6>
  4043bc:	6933      	ldr	r3, [r6, #16]
  4043be:	6103      	str	r3, [r0, #16]
  4043c0:	6973      	ldr	r3, [r6, #20]
  4043c2:	6143      	str	r3, [r0, #20]
  4043c4:	f106 0218 	add.w	r2, r6, #24
  4043c8:	f100 0318 	add.w	r3, r0, #24
  4043cc:	e697      	b.n	4040fe <_realloc_r+0x8a>
  4043ce:	bf00      	nop
  4043d0:	2000045c 	.word	0x2000045c
  4043d4:	68b1      	ldr	r1, [r6, #8]
  4043d6:	f8ca 1010 	str.w	r1, [sl, #16]
  4043da:	68f1      	ldr	r1, [r6, #12]
  4043dc:	f8ca 1014 	str.w	r1, [sl, #20]
  4043e0:	2a24      	cmp	r2, #36	; 0x24
  4043e2:	d00f      	beq.n	404404 <_realloc_r+0x390>
  4043e4:	3610      	adds	r6, #16
  4043e6:	f10a 0218 	add.w	r2, sl, #24
  4043ea:	e6cb      	b.n	404184 <_realloc_r+0x110>
  4043ec:	6933      	ldr	r3, [r6, #16]
  4043ee:	f8ca 3018 	str.w	r3, [sl, #24]
  4043f2:	6973      	ldr	r3, [r6, #20]
  4043f4:	f8ca 301c 	str.w	r3, [sl, #28]
  4043f8:	3618      	adds	r6, #24
  4043fa:	f10a 0320 	add.w	r3, sl, #32
  4043fe:	e78c      	b.n	40431a <_realloc_r+0x2a6>
  404400:	463a      	mov	r2, r7
  404402:	e764      	b.n	4042ce <_realloc_r+0x25a>
  404404:	6932      	ldr	r2, [r6, #16]
  404406:	f8ca 2018 	str.w	r2, [sl, #24]
  40440a:	6972      	ldr	r2, [r6, #20]
  40440c:	f8ca 201c 	str.w	r2, [sl, #28]
  404410:	3618      	adds	r6, #24
  404412:	f10a 0220 	add.w	r2, sl, #32
  404416:	e6b5      	b.n	404184 <_realloc_r+0x110>
  404418:	4631      	mov	r1, r6
  40441a:	4638      	mov	r0, r7
  40441c:	9301      	str	r3, [sp, #4]
  40441e:	f7ff fdc1 	bl	403fa4 <memmove>
  404422:	9b01      	ldr	r3, [sp, #4]
  404424:	e759      	b.n	4042da <_realloc_r+0x266>
  404426:	68b1      	ldr	r1, [r6, #8]
  404428:	f8ca 1010 	str.w	r1, [sl, #16]
  40442c:	68f1      	ldr	r1, [r6, #12]
  40442e:	f8ca 1014 	str.w	r1, [sl, #20]
  404432:	2a24      	cmp	r2, #36	; 0x24
  404434:	d003      	beq.n	40443e <_realloc_r+0x3ca>
  404436:	3610      	adds	r6, #16
  404438:	f10a 0218 	add.w	r2, sl, #24
  40443c:	e747      	b.n	4042ce <_realloc_r+0x25a>
  40443e:	6932      	ldr	r2, [r6, #16]
  404440:	f8ca 2018 	str.w	r2, [sl, #24]
  404444:	6972      	ldr	r2, [r6, #20]
  404446:	f8ca 201c 	str.w	r2, [sl, #28]
  40444a:	3618      	adds	r6, #24
  40444c:	f10a 0220 	add.w	r2, sl, #32
  404450:	e73d      	b.n	4042ce <_realloc_r+0x25a>
  404452:	bf00      	nop

00404454 <lflush>:
  404454:	8983      	ldrh	r3, [r0, #12]
  404456:	f003 0309 	and.w	r3, r3, #9
  40445a:	2b09      	cmp	r3, #9
  40445c:	d001      	beq.n	404462 <lflush+0xe>
  40445e:	2000      	movs	r0, #0
  404460:	4770      	bx	lr
  404462:	f7fe bc3f 	b.w	402ce4 <fflush>
  404466:	bf00      	nop

00404468 <__srefill_r>:
  404468:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40446a:	460c      	mov	r4, r1
  40446c:	4605      	mov	r5, r0
  40446e:	b110      	cbz	r0, 404476 <__srefill_r+0xe>
  404470:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404472:	2b00      	cmp	r3, #0
  404474:	d045      	beq.n	404502 <__srefill_r+0x9a>
  404476:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40447a:	b29a      	uxth	r2, r3
  40447c:	0497      	lsls	r7, r2, #18
  40447e:	d407      	bmi.n	404490 <__srefill_r+0x28>
  404480:	6e62      	ldr	r2, [r4, #100]	; 0x64
  404482:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  404486:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  40448a:	6662      	str	r2, [r4, #100]	; 0x64
  40448c:	81a3      	strh	r3, [r4, #12]
  40448e:	b29a      	uxth	r2, r3
  404490:	2100      	movs	r1, #0
  404492:	0696      	lsls	r6, r2, #26
  404494:	6061      	str	r1, [r4, #4]
  404496:	d431      	bmi.n	4044fc <__srefill_r+0x94>
  404498:	0750      	lsls	r0, r2, #29
  40449a:	d522      	bpl.n	4044e2 <__srefill_r+0x7a>
  40449c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40449e:	b161      	cbz	r1, 4044ba <__srefill_r+0x52>
  4044a0:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4044a4:	4299      	cmp	r1, r3
  4044a6:	d002      	beq.n	4044ae <__srefill_r+0x46>
  4044a8:	4628      	mov	r0, r5
  4044aa:	f7fe fe43 	bl	403134 <_free_r>
  4044ae:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  4044b0:	6063      	str	r3, [r4, #4]
  4044b2:	2000      	movs	r0, #0
  4044b4:	6320      	str	r0, [r4, #48]	; 0x30
  4044b6:	2b00      	cmp	r3, #0
  4044b8:	d13f      	bne.n	40453a <__srefill_r+0xd2>
  4044ba:	6923      	ldr	r3, [r4, #16]
  4044bc:	2b00      	cmp	r3, #0
  4044be:	d04c      	beq.n	40455a <__srefill_r+0xf2>
  4044c0:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
  4044c4:	b2be      	uxth	r6, r7
  4044c6:	07b3      	lsls	r3, r6, #30
  4044c8:	d11e      	bne.n	404508 <__srefill_r+0xa0>
  4044ca:	6922      	ldr	r2, [r4, #16]
  4044cc:	6022      	str	r2, [r4, #0]
  4044ce:	4628      	mov	r0, r5
  4044d0:	6963      	ldr	r3, [r4, #20]
  4044d2:	6a25      	ldr	r5, [r4, #32]
  4044d4:	69e1      	ldr	r1, [r4, #28]
  4044d6:	47a8      	blx	r5
  4044d8:	2800      	cmp	r0, #0
  4044da:	6060      	str	r0, [r4, #4]
  4044dc:	dd09      	ble.n	4044f2 <__srefill_r+0x8a>
  4044de:	2000      	movs	r0, #0
  4044e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4044e2:	06d1      	lsls	r1, r2, #27
  4044e4:	d53e      	bpl.n	404564 <__srefill_r+0xfc>
  4044e6:	0712      	lsls	r2, r2, #28
  4044e8:	d42a      	bmi.n	404540 <__srefill_r+0xd8>
  4044ea:	f043 0304 	orr.w	r3, r3, #4
  4044ee:	81a3      	strh	r3, [r4, #12]
  4044f0:	e7e3      	b.n	4044ba <__srefill_r+0x52>
  4044f2:	89a3      	ldrh	r3, [r4, #12]
  4044f4:	d119      	bne.n	40452a <__srefill_r+0xc2>
  4044f6:	f043 0320 	orr.w	r3, r3, #32
  4044fa:	81a3      	strh	r3, [r4, #12]
  4044fc:	f04f 30ff 	mov.w	r0, #4294967295
  404500:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404502:	f7fe fc7f 	bl	402e04 <__sinit>
  404506:	e7b6      	b.n	404476 <__srefill_r+0xe>
  404508:	4b1a      	ldr	r3, [pc, #104]	; (404574 <__srefill_r+0x10c>)
  40450a:	491b      	ldr	r1, [pc, #108]	; (404578 <__srefill_r+0x110>)
  40450c:	6818      	ldr	r0, [r3, #0]
  40450e:	2301      	movs	r3, #1
  404510:	81a3      	strh	r3, [r4, #12]
  404512:	f006 0609 	and.w	r6, r6, #9
  404516:	f7ff f877 	bl	403608 <_fwalk>
  40451a:	2e09      	cmp	r6, #9
  40451c:	81a7      	strh	r7, [r4, #12]
  40451e:	d1d4      	bne.n	4044ca <__srefill_r+0x62>
  404520:	4621      	mov	r1, r4
  404522:	4628      	mov	r0, r5
  404524:	f7fe fb24 	bl	402b70 <__sflush_r>
  404528:	e7cf      	b.n	4044ca <__srefill_r+0x62>
  40452a:	2200      	movs	r2, #0
  40452c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404530:	81a3      	strh	r3, [r4, #12]
  404532:	6062      	str	r2, [r4, #4]
  404534:	f04f 30ff 	mov.w	r0, #4294967295
  404538:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40453a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  40453c:	6023      	str	r3, [r4, #0]
  40453e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404540:	4621      	mov	r1, r4
  404542:	4628      	mov	r0, r5
  404544:	f7fe fbb8 	bl	402cb8 <_fflush_r>
  404548:	2800      	cmp	r0, #0
  40454a:	d1d7      	bne.n	4044fc <__srefill_r+0x94>
  40454c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404550:	60a0      	str	r0, [r4, #8]
  404552:	61a0      	str	r0, [r4, #24]
  404554:	f023 0308 	bic.w	r3, r3, #8
  404558:	e7c7      	b.n	4044ea <__srefill_r+0x82>
  40455a:	4621      	mov	r1, r4
  40455c:	4628      	mov	r0, r5
  40455e:	f7ff f8eb 	bl	403738 <__smakebuf_r>
  404562:	e7ad      	b.n	4044c0 <__srefill_r+0x58>
  404564:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404568:	2209      	movs	r2, #9
  40456a:	602a      	str	r2, [r5, #0]
  40456c:	f04f 30ff 	mov.w	r0, #4294967295
  404570:	81a3      	strh	r3, [r4, #12]
  404572:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404574:	0040568c 	.word	0x0040568c
  404578:	00404455 	.word	0x00404455

0040457c <_sbrk_r>:
  40457c:	b538      	push	{r3, r4, r5, lr}
  40457e:	4c07      	ldr	r4, [pc, #28]	; (40459c <_sbrk_r+0x20>)
  404580:	2300      	movs	r3, #0
  404582:	4605      	mov	r5, r0
  404584:	4608      	mov	r0, r1
  404586:	6023      	str	r3, [r4, #0]
  404588:	f7fc fba8 	bl	400cdc <_sbrk>
  40458c:	1c43      	adds	r3, r0, #1
  40458e:	d000      	beq.n	404592 <_sbrk_r+0x16>
  404590:	bd38      	pop	{r3, r4, r5, pc}
  404592:	6823      	ldr	r3, [r4, #0]
  404594:	2b00      	cmp	r3, #0
  404596:	d0fb      	beq.n	404590 <_sbrk_r+0x14>
  404598:	602b      	str	r3, [r5, #0]
  40459a:	bd38      	pop	{r3, r4, r5, pc}
  40459c:	20000948 	.word	0x20000948

004045a0 <__sccl>:
  4045a0:	b470      	push	{r4, r5, r6}
  4045a2:	780d      	ldrb	r5, [r1, #0]
  4045a4:	2d5e      	cmp	r5, #94	; 0x5e
  4045a6:	d02f      	beq.n	404608 <__sccl+0x68>
  4045a8:	2200      	movs	r2, #0
  4045aa:	3101      	adds	r1, #1
  4045ac:	4616      	mov	r6, r2
  4045ae:	1e43      	subs	r3, r0, #1
  4045b0:	f100 04ff 	add.w	r4, r0, #255	; 0xff
  4045b4:	f803 2f01 	strb.w	r2, [r3, #1]!
  4045b8:	42a3      	cmp	r3, r4
  4045ba:	d1fb      	bne.n	4045b4 <__sccl+0x14>
  4045bc:	b185      	cbz	r5, 4045e0 <__sccl+0x40>
  4045be:	f086 0201 	eor.w	r2, r6, #1
  4045c2:	5542      	strb	r2, [r0, r5]
  4045c4:	1c4c      	adds	r4, r1, #1
  4045c6:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  4045ca:	2b2d      	cmp	r3, #45	; 0x2d
  4045cc:	d00e      	beq.n	4045ec <__sccl+0x4c>
  4045ce:	2b5d      	cmp	r3, #93	; 0x5d
  4045d0:	d009      	beq.n	4045e6 <__sccl+0x46>
  4045d2:	b113      	cbz	r3, 4045da <__sccl+0x3a>
  4045d4:	461d      	mov	r5, r3
  4045d6:	4621      	mov	r1, r4
  4045d8:	e7f3      	b.n	4045c2 <__sccl+0x22>
  4045da:	4608      	mov	r0, r1
  4045dc:	bc70      	pop	{r4, r5, r6}
  4045de:	4770      	bx	lr
  4045e0:	1e48      	subs	r0, r1, #1
  4045e2:	bc70      	pop	{r4, r5, r6}
  4045e4:	4770      	bx	lr
  4045e6:	4620      	mov	r0, r4
  4045e8:	bc70      	pop	{r4, r5, r6}
  4045ea:	4770      	bx	lr
  4045ec:	784e      	ldrb	r6, [r1, #1]
  4045ee:	2e5d      	cmp	r6, #93	; 0x5d
  4045f0:	d0f0      	beq.n	4045d4 <__sccl+0x34>
  4045f2:	42b5      	cmp	r5, r6
  4045f4:	dcee      	bgt.n	4045d4 <__sccl+0x34>
  4045f6:	3102      	adds	r1, #2
  4045f8:	1943      	adds	r3, r0, r5
  4045fa:	3501      	adds	r5, #1
  4045fc:	42ae      	cmp	r6, r5
  4045fe:	f803 2f01 	strb.w	r2, [r3, #1]!
  404602:	dcfa      	bgt.n	4045fa <__sccl+0x5a>
  404604:	3402      	adds	r4, #2
  404606:	e7de      	b.n	4045c6 <__sccl+0x26>
  404608:	2201      	movs	r2, #1
  40460a:	784d      	ldrb	r5, [r1, #1]
  40460c:	4616      	mov	r6, r2
  40460e:	3102      	adds	r1, #2
  404610:	e7cd      	b.n	4045ae <__sccl+0xe>
  404612:	bf00      	nop

00404614 <__sread>:
  404614:	b510      	push	{r4, lr}
  404616:	460c      	mov	r4, r1
  404618:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40461c:	f000 fd5a 	bl	4050d4 <_read_r>
  404620:	2800      	cmp	r0, #0
  404622:	db03      	blt.n	40462c <__sread+0x18>
  404624:	6d23      	ldr	r3, [r4, #80]	; 0x50
  404626:	4403      	add	r3, r0
  404628:	6523      	str	r3, [r4, #80]	; 0x50
  40462a:	bd10      	pop	{r4, pc}
  40462c:	89a3      	ldrh	r3, [r4, #12]
  40462e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  404632:	81a3      	strh	r3, [r4, #12]
  404634:	bd10      	pop	{r4, pc}
  404636:	bf00      	nop

00404638 <__swrite>:
  404638:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40463c:	4616      	mov	r6, r2
  40463e:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  404642:	461f      	mov	r7, r3
  404644:	05d3      	lsls	r3, r2, #23
  404646:	460c      	mov	r4, r1
  404648:	4605      	mov	r5, r0
  40464a:	d507      	bpl.n	40465c <__swrite+0x24>
  40464c:	2200      	movs	r2, #0
  40464e:	2302      	movs	r3, #2
  404650:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404654:	f000 fd28 	bl	4050a8 <_lseek_r>
  404658:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40465c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  404660:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  404664:	81a2      	strh	r2, [r4, #12]
  404666:	463b      	mov	r3, r7
  404668:	4632      	mov	r2, r6
  40466a:	4628      	mov	r0, r5
  40466c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404670:	f000 bc38 	b.w	404ee4 <_write_r>

00404674 <__sseek>:
  404674:	b510      	push	{r4, lr}
  404676:	460c      	mov	r4, r1
  404678:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40467c:	f000 fd14 	bl	4050a8 <_lseek_r>
  404680:	89a3      	ldrh	r3, [r4, #12]
  404682:	1c42      	adds	r2, r0, #1
  404684:	bf0e      	itee	eq
  404686:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  40468a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  40468e:	6520      	strne	r0, [r4, #80]	; 0x50
  404690:	81a3      	strh	r3, [r4, #12]
  404692:	bd10      	pop	{r4, pc}

00404694 <__sclose>:
  404694:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404698:	f000 bc8c 	b.w	404fb4 <_close_r>

0040469c <_strtol_r>:
  40469c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4046a0:	4c47      	ldr	r4, [pc, #284]	; (4047c0 <_strtol_r+0x124>)
  4046a2:	4683      	mov	fp, r0
  4046a4:	460e      	mov	r6, r1
  4046a6:	f8d4 e000 	ldr.w	lr, [r4]
  4046aa:	e000      	b.n	4046ae <_strtol_r+0x12>
  4046ac:	4626      	mov	r6, r4
  4046ae:	4634      	mov	r4, r6
  4046b0:	f814 5b01 	ldrb.w	r5, [r4], #1
  4046b4:	eb0e 0005 	add.w	r0, lr, r5
  4046b8:	7840      	ldrb	r0, [r0, #1]
  4046ba:	f000 0008 	and.w	r0, r0, #8
  4046be:	f000 08ff 	and.w	r8, r0, #255	; 0xff
  4046c2:	2800      	cmp	r0, #0
  4046c4:	d1f2      	bne.n	4046ac <_strtol_r+0x10>
  4046c6:	2d2d      	cmp	r5, #45	; 0x2d
  4046c8:	d05c      	beq.n	404784 <_strtol_r+0xe8>
  4046ca:	2d2b      	cmp	r5, #43	; 0x2b
  4046cc:	bf04      	itt	eq
  4046ce:	7875      	ldrbeq	r5, [r6, #1]
  4046d0:	1cb4      	addeq	r4, r6, #2
  4046d2:	2b00      	cmp	r3, #0
  4046d4:	d03e      	beq.n	404754 <_strtol_r+0xb8>
  4046d6:	2b10      	cmp	r3, #16
  4046d8:	d060      	beq.n	40479c <_strtol_r+0x100>
  4046da:	469a      	mov	sl, r3
  4046dc:	f1b8 0f00 	cmp.w	r8, #0
  4046e0:	bf0c      	ite	eq
  4046e2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4046e6:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
  4046ea:	2700      	movs	r7, #0
  4046ec:	fbb0 f9fa 	udiv	r9, r0, sl
  4046f0:	46bc      	mov	ip, r7
  4046f2:	fb0a 0019 	mls	r0, sl, r9, r0
  4046f6:	e00c      	b.n	404712 <_strtol_r+0x76>
  4046f8:	3d30      	subs	r5, #48	; 0x30
  4046fa:	42ab      	cmp	r3, r5
  4046fc:	dd19      	ble.n	404732 <_strtol_r+0x96>
  4046fe:	1c7e      	adds	r6, r7, #1
  404700:	d005      	beq.n	40470e <_strtol_r+0x72>
  404702:	45cc      	cmp	ip, r9
  404704:	d823      	bhi.n	40474e <_strtol_r+0xb2>
  404706:	d020      	beq.n	40474a <_strtol_r+0xae>
  404708:	fb0a 5c0c 	mla	ip, sl, ip, r5
  40470c:	2701      	movs	r7, #1
  40470e:	f814 5b01 	ldrb.w	r5, [r4], #1
  404712:	eb0e 0605 	add.w	r6, lr, r5
  404716:	7876      	ldrb	r6, [r6, #1]
  404718:	f016 0f04 	tst.w	r6, #4
  40471c:	d1ec      	bne.n	4046f8 <_strtol_r+0x5c>
  40471e:	f016 0603 	ands.w	r6, r6, #3
  404722:	d006      	beq.n	404732 <_strtol_r+0x96>
  404724:	2e01      	cmp	r6, #1
  404726:	bf14      	ite	ne
  404728:	2657      	movne	r6, #87	; 0x57
  40472a:	2637      	moveq	r6, #55	; 0x37
  40472c:	1bad      	subs	r5, r5, r6
  40472e:	42ab      	cmp	r3, r5
  404730:	dce5      	bgt.n	4046fe <_strtol_r+0x62>
  404732:	1c7b      	adds	r3, r7, #1
  404734:	d016      	beq.n	404764 <_strtol_r+0xc8>
  404736:	f1b8 0f00 	cmp.w	r8, #0
  40473a:	d110      	bne.n	40475e <_strtol_r+0xc2>
  40473c:	4660      	mov	r0, ip
  40473e:	2a00      	cmp	r2, #0
  404740:	d039      	beq.n	4047b6 <_strtol_r+0x11a>
  404742:	b9df      	cbnz	r7, 40477c <_strtol_r+0xe0>
  404744:	6011      	str	r1, [r2, #0]
  404746:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40474a:	4285      	cmp	r5, r0
  40474c:	dddc      	ble.n	404708 <_strtol_r+0x6c>
  40474e:	f04f 37ff 	mov.w	r7, #4294967295
  404752:	e7dc      	b.n	40470e <_strtol_r+0x72>
  404754:	2d30      	cmp	r5, #48	; 0x30
  404756:	d01a      	beq.n	40478e <_strtol_r+0xf2>
  404758:	230a      	movs	r3, #10
  40475a:	469a      	mov	sl, r3
  40475c:	e7be      	b.n	4046dc <_strtol_r+0x40>
  40475e:	f1cc 0c00 	rsb	ip, ip, #0
  404762:	e7eb      	b.n	40473c <_strtol_r+0xa0>
  404764:	f1b8 0f00 	cmp.w	r8, #0
  404768:	f04f 0322 	mov.w	r3, #34	; 0x22
  40476c:	bf0c      	ite	eq
  40476e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  404772:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
  404776:	f8cb 3000 	str.w	r3, [fp]
  40477a:	b1f2      	cbz	r2, 4047ba <_strtol_r+0x11e>
  40477c:	1e61      	subs	r1, r4, #1
  40477e:	6011      	str	r1, [r2, #0]
  404780:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404784:	1cb4      	adds	r4, r6, #2
  404786:	7875      	ldrb	r5, [r6, #1]
  404788:	f04f 0801 	mov.w	r8, #1
  40478c:	e7a1      	b.n	4046d2 <_strtol_r+0x36>
  40478e:	7823      	ldrb	r3, [r4, #0]
  404790:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404794:	2b58      	cmp	r3, #88	; 0x58
  404796:	d008      	beq.n	4047aa <_strtol_r+0x10e>
  404798:	2308      	movs	r3, #8
  40479a:	e79e      	b.n	4046da <_strtol_r+0x3e>
  40479c:	2d30      	cmp	r5, #48	; 0x30
  40479e:	d19c      	bne.n	4046da <_strtol_r+0x3e>
  4047a0:	7820      	ldrb	r0, [r4, #0]
  4047a2:	f000 00df 	and.w	r0, r0, #223	; 0xdf
  4047a6:	2858      	cmp	r0, #88	; 0x58
  4047a8:	d197      	bne.n	4046da <_strtol_r+0x3e>
  4047aa:	f04f 0a10 	mov.w	sl, #16
  4047ae:	7865      	ldrb	r5, [r4, #1]
  4047b0:	4653      	mov	r3, sl
  4047b2:	3402      	adds	r4, #2
  4047b4:	e792      	b.n	4046dc <_strtol_r+0x40>
  4047b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4047ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4047be:	bf00      	nop
  4047c0:	20000434 	.word	0x20000434

004047c4 <_strtoll_r>:
  4047c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4047c8:	4c69      	ldr	r4, [pc, #420]	; (404970 <_strtoll_r+0x1ac>)
  4047ca:	b087      	sub	sp, #28
  4047cc:	469b      	mov	fp, r3
  4047ce:	9202      	str	r2, [sp, #8]
  4047d0:	9104      	str	r1, [sp, #16]
  4047d2:	9005      	str	r0, [sp, #20]
  4047d4:	460a      	mov	r2, r1
  4047d6:	f8d4 a000 	ldr.w	sl, [r4]
  4047da:	e000      	b.n	4047de <_strtoll_r+0x1a>
  4047dc:	462a      	mov	r2, r5
  4047de:	4615      	mov	r5, r2
  4047e0:	f815 4b01 	ldrb.w	r4, [r5], #1
  4047e4:	eb0a 0304 	add.w	r3, sl, r4
  4047e8:	785b      	ldrb	r3, [r3, #1]
  4047ea:	f003 0308 	and.w	r3, r3, #8
  4047ee:	f003 01ff 	and.w	r1, r3, #255	; 0xff
  4047f2:	2b00      	cmp	r3, #0
  4047f4:	d1f2      	bne.n	4047dc <_strtoll_r+0x18>
  4047f6:	2c2d      	cmp	r4, #45	; 0x2d
  4047f8:	f000 8083 	beq.w	404902 <_strtoll_r+0x13e>
  4047fc:	2c2b      	cmp	r4, #43	; 0x2b
  4047fe:	bf08      	it	eq
  404800:	7854      	ldrbeq	r4, [r2, #1]
  404802:	9101      	str	r1, [sp, #4]
  404804:	bf08      	it	eq
  404806:	1c95      	addeq	r5, r2, #2
  404808:	f1bb 0f00 	cmp.w	fp, #0
  40480c:	d00c      	beq.n	404828 <_strtoll_r+0x64>
  40480e:	f1bb 0f10 	cmp.w	fp, #16
  404812:	f000 8095 	beq.w	404940 <_strtoll_r+0x17c>
  404816:	9b01      	ldr	r3, [sp, #4]
  404818:	465e      	mov	r6, fp
  40481a:	17f7      	asrs	r7, r6, #31
  40481c:	b96b      	cbnz	r3, 40483a <_strtoll_r+0x76>
  40481e:	f04f 38ff 	mov.w	r8, #4294967295
  404822:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
  404826:	e00c      	b.n	404842 <_strtoll_r+0x7e>
  404828:	2c30      	cmp	r4, #48	; 0x30
  40482a:	d07f      	beq.n	40492c <_strtoll_r+0x168>
  40482c:	260a      	movs	r6, #10
  40482e:	2700      	movs	r7, #0
  404830:	f04f 0b0a 	mov.w	fp, #10
  404834:	9b01      	ldr	r3, [sp, #4]
  404836:	2b00      	cmp	r3, #0
  404838:	d0f1      	beq.n	40481e <_strtoll_r+0x5a>
  40483a:	f04f 0800 	mov.w	r8, #0
  40483e:	f04f 4900 	mov.w	r9, #2147483648	; 0x80000000
  404842:	4640      	mov	r0, r8
  404844:	4632      	mov	r2, r6
  404846:	463b      	mov	r3, r7
  404848:	4649      	mov	r1, r9
  40484a:	f000 fc59 	bl	405100 <__aeabi_uldivmod>
  40484e:	463b      	mov	r3, r7
  404850:	9203      	str	r2, [sp, #12]
  404852:	4640      	mov	r0, r8
  404854:	4632      	mov	r2, r6
  404856:	4649      	mov	r1, r9
  404858:	f000 fc52 	bl	405100 <__aeabi_uldivmod>
  40485c:	f04f 0e00 	mov.w	lr, #0
  404860:	2200      	movs	r2, #0
  404862:	2300      	movs	r3, #0
  404864:	f8dd 800c 	ldr.w	r8, [sp, #12]
  404868:	e01b      	b.n	4048a2 <_strtoll_r+0xde>
  40486a:	3c30      	subs	r4, #48	; 0x30
  40486c:	45a3      	cmp	fp, r4
  40486e:	dd2d      	ble.n	4048cc <_strtoll_r+0x108>
  404870:	f1be 3fff 	cmp.w	lr, #4294967295
  404874:	d013      	beq.n	40489e <_strtoll_r+0xda>
  404876:	4299      	cmp	r1, r3
  404878:	bf08      	it	eq
  40487a:	4290      	cmpeq	r0, r2
  40487c:	d33e      	bcc.n	4048fc <_strtoll_r+0x138>
  40487e:	428b      	cmp	r3, r1
  404880:	bf08      	it	eq
  404882:	4282      	cmpeq	r2, r0
  404884:	d038      	beq.n	4048f8 <_strtoll_r+0x134>
  404886:	fb02 fe07 	mul.w	lr, r2, r7
  40488a:	fb06 ee03 	mla	lr, r6, r3, lr
  40488e:	fba2 2306 	umull	r2, r3, r2, r6
  404892:	4473      	add	r3, lr
  404894:	1912      	adds	r2, r2, r4
  404896:	eb43 73e4 	adc.w	r3, r3, r4, asr #31
  40489a:	f04f 0e01 	mov.w	lr, #1
  40489e:	f815 4b01 	ldrb.w	r4, [r5], #1
  4048a2:	eb0a 0c04 	add.w	ip, sl, r4
  4048a6:	f89c c001 	ldrb.w	ip, [ip, #1]
  4048aa:	f01c 0f04 	tst.w	ip, #4
  4048ae:	d1dc      	bne.n	40486a <_strtoll_r+0xa6>
  4048b0:	f01c 0c03 	ands.w	ip, ip, #3
  4048b4:	d00a      	beq.n	4048cc <_strtoll_r+0x108>
  4048b6:	f1bc 0f01 	cmp.w	ip, #1
  4048ba:	bf14      	ite	ne
  4048bc:	f04f 0c57 	movne.w	ip, #87	; 0x57
  4048c0:	f04f 0c37 	moveq.w	ip, #55	; 0x37
  4048c4:	ebcc 0404 	rsb	r4, ip, r4
  4048c8:	45a3      	cmp	fp, r4
  4048ca:	dcd1      	bgt.n	404870 <_strtoll_r+0xac>
  4048cc:	f1be 3fff 	cmp.w	lr, #4294967295
  4048d0:	d01c      	beq.n	40490c <_strtoll_r+0x148>
  4048d2:	9901      	ldr	r1, [sp, #4]
  4048d4:	b111      	cbz	r1, 4048dc <_strtoll_r+0x118>
  4048d6:	4252      	negs	r2, r2
  4048d8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  4048dc:	9902      	ldr	r1, [sp, #8]
  4048de:	2900      	cmp	r1, #0
  4048e0:	d040      	beq.n	404964 <_strtoll_r+0x1a0>
  4048e2:	f1be 0f00 	cmp.w	lr, #0
  4048e6:	d11d      	bne.n	404924 <_strtoll_r+0x160>
  4048e8:	9d04      	ldr	r5, [sp, #16]
  4048ea:	4610      	mov	r0, r2
  4048ec:	4619      	mov	r1, r3
  4048ee:	9b02      	ldr	r3, [sp, #8]
  4048f0:	601d      	str	r5, [r3, #0]
  4048f2:	b007      	add	sp, #28
  4048f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4048f8:	4544      	cmp	r4, r8
  4048fa:	ddc4      	ble.n	404886 <_strtoll_r+0xc2>
  4048fc:	f04f 3eff 	mov.w	lr, #4294967295
  404900:	e7cd      	b.n	40489e <_strtoll_r+0xda>
  404902:	2301      	movs	r3, #1
  404904:	1c95      	adds	r5, r2, #2
  404906:	7854      	ldrb	r4, [r2, #1]
  404908:	9301      	str	r3, [sp, #4]
  40490a:	e77d      	b.n	404808 <_strtoll_r+0x44>
  40490c:	9b01      	ldr	r3, [sp, #4]
  40490e:	bb2b      	cbnz	r3, 40495c <_strtoll_r+0x198>
  404910:	f04f 30ff 	mov.w	r0, #4294967295
  404914:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  404918:	9a05      	ldr	r2, [sp, #20]
  40491a:	2322      	movs	r3, #34	; 0x22
  40491c:	6013      	str	r3, [r2, #0]
  40491e:	9b02      	ldr	r3, [sp, #8]
  404920:	b913      	cbnz	r3, 404928 <_strtoll_r+0x164>
  404922:	e7e6      	b.n	4048f2 <_strtoll_r+0x12e>
  404924:	4610      	mov	r0, r2
  404926:	4619      	mov	r1, r3
  404928:	3d01      	subs	r5, #1
  40492a:	e7e0      	b.n	4048ee <_strtoll_r+0x12a>
  40492c:	782b      	ldrb	r3, [r5, #0]
  40492e:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404932:	2b58      	cmp	r3, #88	; 0x58
  404934:	d00b      	beq.n	40494e <_strtoll_r+0x18a>
  404936:	2608      	movs	r6, #8
  404938:	2700      	movs	r7, #0
  40493a:	f04f 0b08 	mov.w	fp, #8
  40493e:	e779      	b.n	404834 <_strtoll_r+0x70>
  404940:	2c30      	cmp	r4, #48	; 0x30
  404942:	d112      	bne.n	40496a <_strtoll_r+0x1a6>
  404944:	782b      	ldrb	r3, [r5, #0]
  404946:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  40494a:	2b58      	cmp	r3, #88	; 0x58
  40494c:	d10d      	bne.n	40496a <_strtoll_r+0x1a6>
  40494e:	786c      	ldrb	r4, [r5, #1]
  404950:	2610      	movs	r6, #16
  404952:	2700      	movs	r7, #0
  404954:	3502      	adds	r5, #2
  404956:	f04f 0b10 	mov.w	fp, #16
  40495a:	e76b      	b.n	404834 <_strtoll_r+0x70>
  40495c:	2000      	movs	r0, #0
  40495e:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  404962:	e7d9      	b.n	404918 <_strtoll_r+0x154>
  404964:	4610      	mov	r0, r2
  404966:	4619      	mov	r1, r3
  404968:	e7c3      	b.n	4048f2 <_strtoll_r+0x12e>
  40496a:	2610      	movs	r6, #16
  40496c:	2700      	movs	r7, #0
  40496e:	e761      	b.n	404834 <_strtoll_r+0x70>
  404970:	20000434 	.word	0x20000434

00404974 <_strtoul_r>:
  404974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404978:	4c49      	ldr	r4, [pc, #292]	; (404aa0 <_strtoul_r+0x12c>)
  40497a:	4682      	mov	sl, r0
  40497c:	460e      	mov	r6, r1
  40497e:	f8d4 e000 	ldr.w	lr, [r4]
  404982:	e000      	b.n	404986 <_strtoul_r+0x12>
  404984:	4626      	mov	r6, r4
  404986:	4634      	mov	r4, r6
  404988:	f814 5b01 	ldrb.w	r5, [r4], #1
  40498c:	eb0e 0005 	add.w	r0, lr, r5
  404990:	7840      	ldrb	r0, [r0, #1]
  404992:	f000 0008 	and.w	r0, r0, #8
  404996:	f000 0cff 	and.w	ip, r0, #255	; 0xff
  40499a:	2800      	cmp	r0, #0
  40499c:	d1f2      	bne.n	404984 <_strtoul_r+0x10>
  40499e:	2d2d      	cmp	r5, #45	; 0x2d
  4049a0:	d054      	beq.n	404a4c <_strtoul_r+0xd8>
  4049a2:	2d2b      	cmp	r5, #43	; 0x2b
  4049a4:	bf04      	itt	eq
  4049a6:	7875      	ldrbeq	r5, [r6, #1]
  4049a8:	1cb4      	addeq	r4, r6, #2
  4049aa:	b15b      	cbz	r3, 4049c4 <_strtoul_r+0x50>
  4049ac:	2b10      	cmp	r3, #16
  4049ae:	d05e      	beq.n	404a6e <_strtoul_r+0xfa>
  4049b0:	f04f 38ff 	mov.w	r8, #4294967295
  4049b4:	fbb8 f8f3 	udiv	r8, r8, r3
  4049b8:	fb03 fb08 	mul.w	fp, r3, r8
  4049bc:	ea6f 0b0b 	mvn.w	fp, fp
  4049c0:	4699      	mov	r9, r3
  4049c2:	e007      	b.n	4049d4 <_strtoul_r+0x60>
  4049c4:	2d30      	cmp	r5, #48	; 0x30
  4049c6:	d046      	beq.n	404a56 <_strtoul_r+0xe2>
  4049c8:	230a      	movs	r3, #10
  4049ca:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 404aa4 <_strtoul_r+0x130>
  4049ce:	4699      	mov	r9, r3
  4049d0:	f04f 0b05 	mov.w	fp, #5
  4049d4:	2700      	movs	r7, #0
  4049d6:	4638      	mov	r0, r7
  4049d8:	e00c      	b.n	4049f4 <_strtoul_r+0x80>
  4049da:	3d30      	subs	r5, #48	; 0x30
  4049dc:	42ab      	cmp	r3, r5
  4049de:	dd19      	ble.n	404a14 <_strtoul_r+0xa0>
  4049e0:	1c7e      	adds	r6, r7, #1
  4049e2:	d005      	beq.n	4049f0 <_strtoul_r+0x7c>
  4049e4:	4540      	cmp	r0, r8
  4049e6:	d822      	bhi.n	404a2e <_strtoul_r+0xba>
  4049e8:	d01f      	beq.n	404a2a <_strtoul_r+0xb6>
  4049ea:	fb09 5000 	mla	r0, r9, r0, r5
  4049ee:	2701      	movs	r7, #1
  4049f0:	f814 5b01 	ldrb.w	r5, [r4], #1
  4049f4:	eb0e 0605 	add.w	r6, lr, r5
  4049f8:	7876      	ldrb	r6, [r6, #1]
  4049fa:	f016 0f04 	tst.w	r6, #4
  4049fe:	d1ec      	bne.n	4049da <_strtoul_r+0x66>
  404a00:	f016 0603 	ands.w	r6, r6, #3
  404a04:	d006      	beq.n	404a14 <_strtoul_r+0xa0>
  404a06:	2e01      	cmp	r6, #1
  404a08:	bf14      	ite	ne
  404a0a:	2657      	movne	r6, #87	; 0x57
  404a0c:	2637      	moveq	r6, #55	; 0x37
  404a0e:	1bad      	subs	r5, r5, r6
  404a10:	42ab      	cmp	r3, r5
  404a12:	dce5      	bgt.n	4049e0 <_strtoul_r+0x6c>
  404a14:	2f00      	cmp	r7, #0
  404a16:	db0f      	blt.n	404a38 <_strtoul_r+0xc4>
  404a18:	f1bc 0f00 	cmp.w	ip, #0
  404a1c:	d000      	beq.n	404a20 <_strtoul_r+0xac>
  404a1e:	4240      	negs	r0, r0
  404a20:	b142      	cbz	r2, 404a34 <_strtoul_r+0xc0>
  404a22:	b97f      	cbnz	r7, 404a44 <_strtoul_r+0xd0>
  404a24:	6011      	str	r1, [r2, #0]
  404a26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404a2a:	455d      	cmp	r5, fp
  404a2c:	dddd      	ble.n	4049ea <_strtoul_r+0x76>
  404a2e:	f04f 37ff 	mov.w	r7, #4294967295
  404a32:	e7dd      	b.n	4049f0 <_strtoul_r+0x7c>
  404a34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404a38:	2322      	movs	r3, #34	; 0x22
  404a3a:	f8ca 3000 	str.w	r3, [sl]
  404a3e:	f04f 30ff 	mov.w	r0, #4294967295
  404a42:	b35a      	cbz	r2, 404a9c <_strtoul_r+0x128>
  404a44:	1e61      	subs	r1, r4, #1
  404a46:	6011      	str	r1, [r2, #0]
  404a48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404a4c:	1cb4      	adds	r4, r6, #2
  404a4e:	7875      	ldrb	r5, [r6, #1]
  404a50:	f04f 0c01 	mov.w	ip, #1
  404a54:	e7a9      	b.n	4049aa <_strtoul_r+0x36>
  404a56:	7823      	ldrb	r3, [r4, #0]
  404a58:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404a5c:	2b58      	cmp	r3, #88	; 0x58
  404a5e:	d00d      	beq.n	404a7c <_strtoul_r+0x108>
  404a60:	2308      	movs	r3, #8
  404a62:	4699      	mov	r9, r3
  404a64:	f04f 0b07 	mov.w	fp, #7
  404a68:	f06f 4860 	mvn.w	r8, #3758096384	; 0xe0000000
  404a6c:	e7b2      	b.n	4049d4 <_strtoul_r+0x60>
  404a6e:	2d30      	cmp	r5, #48	; 0x30
  404a70:	d10e      	bne.n	404a90 <_strtoul_r+0x11c>
  404a72:	7820      	ldrb	r0, [r4, #0]
  404a74:	f000 00df 	and.w	r0, r0, #223	; 0xdf
  404a78:	2858      	cmp	r0, #88	; 0x58
  404a7a:	d109      	bne.n	404a90 <_strtoul_r+0x11c>
  404a7c:	f04f 0910 	mov.w	r9, #16
  404a80:	7865      	ldrb	r5, [r4, #1]
  404a82:	464b      	mov	r3, r9
  404a84:	f04f 0b0f 	mov.w	fp, #15
  404a88:	3402      	adds	r4, #2
  404a8a:	f06f 4870 	mvn.w	r8, #4026531840	; 0xf0000000
  404a8e:	e7a1      	b.n	4049d4 <_strtoul_r+0x60>
  404a90:	f04f 0b0f 	mov.w	fp, #15
  404a94:	f06f 4870 	mvn.w	r8, #4026531840	; 0xf0000000
  404a98:	4699      	mov	r9, r3
  404a9a:	e79b      	b.n	4049d4 <_strtoul_r+0x60>
  404a9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404aa0:	20000434 	.word	0x20000434
  404aa4:	19999999 	.word	0x19999999

00404aa8 <_strtoull_r>:
  404aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404aac:	4c6e      	ldr	r4, [pc, #440]	; (404c68 <_strtoull_r+0x1c0>)
  404aae:	b087      	sub	sp, #28
  404ab0:	4692      	mov	sl, r2
  404ab2:	468b      	mov	fp, r1
  404ab4:	9004      	str	r0, [sp, #16]
  404ab6:	461f      	mov	r7, r3
  404ab8:	460a      	mov	r2, r1
  404aba:	6826      	ldr	r6, [r4, #0]
  404abc:	e000      	b.n	404ac0 <_strtoull_r+0x18>
  404abe:	462a      	mov	r2, r5
  404ac0:	4615      	mov	r5, r2
  404ac2:	f815 4b01 	ldrb.w	r4, [r5], #1
  404ac6:	1933      	adds	r3, r6, r4
  404ac8:	785b      	ldrb	r3, [r3, #1]
  404aca:	f003 0308 	and.w	r3, r3, #8
  404ace:	f003 01ff 	and.w	r1, r3, #255	; 0xff
  404ad2:	2b00      	cmp	r3, #0
  404ad4:	d1f3      	bne.n	404abe <_strtoull_r+0x16>
  404ad6:	2c2d      	cmp	r4, #45	; 0x2d
  404ad8:	f000 808e 	beq.w	404bf8 <_strtoull_r+0x150>
  404adc:	2c2b      	cmp	r4, #43	; 0x2b
  404ade:	bf08      	it	eq
  404ae0:	7854      	ldrbeq	r4, [r2, #1]
  404ae2:	9103      	str	r1, [sp, #12]
  404ae4:	bf08      	it	eq
  404ae6:	1c95      	addeq	r5, r2, #2
  404ae8:	b1df      	cbz	r7, 404b22 <_strtoull_r+0x7a>
  404aea:	2f10      	cmp	r7, #16
  404aec:	f000 809a 	beq.w	404c24 <_strtoull_r+0x17c>
  404af0:	ea4f 79e7 	mov.w	r9, r7, asr #31
  404af4:	463a      	mov	r2, r7
  404af6:	464b      	mov	r3, r9
  404af8:	f04f 30ff 	mov.w	r0, #4294967295
  404afc:	f04f 31ff 	mov.w	r1, #4294967295
  404b00:	f000 fafe 	bl	405100 <__aeabi_uldivmod>
  404b04:	463a      	mov	r2, r7
  404b06:	9001      	str	r0, [sp, #4]
  404b08:	9105      	str	r1, [sp, #20]
  404b0a:	464b      	mov	r3, r9
  404b0c:	f04f 30ff 	mov.w	r0, #4294967295
  404b10:	f04f 31ff 	mov.w	r1, #4294967295
  404b14:	f000 faf4 	bl	405100 <__aeabi_uldivmod>
  404b18:	46b8      	mov	r8, r7
  404b1a:	9202      	str	r2, [sp, #8]
  404b1c:	9a01      	ldr	r2, [sp, #4]
  404b1e:	9b05      	ldr	r3, [sp, #20]
  404b20:	e00b      	b.n	404b3a <_strtoull_r+0x92>
  404b22:	2c30      	cmp	r4, #48	; 0x30
  404b24:	d06d      	beq.n	404c02 <_strtoull_r+0x15a>
  404b26:	2305      	movs	r3, #5
  404b28:	9302      	str	r3, [sp, #8]
  404b2a:	4b50      	ldr	r3, [pc, #320]	; (404c6c <_strtoull_r+0x1c4>)
  404b2c:	f04f 3299 	mov.w	r2, #2576980377	; 0x99999999
  404b30:	f04f 080a 	mov.w	r8, #10
  404b34:	f04f 0900 	mov.w	r9, #0
  404b38:	270a      	movs	r7, #10
  404b3a:	f04f 0e00 	mov.w	lr, #0
  404b3e:	2000      	movs	r0, #0
  404b40:	2100      	movs	r1, #0
  404b42:	9701      	str	r7, [sp, #4]
  404b44:	e01c      	b.n	404b80 <_strtoull_r+0xd8>
  404b46:	9f01      	ldr	r7, [sp, #4]
  404b48:	3c30      	subs	r4, #48	; 0x30
  404b4a:	42a7      	cmp	r7, r4
  404b4c:	dd2e      	ble.n	404bac <_strtoull_r+0x104>
  404b4e:	f1be 3fff 	cmp.w	lr, #4294967295
  404b52:	d013      	beq.n	404b7c <_strtoull_r+0xd4>
  404b54:	428b      	cmp	r3, r1
  404b56:	bf08      	it	eq
  404b58:	4282      	cmpeq	r2, r0
  404b5a:	d33e      	bcc.n	404bda <_strtoull_r+0x132>
  404b5c:	4299      	cmp	r1, r3
  404b5e:	bf08      	it	eq
  404b60:	4290      	cmpeq	r0, r2
  404b62:	d037      	beq.n	404bd4 <_strtoull_r+0x12c>
  404b64:	fb00 fc09 	mul.w	ip, r0, r9
  404b68:	fb08 cc01 	mla	ip, r8, r1, ip
  404b6c:	fba0 0108 	umull	r0, r1, r0, r8
  404b70:	4461      	add	r1, ip
  404b72:	1900      	adds	r0, r0, r4
  404b74:	eb41 71e4 	adc.w	r1, r1, r4, asr #31
  404b78:	f04f 0e01 	mov.w	lr, #1
  404b7c:	f815 4b01 	ldrb.w	r4, [r5], #1
  404b80:	eb06 0c04 	add.w	ip, r6, r4
  404b84:	f89c c001 	ldrb.w	ip, [ip, #1]
  404b88:	f01c 0f04 	tst.w	ip, #4
  404b8c:	d1db      	bne.n	404b46 <_strtoull_r+0x9e>
  404b8e:	f01c 0c03 	ands.w	ip, ip, #3
  404b92:	d00b      	beq.n	404bac <_strtoull_r+0x104>
  404b94:	f1bc 0f01 	cmp.w	ip, #1
  404b98:	bf14      	ite	ne
  404b9a:	f04f 0c57 	movne.w	ip, #87	; 0x57
  404b9e:	f04f 0c37 	moveq.w	ip, #55	; 0x37
  404ba2:	9f01      	ldr	r7, [sp, #4]
  404ba4:	ebcc 0404 	rsb	r4, ip, r4
  404ba8:	42a7      	cmp	r7, r4
  404baa:	dcd0      	bgt.n	404b4e <_strtoull_r+0xa6>
  404bac:	f1be 0f00 	cmp.w	lr, #0
  404bb0:	db16      	blt.n	404be0 <_strtoull_r+0x138>
  404bb2:	9b03      	ldr	r3, [sp, #12]
  404bb4:	b113      	cbz	r3, 404bbc <_strtoull_r+0x114>
  404bb6:	4240      	negs	r0, r0
  404bb8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  404bbc:	f1ba 0f00 	cmp.w	sl, #0
  404bc0:	d005      	beq.n	404bce <_strtoull_r+0x126>
  404bc2:	f1be 0f00 	cmp.w	lr, #0
  404bc6:	d115      	bne.n	404bf4 <_strtoull_r+0x14c>
  404bc8:	465d      	mov	r5, fp
  404bca:	f8ca 5000 	str.w	r5, [sl]
  404bce:	b007      	add	sp, #28
  404bd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404bd4:	9f02      	ldr	r7, [sp, #8]
  404bd6:	42bc      	cmp	r4, r7
  404bd8:	ddc4      	ble.n	404b64 <_strtoull_r+0xbc>
  404bda:	f04f 3eff 	mov.w	lr, #4294967295
  404bde:	e7cd      	b.n	404b7c <_strtoull_r+0xd4>
  404be0:	9a04      	ldr	r2, [sp, #16]
  404be2:	2322      	movs	r3, #34	; 0x22
  404be4:	6013      	str	r3, [r2, #0]
  404be6:	f04f 30ff 	mov.w	r0, #4294967295
  404bea:	f04f 31ff 	mov.w	r1, #4294967295
  404bee:	f1ba 0f00 	cmp.w	sl, #0
  404bf2:	d0ec      	beq.n	404bce <_strtoull_r+0x126>
  404bf4:	3d01      	subs	r5, #1
  404bf6:	e7e8      	b.n	404bca <_strtoull_r+0x122>
  404bf8:	2301      	movs	r3, #1
  404bfa:	1c95      	adds	r5, r2, #2
  404bfc:	7854      	ldrb	r4, [r2, #1]
  404bfe:	9303      	str	r3, [sp, #12]
  404c00:	e772      	b.n	404ae8 <_strtoull_r+0x40>
  404c02:	782b      	ldrb	r3, [r5, #0]
  404c04:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404c08:	2b58      	cmp	r3, #88	; 0x58
  404c0a:	d012      	beq.n	404c32 <_strtoull_r+0x18a>
  404c0c:	2307      	movs	r3, #7
  404c0e:	9302      	str	r3, [sp, #8]
  404c10:	f04f 32ff 	mov.w	r2, #4294967295
  404c14:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
  404c18:	f04f 0808 	mov.w	r8, #8
  404c1c:	f04f 0900 	mov.w	r9, #0
  404c20:	2708      	movs	r7, #8
  404c22:	e78a      	b.n	404b3a <_strtoull_r+0x92>
  404c24:	2c30      	cmp	r4, #48	; 0x30
  404c26:	d114      	bne.n	404c52 <_strtoull_r+0x1aa>
  404c28:	782b      	ldrb	r3, [r5, #0]
  404c2a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404c2e:	2b58      	cmp	r3, #88	; 0x58
  404c30:	d10f      	bne.n	404c52 <_strtoull_r+0x1aa>
  404c32:	230f      	movs	r3, #15
  404c34:	9302      	str	r3, [sp, #8]
  404c36:	f04f 33ff 	mov.w	r3, #4294967295
  404c3a:	9301      	str	r3, [sp, #4]
  404c3c:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
  404c40:	786c      	ldrb	r4, [r5, #1]
  404c42:	9305      	str	r3, [sp, #20]
  404c44:	3502      	adds	r5, #2
  404c46:	f04f 0810 	mov.w	r8, #16
  404c4a:	f04f 0900 	mov.w	r9, #0
  404c4e:	2710      	movs	r7, #16
  404c50:	e764      	b.n	404b1c <_strtoull_r+0x74>
  404c52:	230f      	movs	r3, #15
  404c54:	9302      	str	r3, [sp, #8]
  404c56:	f04f 32ff 	mov.w	r2, #4294967295
  404c5a:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
  404c5e:	f04f 0810 	mov.w	r8, #16
  404c62:	f04f 0900 	mov.w	r9, #0
  404c66:	e768      	b.n	404b3a <_strtoull_r+0x92>
  404c68:	20000434 	.word	0x20000434
  404c6c:	19999999 	.word	0x19999999

00404c70 <__submore>:
  404c70:	f101 0340 	add.w	r3, r1, #64	; 0x40
  404c74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404c78:	460c      	mov	r4, r1
  404c7a:	6b09      	ldr	r1, [r1, #48]	; 0x30
  404c7c:	4299      	cmp	r1, r3
  404c7e:	d014      	beq.n	404caa <__submore+0x3a>
  404c80:	6b66      	ldr	r6, [r4, #52]	; 0x34
  404c82:	0077      	lsls	r7, r6, #1
  404c84:	463a      	mov	r2, r7
  404c86:	f7ff f9f5 	bl	404074 <_realloc_r>
  404c8a:	4605      	mov	r5, r0
  404c8c:	b340      	cbz	r0, 404ce0 <__submore+0x70>
  404c8e:	eb00 0806 	add.w	r8, r0, r6
  404c92:	4632      	mov	r2, r6
  404c94:	4640      	mov	r0, r8
  404c96:	4629      	mov	r1, r5
  404c98:	f7ff f8ea 	bl	403e70 <memcpy>
  404c9c:	f8c4 8000 	str.w	r8, [r4]
  404ca0:	6325      	str	r5, [r4, #48]	; 0x30
  404ca2:	6367      	str	r7, [r4, #52]	; 0x34
  404ca4:	2000      	movs	r0, #0
  404ca6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404caa:	f44f 6180 	mov.w	r1, #1024	; 0x400
  404cae:	f7fe fd8f 	bl	4037d0 <_malloc_r>
  404cb2:	b1a8      	cbz	r0, 404ce0 <__submore+0x70>
  404cb4:	f894 3042 	ldrb.w	r3, [r4, #66]	; 0x42
  404cb8:	6320      	str	r0, [r4, #48]	; 0x30
  404cba:	f44f 6280 	mov.w	r2, #1024	; 0x400
  404cbe:	6362      	str	r2, [r4, #52]	; 0x34
  404cc0:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
  404cc4:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
  404cc8:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
  404ccc:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
  404cd0:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
  404cd4:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
  404cd8:	6020      	str	r0, [r4, #0]
  404cda:	2000      	movs	r0, #0
  404cdc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404ce0:	f04f 30ff 	mov.w	r0, #4294967295
  404ce4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00404ce8 <_ungetc_r>:
  404ce8:	f1b1 3fff 	cmp.w	r1, #4294967295
  404cec:	d068      	beq.n	404dc0 <_ungetc_r+0xd8>
  404cee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404cf0:	4607      	mov	r7, r0
  404cf2:	4614      	mov	r4, r2
  404cf4:	460e      	mov	r6, r1
  404cf6:	b110      	cbz	r0, 404cfe <_ungetc_r+0x16>
  404cf8:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404cfa:	2b00      	cmp	r3, #0
  404cfc:	d030      	beq.n	404d60 <_ungetc_r+0x78>
  404cfe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404d02:	049d      	lsls	r5, r3, #18
  404d04:	d405      	bmi.n	404d12 <_ungetc_r+0x2a>
  404d06:	6e62      	ldr	r2, [r4, #100]	; 0x64
  404d08:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  404d0c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  404d10:	6662      	str	r2, [r4, #100]	; 0x64
  404d12:	f023 0320 	bic.w	r3, r3, #32
  404d16:	b29a      	uxth	r2, r3
  404d18:	0750      	lsls	r0, r2, #29
  404d1a:	81a3      	strh	r3, [r4, #12]
  404d1c:	d406      	bmi.n	404d2c <_ungetc_r+0x44>
  404d1e:	06d1      	lsls	r1, r2, #27
  404d20:	d51b      	bpl.n	404d5a <_ungetc_r+0x72>
  404d22:	0712      	lsls	r2, r2, #28
  404d24:	d438      	bmi.n	404d98 <_ungetc_r+0xb0>
  404d26:	f043 0304 	orr.w	r3, r3, #4
  404d2a:	81a3      	strh	r3, [r4, #12]
  404d2c:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404d2e:	b2f5      	uxtb	r5, r6
  404d30:	b1cb      	cbz	r3, 404d66 <_ungetc_r+0x7e>
  404d32:	6862      	ldr	r2, [r4, #4]
  404d34:	6b63      	ldr	r3, [r4, #52]	; 0x34
  404d36:	429a      	cmp	r2, r3
  404d38:	da09      	bge.n	404d4e <_ungetc_r+0x66>
  404d3a:	6823      	ldr	r3, [r4, #0]
  404d3c:	1e5a      	subs	r2, r3, #1
  404d3e:	6022      	str	r2, [r4, #0]
  404d40:	f803 6c01 	strb.w	r6, [r3, #-1]
  404d44:	6863      	ldr	r3, [r4, #4]
  404d46:	3301      	adds	r3, #1
  404d48:	4628      	mov	r0, r5
  404d4a:	6063      	str	r3, [r4, #4]
  404d4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404d4e:	4638      	mov	r0, r7
  404d50:	4621      	mov	r1, r4
  404d52:	f7ff ff8d 	bl	404c70 <__submore>
  404d56:	2800      	cmp	r0, #0
  404d58:	d0ef      	beq.n	404d3a <_ungetc_r+0x52>
  404d5a:	f04f 30ff 	mov.w	r0, #4294967295
  404d5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404d60:	f7fe f850 	bl	402e04 <__sinit>
  404d64:	e7cb      	b.n	404cfe <_ungetc_r+0x16>
  404d66:	6922      	ldr	r2, [r4, #16]
  404d68:	6823      	ldr	r3, [r4, #0]
  404d6a:	b12a      	cbz	r2, 404d78 <_ungetc_r+0x90>
  404d6c:	429a      	cmp	r2, r3
  404d6e:	d203      	bcs.n	404d78 <_ungetc_r+0x90>
  404d70:	f813 2c01 	ldrb.w	r2, [r3, #-1]
  404d74:	4295      	cmp	r5, r2
  404d76:	d01c      	beq.n	404db2 <_ungetc_r+0xca>
  404d78:	63a3      	str	r3, [r4, #56]	; 0x38
  404d7a:	4623      	mov	r3, r4
  404d7c:	6860      	ldr	r0, [r4, #4]
  404d7e:	63e0      	str	r0, [r4, #60]	; 0x3c
  404d80:	f104 0140 	add.w	r1, r4, #64	; 0x40
  404d84:	2203      	movs	r2, #3
  404d86:	6362      	str	r2, [r4, #52]	; 0x34
  404d88:	6321      	str	r1, [r4, #48]	; 0x30
  404d8a:	f803 6f42 	strb.w	r6, [r3, #66]!
  404d8e:	2201      	movs	r2, #1
  404d90:	4628      	mov	r0, r5
  404d92:	6023      	str	r3, [r4, #0]
  404d94:	6062      	str	r2, [r4, #4]
  404d96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404d98:	4621      	mov	r1, r4
  404d9a:	4638      	mov	r0, r7
  404d9c:	f7fd ff8c 	bl	402cb8 <_fflush_r>
  404da0:	2800      	cmp	r0, #0
  404da2:	d1da      	bne.n	404d5a <_ungetc_r+0x72>
  404da4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404da8:	60a0      	str	r0, [r4, #8]
  404daa:	61a0      	str	r0, [r4, #24]
  404dac:	f023 0308 	bic.w	r3, r3, #8
  404db0:	e7b9      	b.n	404d26 <_ungetc_r+0x3e>
  404db2:	6862      	ldr	r2, [r4, #4]
  404db4:	3b01      	subs	r3, #1
  404db6:	3201      	adds	r2, #1
  404db8:	6023      	str	r3, [r4, #0]
  404dba:	4628      	mov	r0, r5
  404dbc:	6062      	str	r2, [r4, #4]
  404dbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404dc0:	f04f 30ff 	mov.w	r0, #4294967295
  404dc4:	4770      	bx	lr
  404dc6:	bf00      	nop

00404dc8 <__swbuf_r>:
  404dc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404dca:	460e      	mov	r6, r1
  404dcc:	4614      	mov	r4, r2
  404dce:	4607      	mov	r7, r0
  404dd0:	b110      	cbz	r0, 404dd8 <__swbuf_r+0x10>
  404dd2:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404dd4:	2b00      	cmp	r3, #0
  404dd6:	d04a      	beq.n	404e6e <__swbuf_r+0xa6>
  404dd8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  404ddc:	69a3      	ldr	r3, [r4, #24]
  404dde:	60a3      	str	r3, [r4, #8]
  404de0:	b291      	uxth	r1, r2
  404de2:	0708      	lsls	r0, r1, #28
  404de4:	d538      	bpl.n	404e58 <__swbuf_r+0x90>
  404de6:	6923      	ldr	r3, [r4, #16]
  404de8:	2b00      	cmp	r3, #0
  404dea:	d035      	beq.n	404e58 <__swbuf_r+0x90>
  404dec:	0489      	lsls	r1, r1, #18
  404dee:	b2f5      	uxtb	r5, r6
  404df0:	d515      	bpl.n	404e1e <__swbuf_r+0x56>
  404df2:	6822      	ldr	r2, [r4, #0]
  404df4:	6961      	ldr	r1, [r4, #20]
  404df6:	1ad3      	subs	r3, r2, r3
  404df8:	428b      	cmp	r3, r1
  404dfa:	da1c      	bge.n	404e36 <__swbuf_r+0x6e>
  404dfc:	3301      	adds	r3, #1
  404dfe:	68a1      	ldr	r1, [r4, #8]
  404e00:	1c50      	adds	r0, r2, #1
  404e02:	3901      	subs	r1, #1
  404e04:	60a1      	str	r1, [r4, #8]
  404e06:	6020      	str	r0, [r4, #0]
  404e08:	7016      	strb	r6, [r2, #0]
  404e0a:	6962      	ldr	r2, [r4, #20]
  404e0c:	429a      	cmp	r2, r3
  404e0e:	d01a      	beq.n	404e46 <__swbuf_r+0x7e>
  404e10:	89a3      	ldrh	r3, [r4, #12]
  404e12:	07db      	lsls	r3, r3, #31
  404e14:	d501      	bpl.n	404e1a <__swbuf_r+0x52>
  404e16:	2d0a      	cmp	r5, #10
  404e18:	d015      	beq.n	404e46 <__swbuf_r+0x7e>
  404e1a:	4628      	mov	r0, r5
  404e1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404e1e:	6e61      	ldr	r1, [r4, #100]	; 0x64
  404e20:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  404e24:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  404e28:	81a2      	strh	r2, [r4, #12]
  404e2a:	6822      	ldr	r2, [r4, #0]
  404e2c:	6661      	str	r1, [r4, #100]	; 0x64
  404e2e:	6961      	ldr	r1, [r4, #20]
  404e30:	1ad3      	subs	r3, r2, r3
  404e32:	428b      	cmp	r3, r1
  404e34:	dbe2      	blt.n	404dfc <__swbuf_r+0x34>
  404e36:	4621      	mov	r1, r4
  404e38:	4638      	mov	r0, r7
  404e3a:	f7fd ff3d 	bl	402cb8 <_fflush_r>
  404e3e:	b940      	cbnz	r0, 404e52 <__swbuf_r+0x8a>
  404e40:	6822      	ldr	r2, [r4, #0]
  404e42:	2301      	movs	r3, #1
  404e44:	e7db      	b.n	404dfe <__swbuf_r+0x36>
  404e46:	4621      	mov	r1, r4
  404e48:	4638      	mov	r0, r7
  404e4a:	f7fd ff35 	bl	402cb8 <_fflush_r>
  404e4e:	2800      	cmp	r0, #0
  404e50:	d0e3      	beq.n	404e1a <__swbuf_r+0x52>
  404e52:	f04f 30ff 	mov.w	r0, #4294967295
  404e56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404e58:	4621      	mov	r1, r4
  404e5a:	4638      	mov	r0, r7
  404e5c:	f7fd fe14 	bl	402a88 <__swsetup_r>
  404e60:	2800      	cmp	r0, #0
  404e62:	d1f6      	bne.n	404e52 <__swbuf_r+0x8a>
  404e64:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  404e68:	6923      	ldr	r3, [r4, #16]
  404e6a:	b291      	uxth	r1, r2
  404e6c:	e7be      	b.n	404dec <__swbuf_r+0x24>
  404e6e:	f7fd ffc9 	bl	402e04 <__sinit>
  404e72:	e7b1      	b.n	404dd8 <__swbuf_r+0x10>

00404e74 <_wcrtomb_r>:
  404e74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404e78:	4605      	mov	r5, r0
  404e7a:	b086      	sub	sp, #24
  404e7c:	461e      	mov	r6, r3
  404e7e:	460c      	mov	r4, r1
  404e80:	b1a1      	cbz	r1, 404eac <_wcrtomb_r+0x38>
  404e82:	4b10      	ldr	r3, [pc, #64]	; (404ec4 <_wcrtomb_r+0x50>)
  404e84:	4617      	mov	r7, r2
  404e86:	f8d3 8000 	ldr.w	r8, [r3]
  404e8a:	f7fe fc1b 	bl	4036c4 <__locale_charset>
  404e8e:	9600      	str	r6, [sp, #0]
  404e90:	4603      	mov	r3, r0
  404e92:	463a      	mov	r2, r7
  404e94:	4621      	mov	r1, r4
  404e96:	4628      	mov	r0, r5
  404e98:	47c0      	blx	r8
  404e9a:	1c43      	adds	r3, r0, #1
  404e9c:	d103      	bne.n	404ea6 <_wcrtomb_r+0x32>
  404e9e:	2200      	movs	r2, #0
  404ea0:	238a      	movs	r3, #138	; 0x8a
  404ea2:	6032      	str	r2, [r6, #0]
  404ea4:	602b      	str	r3, [r5, #0]
  404ea6:	b006      	add	sp, #24
  404ea8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404eac:	4b05      	ldr	r3, [pc, #20]	; (404ec4 <_wcrtomb_r+0x50>)
  404eae:	681f      	ldr	r7, [r3, #0]
  404eb0:	f7fe fc08 	bl	4036c4 <__locale_charset>
  404eb4:	9600      	str	r6, [sp, #0]
  404eb6:	4603      	mov	r3, r0
  404eb8:	4622      	mov	r2, r4
  404eba:	a903      	add	r1, sp, #12
  404ebc:	4628      	mov	r0, r5
  404ebe:	47b8      	blx	r7
  404ec0:	e7eb      	b.n	404e9a <_wcrtomb_r+0x26>
  404ec2:	bf00      	nop
  404ec4:	20000870 	.word	0x20000870

00404ec8 <__ascii_wctomb>:
  404ec8:	b121      	cbz	r1, 404ed4 <__ascii_wctomb+0xc>
  404eca:	2aff      	cmp	r2, #255	; 0xff
  404ecc:	d804      	bhi.n	404ed8 <__ascii_wctomb+0x10>
  404ece:	700a      	strb	r2, [r1, #0]
  404ed0:	2001      	movs	r0, #1
  404ed2:	4770      	bx	lr
  404ed4:	4608      	mov	r0, r1
  404ed6:	4770      	bx	lr
  404ed8:	238a      	movs	r3, #138	; 0x8a
  404eda:	6003      	str	r3, [r0, #0]
  404edc:	f04f 30ff 	mov.w	r0, #4294967295
  404ee0:	4770      	bx	lr
  404ee2:	bf00      	nop

00404ee4 <_write_r>:
  404ee4:	b570      	push	{r4, r5, r6, lr}
  404ee6:	460d      	mov	r5, r1
  404ee8:	4c08      	ldr	r4, [pc, #32]	; (404f0c <_write_r+0x28>)
  404eea:	4611      	mov	r1, r2
  404eec:	4606      	mov	r6, r0
  404eee:	461a      	mov	r2, r3
  404ef0:	4628      	mov	r0, r5
  404ef2:	2300      	movs	r3, #0
  404ef4:	6023      	str	r3, [r4, #0]
  404ef6:	f7fb fb7d 	bl	4005f4 <_write>
  404efa:	1c43      	adds	r3, r0, #1
  404efc:	d000      	beq.n	404f00 <_write_r+0x1c>
  404efe:	bd70      	pop	{r4, r5, r6, pc}
  404f00:	6823      	ldr	r3, [r4, #0]
  404f02:	2b00      	cmp	r3, #0
  404f04:	d0fb      	beq.n	404efe <_write_r+0x1a>
  404f06:	6033      	str	r3, [r6, #0]
  404f08:	bd70      	pop	{r4, r5, r6, pc}
  404f0a:	bf00      	nop
  404f0c:	20000948 	.word	0x20000948

00404f10 <__register_exitproc>:
  404f10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  404f14:	4c25      	ldr	r4, [pc, #148]	; (404fac <__register_exitproc+0x9c>)
  404f16:	6825      	ldr	r5, [r4, #0]
  404f18:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
  404f1c:	4606      	mov	r6, r0
  404f1e:	4688      	mov	r8, r1
  404f20:	4692      	mov	sl, r2
  404f22:	4699      	mov	r9, r3
  404f24:	b3c4      	cbz	r4, 404f98 <__register_exitproc+0x88>
  404f26:	6860      	ldr	r0, [r4, #4]
  404f28:	281f      	cmp	r0, #31
  404f2a:	dc17      	bgt.n	404f5c <__register_exitproc+0x4c>
  404f2c:	1c43      	adds	r3, r0, #1
  404f2e:	b176      	cbz	r6, 404f4e <__register_exitproc+0x3e>
  404f30:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  404f34:	2201      	movs	r2, #1
  404f36:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  404f3a:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  404f3e:	4082      	lsls	r2, r0
  404f40:	4311      	orrs	r1, r2
  404f42:	2e02      	cmp	r6, #2
  404f44:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  404f48:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  404f4c:	d01e      	beq.n	404f8c <__register_exitproc+0x7c>
  404f4e:	3002      	adds	r0, #2
  404f50:	6063      	str	r3, [r4, #4]
  404f52:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  404f56:	2000      	movs	r0, #0
  404f58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404f5c:	4b14      	ldr	r3, [pc, #80]	; (404fb0 <__register_exitproc+0xa0>)
  404f5e:	b303      	cbz	r3, 404fa2 <__register_exitproc+0x92>
  404f60:	f44f 70c8 	mov.w	r0, #400	; 0x190
  404f64:	f7fe fc2c 	bl	4037c0 <malloc>
  404f68:	4604      	mov	r4, r0
  404f6a:	b1d0      	cbz	r0, 404fa2 <__register_exitproc+0x92>
  404f6c:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  404f70:	2700      	movs	r7, #0
  404f72:	e880 0088 	stmia.w	r0, {r3, r7}
  404f76:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  404f7a:	4638      	mov	r0, r7
  404f7c:	2301      	movs	r3, #1
  404f7e:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  404f82:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  404f86:	2e00      	cmp	r6, #0
  404f88:	d0e1      	beq.n	404f4e <__register_exitproc+0x3e>
  404f8a:	e7d1      	b.n	404f30 <__register_exitproc+0x20>
  404f8c:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  404f90:	430a      	orrs	r2, r1
  404f92:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  404f96:	e7da      	b.n	404f4e <__register_exitproc+0x3e>
  404f98:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  404f9c:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  404fa0:	e7c1      	b.n	404f26 <__register_exitproc+0x16>
  404fa2:	f04f 30ff 	mov.w	r0, #4294967295
  404fa6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404faa:	bf00      	nop
  404fac:	0040568c 	.word	0x0040568c
  404fb0:	004037c1 	.word	0x004037c1

00404fb4 <_close_r>:
  404fb4:	b538      	push	{r3, r4, r5, lr}
  404fb6:	4c07      	ldr	r4, [pc, #28]	; (404fd4 <_close_r+0x20>)
  404fb8:	2300      	movs	r3, #0
  404fba:	4605      	mov	r5, r0
  404fbc:	4608      	mov	r0, r1
  404fbe:	6023      	str	r3, [r4, #0]
  404fc0:	f7fb fea6 	bl	400d10 <_close>
  404fc4:	1c43      	adds	r3, r0, #1
  404fc6:	d000      	beq.n	404fca <_close_r+0x16>
  404fc8:	bd38      	pop	{r3, r4, r5, pc}
  404fca:	6823      	ldr	r3, [r4, #0]
  404fcc:	2b00      	cmp	r3, #0
  404fce:	d0fb      	beq.n	404fc8 <_close_r+0x14>
  404fd0:	602b      	str	r3, [r5, #0]
  404fd2:	bd38      	pop	{r3, r4, r5, pc}
  404fd4:	20000948 	.word	0x20000948

00404fd8 <_fclose_r>:
  404fd8:	2900      	cmp	r1, #0
  404fda:	d03d      	beq.n	405058 <_fclose_r+0x80>
  404fdc:	b570      	push	{r4, r5, r6, lr}
  404fde:	4605      	mov	r5, r0
  404fe0:	460c      	mov	r4, r1
  404fe2:	b108      	cbz	r0, 404fe8 <_fclose_r+0x10>
  404fe4:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404fe6:	b37b      	cbz	r3, 405048 <_fclose_r+0x70>
  404fe8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404fec:	b90b      	cbnz	r3, 404ff2 <_fclose_r+0x1a>
  404fee:	2000      	movs	r0, #0
  404ff0:	bd70      	pop	{r4, r5, r6, pc}
  404ff2:	4621      	mov	r1, r4
  404ff4:	4628      	mov	r0, r5
  404ff6:	f7fd fdbb 	bl	402b70 <__sflush_r>
  404ffa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  404ffc:	4606      	mov	r6, r0
  404ffe:	b133      	cbz	r3, 40500e <_fclose_r+0x36>
  405000:	69e1      	ldr	r1, [r4, #28]
  405002:	4628      	mov	r0, r5
  405004:	4798      	blx	r3
  405006:	2800      	cmp	r0, #0
  405008:	bfb8      	it	lt
  40500a:	f04f 36ff 	movlt.w	r6, #4294967295
  40500e:	89a3      	ldrh	r3, [r4, #12]
  405010:	061b      	lsls	r3, r3, #24
  405012:	d41c      	bmi.n	40504e <_fclose_r+0x76>
  405014:	6b21      	ldr	r1, [r4, #48]	; 0x30
  405016:	b141      	cbz	r1, 40502a <_fclose_r+0x52>
  405018:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40501c:	4299      	cmp	r1, r3
  40501e:	d002      	beq.n	405026 <_fclose_r+0x4e>
  405020:	4628      	mov	r0, r5
  405022:	f7fe f887 	bl	403134 <_free_r>
  405026:	2300      	movs	r3, #0
  405028:	6323      	str	r3, [r4, #48]	; 0x30
  40502a:	6c61      	ldr	r1, [r4, #68]	; 0x44
  40502c:	b121      	cbz	r1, 405038 <_fclose_r+0x60>
  40502e:	4628      	mov	r0, r5
  405030:	f7fe f880 	bl	403134 <_free_r>
  405034:	2300      	movs	r3, #0
  405036:	6463      	str	r3, [r4, #68]	; 0x44
  405038:	f7fd feea 	bl	402e10 <__sfp_lock_acquire>
  40503c:	2300      	movs	r3, #0
  40503e:	81a3      	strh	r3, [r4, #12]
  405040:	f7fd fee8 	bl	402e14 <__sfp_lock_release>
  405044:	4630      	mov	r0, r6
  405046:	bd70      	pop	{r4, r5, r6, pc}
  405048:	f7fd fedc 	bl	402e04 <__sinit>
  40504c:	e7cc      	b.n	404fe8 <_fclose_r+0x10>
  40504e:	6921      	ldr	r1, [r4, #16]
  405050:	4628      	mov	r0, r5
  405052:	f7fe f86f 	bl	403134 <_free_r>
  405056:	e7dd      	b.n	405014 <_fclose_r+0x3c>
  405058:	2000      	movs	r0, #0
  40505a:	4770      	bx	lr

0040505c <_fstat_r>:
  40505c:	b538      	push	{r3, r4, r5, lr}
  40505e:	460b      	mov	r3, r1
  405060:	4c07      	ldr	r4, [pc, #28]	; (405080 <_fstat_r+0x24>)
  405062:	4605      	mov	r5, r0
  405064:	4611      	mov	r1, r2
  405066:	4618      	mov	r0, r3
  405068:	2300      	movs	r3, #0
  40506a:	6023      	str	r3, [r4, #0]
  40506c:	f7fb fe54 	bl	400d18 <_fstat>
  405070:	1c43      	adds	r3, r0, #1
  405072:	d000      	beq.n	405076 <_fstat_r+0x1a>
  405074:	bd38      	pop	{r3, r4, r5, pc}
  405076:	6823      	ldr	r3, [r4, #0]
  405078:	2b00      	cmp	r3, #0
  40507a:	d0fb      	beq.n	405074 <_fstat_r+0x18>
  40507c:	602b      	str	r3, [r5, #0]
  40507e:	bd38      	pop	{r3, r4, r5, pc}
  405080:	20000948 	.word	0x20000948

00405084 <_isatty_r>:
  405084:	b538      	push	{r3, r4, r5, lr}
  405086:	4c07      	ldr	r4, [pc, #28]	; (4050a4 <_isatty_r+0x20>)
  405088:	2300      	movs	r3, #0
  40508a:	4605      	mov	r5, r0
  40508c:	4608      	mov	r0, r1
  40508e:	6023      	str	r3, [r4, #0]
  405090:	f7fb fe48 	bl	400d24 <_isatty>
  405094:	1c43      	adds	r3, r0, #1
  405096:	d000      	beq.n	40509a <_isatty_r+0x16>
  405098:	bd38      	pop	{r3, r4, r5, pc}
  40509a:	6823      	ldr	r3, [r4, #0]
  40509c:	2b00      	cmp	r3, #0
  40509e:	d0fb      	beq.n	405098 <_isatty_r+0x14>
  4050a0:	602b      	str	r3, [r5, #0]
  4050a2:	bd38      	pop	{r3, r4, r5, pc}
  4050a4:	20000948 	.word	0x20000948

004050a8 <_lseek_r>:
  4050a8:	b570      	push	{r4, r5, r6, lr}
  4050aa:	460d      	mov	r5, r1
  4050ac:	4c08      	ldr	r4, [pc, #32]	; (4050d0 <_lseek_r+0x28>)
  4050ae:	4611      	mov	r1, r2
  4050b0:	4606      	mov	r6, r0
  4050b2:	461a      	mov	r2, r3
  4050b4:	4628      	mov	r0, r5
  4050b6:	2300      	movs	r3, #0
  4050b8:	6023      	str	r3, [r4, #0]
  4050ba:	f7fb fe35 	bl	400d28 <_lseek>
  4050be:	1c43      	adds	r3, r0, #1
  4050c0:	d000      	beq.n	4050c4 <_lseek_r+0x1c>
  4050c2:	bd70      	pop	{r4, r5, r6, pc}
  4050c4:	6823      	ldr	r3, [r4, #0]
  4050c6:	2b00      	cmp	r3, #0
  4050c8:	d0fb      	beq.n	4050c2 <_lseek_r+0x1a>
  4050ca:	6033      	str	r3, [r6, #0]
  4050cc:	bd70      	pop	{r4, r5, r6, pc}
  4050ce:	bf00      	nop
  4050d0:	20000948 	.word	0x20000948

004050d4 <_read_r>:
  4050d4:	b570      	push	{r4, r5, r6, lr}
  4050d6:	460d      	mov	r5, r1
  4050d8:	4c08      	ldr	r4, [pc, #32]	; (4050fc <_read_r+0x28>)
  4050da:	4611      	mov	r1, r2
  4050dc:	4606      	mov	r6, r0
  4050de:	461a      	mov	r2, r3
  4050e0:	4628      	mov	r0, r5
  4050e2:	2300      	movs	r3, #0
  4050e4:	6023      	str	r3, [r4, #0]
  4050e6:	f7fb fa67 	bl	4005b8 <_read>
  4050ea:	1c43      	adds	r3, r0, #1
  4050ec:	d000      	beq.n	4050f0 <_read_r+0x1c>
  4050ee:	bd70      	pop	{r4, r5, r6, pc}
  4050f0:	6823      	ldr	r3, [r4, #0]
  4050f2:	2b00      	cmp	r3, #0
  4050f4:	d0fb      	beq.n	4050ee <_read_r+0x1a>
  4050f6:	6033      	str	r3, [r6, #0]
  4050f8:	bd70      	pop	{r4, r5, r6, pc}
  4050fa:	bf00      	nop
  4050fc:	20000948 	.word	0x20000948

00405100 <__aeabi_uldivmod>:
  405100:	b953      	cbnz	r3, 405118 <__aeabi_uldivmod+0x18>
  405102:	b94a      	cbnz	r2, 405118 <__aeabi_uldivmod+0x18>
  405104:	2900      	cmp	r1, #0
  405106:	bf08      	it	eq
  405108:	2800      	cmpeq	r0, #0
  40510a:	bf1c      	itt	ne
  40510c:	f04f 31ff 	movne.w	r1, #4294967295
  405110:	f04f 30ff 	movne.w	r0, #4294967295
  405114:	f000 b97e 	b.w	405414 <__aeabi_idiv0>
  405118:	f1ad 0c08 	sub.w	ip, sp, #8
  40511c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  405120:	f000 f806 	bl	405130 <__udivmoddi4>
  405124:	f8dd e004 	ldr.w	lr, [sp, #4]
  405128:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40512c:	b004      	add	sp, #16
  40512e:	4770      	bx	lr

00405130 <__udivmoddi4>:
  405130:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405134:	468c      	mov	ip, r1
  405136:	460e      	mov	r6, r1
  405138:	4604      	mov	r4, r0
  40513a:	9d08      	ldr	r5, [sp, #32]
  40513c:	2b00      	cmp	r3, #0
  40513e:	d150      	bne.n	4051e2 <__udivmoddi4+0xb2>
  405140:	428a      	cmp	r2, r1
  405142:	4617      	mov	r7, r2
  405144:	d96c      	bls.n	405220 <__udivmoddi4+0xf0>
  405146:	fab2 fe82 	clz	lr, r2
  40514a:	f1be 0f00 	cmp.w	lr, #0
  40514e:	d00b      	beq.n	405168 <__udivmoddi4+0x38>
  405150:	f1ce 0420 	rsb	r4, lr, #32
  405154:	fa20 f404 	lsr.w	r4, r0, r4
  405158:	fa01 f60e 	lsl.w	r6, r1, lr
  40515c:	ea44 0c06 	orr.w	ip, r4, r6
  405160:	fa02 f70e 	lsl.w	r7, r2, lr
  405164:	fa00 f40e 	lsl.w	r4, r0, lr
  405168:	ea4f 4917 	mov.w	r9, r7, lsr #16
  40516c:	0c22      	lsrs	r2, r4, #16
  40516e:	fbbc f0f9 	udiv	r0, ip, r9
  405172:	fa1f f887 	uxth.w	r8, r7
  405176:	fb09 c610 	mls	r6, r9, r0, ip
  40517a:	ea42 4606 	orr.w	r6, r2, r6, lsl #16
  40517e:	fb00 f308 	mul.w	r3, r0, r8
  405182:	42b3      	cmp	r3, r6
  405184:	d909      	bls.n	40519a <__udivmoddi4+0x6a>
  405186:	19f6      	adds	r6, r6, r7
  405188:	f100 32ff 	add.w	r2, r0, #4294967295
  40518c:	f080 8122 	bcs.w	4053d4 <__udivmoddi4+0x2a4>
  405190:	42b3      	cmp	r3, r6
  405192:	f240 811f 	bls.w	4053d4 <__udivmoddi4+0x2a4>
  405196:	3802      	subs	r0, #2
  405198:	443e      	add	r6, r7
  40519a:	1af6      	subs	r6, r6, r3
  40519c:	b2a2      	uxth	r2, r4
  40519e:	fbb6 f3f9 	udiv	r3, r6, r9
  4051a2:	fb09 6613 	mls	r6, r9, r3, r6
  4051a6:	ea42 4406 	orr.w	r4, r2, r6, lsl #16
  4051aa:	fb03 f808 	mul.w	r8, r3, r8
  4051ae:	45a0      	cmp	r8, r4
  4051b0:	d909      	bls.n	4051c6 <__udivmoddi4+0x96>
  4051b2:	19e4      	adds	r4, r4, r7
  4051b4:	f103 32ff 	add.w	r2, r3, #4294967295
  4051b8:	f080 810a 	bcs.w	4053d0 <__udivmoddi4+0x2a0>
  4051bc:	45a0      	cmp	r8, r4
  4051be:	f240 8107 	bls.w	4053d0 <__udivmoddi4+0x2a0>
  4051c2:	3b02      	subs	r3, #2
  4051c4:	443c      	add	r4, r7
  4051c6:	ebc8 0404 	rsb	r4, r8, r4
  4051ca:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  4051ce:	2100      	movs	r1, #0
  4051d0:	2d00      	cmp	r5, #0
  4051d2:	d062      	beq.n	40529a <__udivmoddi4+0x16a>
  4051d4:	fa24 f40e 	lsr.w	r4, r4, lr
  4051d8:	2300      	movs	r3, #0
  4051da:	602c      	str	r4, [r5, #0]
  4051dc:	606b      	str	r3, [r5, #4]
  4051de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4051e2:	428b      	cmp	r3, r1
  4051e4:	d907      	bls.n	4051f6 <__udivmoddi4+0xc6>
  4051e6:	2d00      	cmp	r5, #0
  4051e8:	d055      	beq.n	405296 <__udivmoddi4+0x166>
  4051ea:	2100      	movs	r1, #0
  4051ec:	e885 0041 	stmia.w	r5, {r0, r6}
  4051f0:	4608      	mov	r0, r1
  4051f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4051f6:	fab3 f183 	clz	r1, r3
  4051fa:	2900      	cmp	r1, #0
  4051fc:	f040 8090 	bne.w	405320 <__udivmoddi4+0x1f0>
  405200:	42b3      	cmp	r3, r6
  405202:	d302      	bcc.n	40520a <__udivmoddi4+0xda>
  405204:	4282      	cmp	r2, r0
  405206:	f200 80f8 	bhi.w	4053fa <__udivmoddi4+0x2ca>
  40520a:	1a84      	subs	r4, r0, r2
  40520c:	eb66 0603 	sbc.w	r6, r6, r3
  405210:	2001      	movs	r0, #1
  405212:	46b4      	mov	ip, r6
  405214:	2d00      	cmp	r5, #0
  405216:	d040      	beq.n	40529a <__udivmoddi4+0x16a>
  405218:	e885 1010 	stmia.w	r5, {r4, ip}
  40521c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405220:	b912      	cbnz	r2, 405228 <__udivmoddi4+0xf8>
  405222:	2701      	movs	r7, #1
  405224:	fbb7 f7f2 	udiv	r7, r7, r2
  405228:	fab7 fe87 	clz	lr, r7
  40522c:	f1be 0f00 	cmp.w	lr, #0
  405230:	d135      	bne.n	40529e <__udivmoddi4+0x16e>
  405232:	1bf3      	subs	r3, r6, r7
  405234:	ea4f 4817 	mov.w	r8, r7, lsr #16
  405238:	fa1f fc87 	uxth.w	ip, r7
  40523c:	2101      	movs	r1, #1
  40523e:	fbb3 f0f8 	udiv	r0, r3, r8
  405242:	0c22      	lsrs	r2, r4, #16
  405244:	fb08 3610 	mls	r6, r8, r0, r3
  405248:	ea42 4606 	orr.w	r6, r2, r6, lsl #16
  40524c:	fb0c f300 	mul.w	r3, ip, r0
  405250:	42b3      	cmp	r3, r6
  405252:	d907      	bls.n	405264 <__udivmoddi4+0x134>
  405254:	19f6      	adds	r6, r6, r7
  405256:	f100 32ff 	add.w	r2, r0, #4294967295
  40525a:	d202      	bcs.n	405262 <__udivmoddi4+0x132>
  40525c:	42b3      	cmp	r3, r6
  40525e:	f200 80ce 	bhi.w	4053fe <__udivmoddi4+0x2ce>
  405262:	4610      	mov	r0, r2
  405264:	1af6      	subs	r6, r6, r3
  405266:	b2a2      	uxth	r2, r4
  405268:	fbb6 f3f8 	udiv	r3, r6, r8
  40526c:	fb08 6613 	mls	r6, r8, r3, r6
  405270:	ea42 4406 	orr.w	r4, r2, r6, lsl #16
  405274:	fb0c fc03 	mul.w	ip, ip, r3
  405278:	45a4      	cmp	ip, r4
  40527a:	d907      	bls.n	40528c <__udivmoddi4+0x15c>
  40527c:	19e4      	adds	r4, r4, r7
  40527e:	f103 32ff 	add.w	r2, r3, #4294967295
  405282:	d202      	bcs.n	40528a <__udivmoddi4+0x15a>
  405284:	45a4      	cmp	ip, r4
  405286:	f200 80b5 	bhi.w	4053f4 <__udivmoddi4+0x2c4>
  40528a:	4613      	mov	r3, r2
  40528c:	ebcc 0404 	rsb	r4, ip, r4
  405290:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  405294:	e79c      	b.n	4051d0 <__udivmoddi4+0xa0>
  405296:	4629      	mov	r1, r5
  405298:	4628      	mov	r0, r5
  40529a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40529e:	f1ce 0120 	rsb	r1, lr, #32
  4052a2:	fa06 f30e 	lsl.w	r3, r6, lr
  4052a6:	fa07 f70e 	lsl.w	r7, r7, lr
  4052aa:	fa20 f901 	lsr.w	r9, r0, r1
  4052ae:	ea4f 4817 	mov.w	r8, r7, lsr #16
  4052b2:	40ce      	lsrs	r6, r1
  4052b4:	ea49 0903 	orr.w	r9, r9, r3
  4052b8:	fbb6 faf8 	udiv	sl, r6, r8
  4052bc:	ea4f 4419 	mov.w	r4, r9, lsr #16
  4052c0:	fb08 661a 	mls	r6, r8, sl, r6
  4052c4:	fa1f fc87 	uxth.w	ip, r7
  4052c8:	ea44 4306 	orr.w	r3, r4, r6, lsl #16
  4052cc:	fb0a f20c 	mul.w	r2, sl, ip
  4052d0:	429a      	cmp	r2, r3
  4052d2:	fa00 f40e 	lsl.w	r4, r0, lr
  4052d6:	d90a      	bls.n	4052ee <__udivmoddi4+0x1be>
  4052d8:	19db      	adds	r3, r3, r7
  4052da:	f10a 31ff 	add.w	r1, sl, #4294967295
  4052de:	f080 8087 	bcs.w	4053f0 <__udivmoddi4+0x2c0>
  4052e2:	429a      	cmp	r2, r3
  4052e4:	f240 8084 	bls.w	4053f0 <__udivmoddi4+0x2c0>
  4052e8:	f1aa 0a02 	sub.w	sl, sl, #2
  4052ec:	443b      	add	r3, r7
  4052ee:	1a9b      	subs	r3, r3, r2
  4052f0:	fa1f f989 	uxth.w	r9, r9
  4052f4:	fbb3 f1f8 	udiv	r1, r3, r8
  4052f8:	fb08 3311 	mls	r3, r8, r1, r3
  4052fc:	ea49 4303 	orr.w	r3, r9, r3, lsl #16
  405300:	fb01 f60c 	mul.w	r6, r1, ip
  405304:	429e      	cmp	r6, r3
  405306:	d907      	bls.n	405318 <__udivmoddi4+0x1e8>
  405308:	19db      	adds	r3, r3, r7
  40530a:	f101 32ff 	add.w	r2, r1, #4294967295
  40530e:	d26b      	bcs.n	4053e8 <__udivmoddi4+0x2b8>
  405310:	429e      	cmp	r6, r3
  405312:	d969      	bls.n	4053e8 <__udivmoddi4+0x2b8>
  405314:	3902      	subs	r1, #2
  405316:	443b      	add	r3, r7
  405318:	1b9b      	subs	r3, r3, r6
  40531a:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
  40531e:	e78e      	b.n	40523e <__udivmoddi4+0x10e>
  405320:	f1c1 0e20 	rsb	lr, r1, #32
  405324:	fa22 f40e 	lsr.w	r4, r2, lr
  405328:	408b      	lsls	r3, r1
  40532a:	4323      	orrs	r3, r4
  40532c:	fa20 f70e 	lsr.w	r7, r0, lr
  405330:	fa06 f401 	lsl.w	r4, r6, r1
  405334:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  405338:	fa26 f60e 	lsr.w	r6, r6, lr
  40533c:	433c      	orrs	r4, r7
  40533e:	fbb6 f9fc 	udiv	r9, r6, ip
  405342:	0c27      	lsrs	r7, r4, #16
  405344:	fb0c 6619 	mls	r6, ip, r9, r6
  405348:	fa1f f883 	uxth.w	r8, r3
  40534c:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
  405350:	fb09 f708 	mul.w	r7, r9, r8
  405354:	42b7      	cmp	r7, r6
  405356:	fa02 f201 	lsl.w	r2, r2, r1
  40535a:	fa00 fa01 	lsl.w	sl, r0, r1
  40535e:	d908      	bls.n	405372 <__udivmoddi4+0x242>
  405360:	18f6      	adds	r6, r6, r3
  405362:	f109 30ff 	add.w	r0, r9, #4294967295
  405366:	d241      	bcs.n	4053ec <__udivmoddi4+0x2bc>
  405368:	42b7      	cmp	r7, r6
  40536a:	d93f      	bls.n	4053ec <__udivmoddi4+0x2bc>
  40536c:	f1a9 0902 	sub.w	r9, r9, #2
  405370:	441e      	add	r6, r3
  405372:	1bf6      	subs	r6, r6, r7
  405374:	b2a0      	uxth	r0, r4
  405376:	fbb6 f4fc 	udiv	r4, r6, ip
  40537a:	fb0c 6614 	mls	r6, ip, r4, r6
  40537e:	ea40 4706 	orr.w	r7, r0, r6, lsl #16
  405382:	fb04 f808 	mul.w	r8, r4, r8
  405386:	45b8      	cmp	r8, r7
  405388:	d907      	bls.n	40539a <__udivmoddi4+0x26a>
  40538a:	18ff      	adds	r7, r7, r3
  40538c:	f104 30ff 	add.w	r0, r4, #4294967295
  405390:	d228      	bcs.n	4053e4 <__udivmoddi4+0x2b4>
  405392:	45b8      	cmp	r8, r7
  405394:	d926      	bls.n	4053e4 <__udivmoddi4+0x2b4>
  405396:	3c02      	subs	r4, #2
  405398:	441f      	add	r7, r3
  40539a:	ea44 4009 	orr.w	r0, r4, r9, lsl #16
  40539e:	ebc8 0707 	rsb	r7, r8, r7
  4053a2:	fba0 8902 	umull	r8, r9, r0, r2
  4053a6:	454f      	cmp	r7, r9
  4053a8:	4644      	mov	r4, r8
  4053aa:	464e      	mov	r6, r9
  4053ac:	d314      	bcc.n	4053d8 <__udivmoddi4+0x2a8>
  4053ae:	d029      	beq.n	405404 <__udivmoddi4+0x2d4>
  4053b0:	b365      	cbz	r5, 40540c <__udivmoddi4+0x2dc>
  4053b2:	ebba 0304 	subs.w	r3, sl, r4
  4053b6:	eb67 0706 	sbc.w	r7, r7, r6
  4053ba:	fa07 fe0e 	lsl.w	lr, r7, lr
  4053be:	40cb      	lsrs	r3, r1
  4053c0:	40cf      	lsrs	r7, r1
  4053c2:	ea4e 0303 	orr.w	r3, lr, r3
  4053c6:	e885 0088 	stmia.w	r5, {r3, r7}
  4053ca:	2100      	movs	r1, #0
  4053cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4053d0:	4613      	mov	r3, r2
  4053d2:	e6f8      	b.n	4051c6 <__udivmoddi4+0x96>
  4053d4:	4610      	mov	r0, r2
  4053d6:	e6e0      	b.n	40519a <__udivmoddi4+0x6a>
  4053d8:	ebb8 0402 	subs.w	r4, r8, r2
  4053dc:	eb69 0603 	sbc.w	r6, r9, r3
  4053e0:	3801      	subs	r0, #1
  4053e2:	e7e5      	b.n	4053b0 <__udivmoddi4+0x280>
  4053e4:	4604      	mov	r4, r0
  4053e6:	e7d8      	b.n	40539a <__udivmoddi4+0x26a>
  4053e8:	4611      	mov	r1, r2
  4053ea:	e795      	b.n	405318 <__udivmoddi4+0x1e8>
  4053ec:	4681      	mov	r9, r0
  4053ee:	e7c0      	b.n	405372 <__udivmoddi4+0x242>
  4053f0:	468a      	mov	sl, r1
  4053f2:	e77c      	b.n	4052ee <__udivmoddi4+0x1be>
  4053f4:	3b02      	subs	r3, #2
  4053f6:	443c      	add	r4, r7
  4053f8:	e748      	b.n	40528c <__udivmoddi4+0x15c>
  4053fa:	4608      	mov	r0, r1
  4053fc:	e70a      	b.n	405214 <__udivmoddi4+0xe4>
  4053fe:	3802      	subs	r0, #2
  405400:	443e      	add	r6, r7
  405402:	e72f      	b.n	405264 <__udivmoddi4+0x134>
  405404:	45c2      	cmp	sl, r8
  405406:	d3e7      	bcc.n	4053d8 <__udivmoddi4+0x2a8>
  405408:	463e      	mov	r6, r7
  40540a:	e7d1      	b.n	4053b0 <__udivmoddi4+0x280>
  40540c:	4629      	mov	r1, r5
  40540e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405412:	bf00      	nop

00405414 <__aeabi_idiv0>:
  405414:	4770      	bx	lr
  405416:	bf00      	nop
  405418:	202d2d0a 	.word	0x202d2d0a
  40541c:	20434441 	.word	0x20434441
  405420:	61686e45 	.word	0x61686e45
  405424:	6465636e 	.word	0x6465636e
  405428:	73655220 	.word	0x73655220
  40542c:	74756c6f 	.word	0x74756c6f
  405430:	206e6f69 	.word	0x206e6f69
  405434:	6d617845 	.word	0x6d617845
  405438:	20656c70 	.word	0x20656c70
  40543c:	0a0d2d2d 	.word	0x0a0d2d2d
  405440:	53202d2d 	.word	0x53202d2d
  405444:	4e344d41 	.word	0x4e344d41
  405448:	4c50585f 	.word	0x4c50585f
  40544c:	454e4941 	.word	0x454e4941
  405450:	52505f44 	.word	0x52505f44
  405454:	2d2d204f 	.word	0x2d2d204f
  405458:	2d2d0a0d 	.word	0x2d2d0a0d
  40545c:	6d6f4320 	.word	0x6d6f4320
  405460:	656c6970 	.word	0x656c6970
  405464:	4f203a64 	.word	0x4f203a64
  405468:	32207463 	.word	0x32207463
  40546c:	30322034 	.word	0x30322034
  405470:	32203731 	.word	0x32203731
  405474:	36353a30 	.word	0x36353a30
  405478:	2039313a 	.word	0x2039313a
  40547c:	000d2d2d 	.word	0x000d2d2d
  405480:	2d2d0d0a 	.word	0x2d2d0d0a
  405484:	65727020 	.word	0x65727020
  405488:	61207373 	.word	0x61207373
  40548c:	79656b20 	.word	0x79656b20
  405490:	206f7420 	.word	0x206f7420
  405494:	656c6573 	.word	0x656c6573
  405498:	74207463 	.word	0x74207463
  40549c:	72206568 	.word	0x72206568
  4054a0:	6c6f7365 	.word	0x6c6f7365
  4054a4:	6f697475 	.word	0x6f697475
  4054a8:	6f6d206e 	.word	0x6f6d206e
  4054ac:	2d2d6564 	.word	0x2d2d6564
  4054b0:	2d2d0d0a 	.word	0x2d2d0d0a
  4054b4:	203a6120 	.word	0x203a6120
  4054b8:	6d726f4e 	.word	0x6d726f4e
  4054bc:	52206c61 	.word	0x52206c61
  4054c0:	6c6f7365 	.word	0x6c6f7365
  4054c4:	6f697475 	.word	0x6f697475
  4054c8:	6f4d206e 	.word	0x6f4d206e
  4054cc:	202c6564 	.word	0x202c6564
  4054d0:	69622d38 	.word	0x69622d38
  4054d4:	2d2d2074 	.word	0x2d2d2074
  4054d8:	2d2d0d0a 	.word	0x2d2d0d0a
  4054dc:	203a6220 	.word	0x203a6220
  4054e0:	6d726f4e 	.word	0x6d726f4e
  4054e4:	52206c61 	.word	0x52206c61
  4054e8:	6c6f7365 	.word	0x6c6f7365
  4054ec:	6f697475 	.word	0x6f697475
  4054f0:	6f4d206e 	.word	0x6f4d206e
  4054f4:	202c6564 	.word	0x202c6564
  4054f8:	622d3031 	.word	0x622d3031
  4054fc:	2d207469 	.word	0x2d207469
  405500:	2d0d0a2d 	.word	0x2d0d0a2d
  405504:	3a63202d 	.word	0x3a63202d
  405508:	686e4520 	.word	0x686e4520
  40550c:	65636e61 	.word	0x65636e61
  405510:	65522064 	.word	0x65522064
  405514:	756c6f73 	.word	0x756c6f73
  405518:	6e6f6974 	.word	0x6e6f6974
  40551c:	646f4d20 	.word	0x646f4d20
  405520:	31202c65 	.word	0x31202c65
  405524:	69622d31 	.word	0x69622d31
  405528:	2d2d2074 	.word	0x2d2d2074
  40552c:	2d2d0d0a 	.word	0x2d2d0d0a
  405530:	203a6420 	.word	0x203a6420
  405534:	61686e45 	.word	0x61686e45
  405538:	6465636e 	.word	0x6465636e
  40553c:	73655220 	.word	0x73655220
  405540:	74756c6f 	.word	0x74756c6f
  405544:	206e6f69 	.word	0x206e6f69
  405548:	65646f4d 	.word	0x65646f4d
  40554c:	3231202c 	.word	0x3231202c
  405550:	7469622d 	.word	0x7469622d
  405554:	0a2d2d20 	.word	0x0a2d2d20
  405558:	0000000d 	.word	0x0000000d
  40555c:	00006325 	.word	0x00006325
  405560:	74655320 	.word	0x74655320
  405564:	73655220 	.word	0x73655220
  405568:	74756c6f 	.word	0x74756c6f
  40556c:	206e6f69 	.word	0x206e6f69
  405570:	4e206f74 	.word	0x4e206f74
  405574:	616d726f 	.word	0x616d726f
  405578:	2d38206c 	.word	0x2d38206c
  40557c:	20746962 	.word	0x20746962
  405580:	00000d0a 	.word	0x00000d0a
  405584:	69755120 	.word	0x69755120
  405588:	6f432074 	.word	0x6f432074
  40558c:	6769666e 	.word	0x6769666e
  405590:	74617275 	.word	0x74617275
  405594:	206e6f69 	.word	0x206e6f69
  405598:	00000d0a 	.word	0x00000d0a
  40559c:	74655320 	.word	0x74655320
  4055a0:	73655220 	.word	0x73655220
  4055a4:	74756c6f 	.word	0x74756c6f
  4055a8:	206e6f69 	.word	0x206e6f69
  4055ac:	4e206f74 	.word	0x4e206f74
  4055b0:	616d726f 	.word	0x616d726f
  4055b4:	3031206c 	.word	0x3031206c
  4055b8:	7469622d 	.word	0x7469622d
  4055bc:	000d0a20 	.word	0x000d0a20
  4055c0:	74655320 	.word	0x74655320
  4055c4:	73655220 	.word	0x73655220
  4055c8:	74756c6f 	.word	0x74756c6f
  4055cc:	206e6f69 	.word	0x206e6f69
  4055d0:	45206f74 	.word	0x45206f74
  4055d4:	6e61686e 	.word	0x6e61686e
  4055d8:	20646563 	.word	0x20646563
  4055dc:	622d3131 	.word	0x622d3131
  4055e0:	0a207469 	.word	0x0a207469
  4055e4:	0000000d 	.word	0x0000000d
  4055e8:	74655320 	.word	0x74655320
  4055ec:	73655220 	.word	0x73655220
  4055f0:	74756c6f 	.word	0x74756c6f
  4055f4:	206e6f69 	.word	0x206e6f69
  4055f8:	45206f74 	.word	0x45206f74
  4055fc:	6e61686e 	.word	0x6e61686e
  405600:	20646563 	.word	0x20646563
  405604:	622d3231 	.word	0x622d3231
  405608:	0a207469 	.word	0x0a207469
  40560c:	0000000d 	.word	0x0000000d
  405610:	56202d2d 	.word	0x56202d2d
  405614:	61746c6f 	.word	0x61746c6f
  405618:	69206567 	.word	0x69206567
  40561c:	25203a73 	.word	0x25203a73
  405620:	766d6434 	.word	0x766d6434
  405624:	00000a0d 	.word	0x00000a0d

00405628 <adc_interrupt_mask>:
  405628:	00000001 00000002 00000004 00000008     ................
  405638:	00000010 00000020 00000040 00000080     .... ...@.......
  405648:	00000100 00000200 00000400 00000800     ................
  405658:	00001000 00002000 00004000 00008000     ..... ...@......
  405668:	00010000 00080000 00800000 01000000     ................
  405678:	02000000 04000000 08000000 10000000     ................
  405688:	00000043                                C...

0040568c <_global_impure_ptr>:
  40568c:	20000008 0000000a                       ... ....

00405694 <zeroes.6993>:
  405694:	30303030 30303030 30303030 30303030     0000000000000000
  4056a4:	33323130 37363534 42413938 46454443     0123456789ABCDEF
  4056b4:	00000000 33323130 37363534 62613938     ....0123456789ab
  4056c4:	66656463 00000000 6c756e28 0000296c     cdef....(null)..

004056d4 <blanks.6992>:
  4056d4:	20202020 20202020 20202020 20202020                     

004056e4 <basefix.6460>:
  4056e4:	0001000a 00030002 00050004 00070006     ................
  4056f4:	00090008 000b000a 000d000c 000f000e     ................
  405704:	00000010                                ....

00405708 <_ctype_>:
  405708:	20202000 20202020 28282020 20282828     .         ((((( 
  405718:	20202020 20202020 20202020 20202020                     
  405728:	10108820 10101010 10101010 10101010      ...............
  405738:	04040410 04040404 10040404 10101010     ................
  405748:	41411010 41414141 01010101 01010101     ..AAAAAA........
  405758:	01010101 01010101 01010101 10101010     ................
  405768:	42421010 42424242 02020202 02020202     ..BBBBBB........
  405778:	02020202 02020202 02020202 10101010     ................
  405788:	00000020 00000000 00000000 00000000      ...............
	...

0040580c <_init>:
  40580c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40580e:	bf00      	nop
  405810:	bcf8      	pop	{r3, r4, r5, r6, r7}
  405812:	bc08      	pop	{r3}
  405814:	469e      	mov	lr, r3
  405816:	4770      	bx	lr

00405818 <__init_array_start>:
  405818:	00402b51 	.word	0x00402b51

0040581c <__frame_dummy_init_array_entry>:
  40581c:	004000e5                                ..@.

00405820 <_fini>:
  405820:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405822:	bf00      	nop
  405824:	bcf8      	pop	{r3, r4, r5, r6, r7}
  405826:	bc08      	pop	{r3}
  405828:	469e      	mov	lr, r3
  40582a:	4770      	bx	lr

0040582c <__fini_array_start>:
  40582c:	004000c1 	.word	0x004000c1
